{
  "contractName": "User",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getUserName",
      "outputs": [
        {
          "internalType": "string",
          "name": "username",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUserType",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "fetchEmployees",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "_address",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "username",
              "type": "string"
            },
            {
              "internalType": "enum User.Access",
              "name": "access",
              "type": "uint8"
            }
          ],
          "internalType": "struct User.Employee[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "username",
          "type": "string"
        }
      ],
      "name": "createEmployer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_employeeAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_employeeName",
          "type": "string"
        }
      ],
      "name": "addEmployee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_employeeAddress",
          "type": "address"
        }
      ],
      "name": "changeAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_employeeAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_employeeName\",\"type\":\"string\"}],\"name\":\"addEmployee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_employeeAddress\",\"type\":\"address\"}],\"name\":\"changeAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"}],\"name\":\"createEmployer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fetchEmployees\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"enum User.Access\",\"name\":\"access\",\"type\":\"uint8\"}],\"internalType\":\"struct User.Employee[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getUserName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserType\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addEmployee(address,string)\":{\"params\":{\"_employeeAddress\":\"- The address of the employee.\",\"_employeeName\":\"- The username of the employee.\"}},\"changeAccess(address)\":{\"params\":{\"_employeeAddress\":\"- The address of the employee.\"}},\"getUserName(address)\":{\"params\":{\"_address\":\"- The address of the user.\"}},\"getUserType(address)\":{\"params\":{\"user\":\"- The address of the user.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addEmployee(address,string)\":{\"notice\":\"- This function is used to add a employee to the organization owned by an employer.\"},\"changeAccess(address)\":{\"notice\":\"- This function is used to change the access of an employee.\"},\"createEmployer(string)\":{\"notice\":\"- This function is used to create a new employer/owner\"},\"fetchEmployees()\":{\"notice\":\"- This function is used to determine if the user is an employee of an organization.\"},\"getUserName(address)\":{\"notice\":\"- This function is used to retrieve the username based on wallet address\"},\"getUserType(address)\":{\"notice\":\"- This function is used to determine the type of user 1 = employer. 2 = employee. 3 = unenrolled\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/User.sol\":\"User\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1500},\"remappings\":[]},\"sources\":{\"project:/contracts/User.sol\":{\"keccak256\":\"0xd036c25a87c10888dca351c5d6fe6c807a6af6eb7469b7b0ab864d5f8444e12a\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://91d9a8a7d7d08caaa0e75eaa127171b88a275b3d224ebcad4b813fa137ed0f7b\",\"dweb:/ipfs/QmSPpPE8q8p2fujAssfrYdeZF1m9qRzKWSBjK1oFB6jniQ\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061008f576000357c010000000000000000000000000000000000000000000000000000000090048063c95d75f01161006d578063c95d75f0146100e8578063d84f55ee146100fb578063f403688a1461011b57600080fd5b80630a67a48d146100945780638b3f863f146100b2578063a502e808146100d3575b600080fd5b61009c61012e565b6040516100a99190610ca8565b60405180910390f35b6100c56100c0366004610d95565b6103c1565b6040519081526020016100a9565b6100e66100e1366004610e73565b61043a565b005b6100e66100f6366004610ec1565b6107ef565b61010e610109366004610d95565b610945565b6040516100a99190610efe565b6100e6610129366004610d95565b6109fe565b3360009081526004602052604090205460609060ff166101d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f6e6c7920616e20456d706c6f7965722063616e206d616b652074686973207260448201527f657175657374000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b3360009081526002602052604081205474010000000000000000000000000000000000000000900460ff16908167ffffffffffffffff81111561021a5761021a610db7565b60405190808252806020026020018201604052801561025357816020015b610240610b4c565b8152602001906001900390816102385790505b50905060005b8260ff168160ff1610156103ba5733600090815260036020526040812090610282836001610f40565b60ff1681526020808201929092526040908101600020815160608101909252805473ffffffffffffffffffffffffffffffffffffffff16825260018101805492939192918401916102d290610f65565b80601f01602080910402602001604051908101604052809291908181526020018280546102fe90610f65565b801561034b5780601f106103205761010080835404028352916020019161034b565b820191906000526020600020905b81548152906001019060200180831161032e57829003601f168201915b5050509183525050600282015460209091019060ff16600181111561037257610372610c79565b600181111561038357610383610c79565b81525050828260ff168151811061039c5761039c610fb9565b602002602001018190525080806103b290610fe8565b915050610259565b5092915050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526004602052604081205460ff16156103f757506001919050565b73ffffffffffffffffffffffffffffffffffffffff821660009081526005602052604090205460ff161561042d57506002919050565b506003919050565b919050565b3360009081526004602052604090205460ff166104d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f6e6c7920616e20656d706c6f7965722063616e206d616b652074686973207260448201527f657175657374000000000000000000000000000000000000000000000000000060648201526084016101cc565b73ffffffffffffffffffffffffffffffffffffffff821660009081526005602052604090205460ff161561058f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f456d706c6f79656520697320616c72656164792072656769737465726564207460448201527f6f20616e206f7267616e697a6174696f6e00000000000000000000000000000060648201526084016101cc565b6040805160608101825273ffffffffffffffffffffffffffffffffffffffff8416815260208101839052600091810182905233600090815260026020526040812054919250906105fb9074010000000000000000000000000000000000000000900460ff166001610f40565b336000818152600260209081526040808320805460ff871674010000000000000000000000000000000000000000027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff90911617905573ffffffffffffffffffffffffffffffffffffffff898116845260058352818420805460ff1916600190811790915584845282852080547fffffffffffffffffffffffff00000000000000000000000000000000000000009081169097179055808452919093208751815494169390941692909217835585810151805194955086946106e4938501929190910190610b93565b50604082015160028201805460ff19166001838181111561070757610707610c79565b02179055505033600090815260036020908152604080832060ff861684528252909120845181547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178155848201518051869450919261078892600185019290910190610b93565b50604082015160028201805460ff1916600183818111156107ab576107ab610c79565b0217905550505073ffffffffffffffffffffffffffffffffffffffff8416600090815260066020908152604090912084516107e892860190610b93565b5050505050565b3360009081526004602052604090205460ff161561088f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f596f752061726520616c7265616479207265676973746572656420617320616e60448201527f20456d706c6f796572000000000000000000000000000000000000000000000060648201526084016101cc565b60408051808201825233808252600060208084018281529282526002815284822084518154945160ff1674010000000000000000000000000000000000000000027fffffffffffffffffffffff00000000000000000000000000000000000000000090951673ffffffffffffffffffffffffffffffffffffffff91909116179390931790925560048252838120805460ff191660011790556006825292909220835191926109409290850190610b93565b505050565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260066020526040902080546060919061097990610f65565b80601f01602080910402602001604051908101604052809291908181526020018280546109a590610f65565b80156109f25780601f106109c7576101008083540402835291602001916109f2565b820191906000526020600020905b8154815290600101906020018083116109d557829003601f168201915b50505050509050919050565b3360009081526004602052604090205460ff16610a9d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f6e6c7920616e20656d706c6f7965722063616e206d616b652074686973207260448201527f657175657374000000000000000000000000000000000000000000000000000060648201526084016101cc565b73ffffffffffffffffffffffffffffffffffffffff811660009081526001602052604081206002015460ff1690816001811115610adc57610adc610c79565b1415610b1a575073ffffffffffffffffffffffffffffffffffffffff166000908152600160208190526040909120600201805460ff19169091179055565b5073ffffffffffffffffffffffffffffffffffffffff166000908152600160205260409020600201805460ff19169055565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160006001811115610b8e57610b8e610c79565b905290565b828054610b9f90610f65565b90600052602060002090601f016020900481019282610bc15760008555610c07565b82601f10610bda57805160ff1916838001178555610c07565b82800160010185558215610c07579182015b82811115610c07578251825591602001919060010190610bec565b50610c13929150610c17565b5090565b5b80821115610c135760008155600101610c18565b6000815180845260005b81811015610c5257602081850181015186830182015201610c36565b81811115610c64576000602083870101525b50601f01601f19169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6020808252825182820181905260009190604090818501908084028601830187850186805b84811015610d6257603f198a85030186528251606073ffffffffffffffffffffffffffffffffffffffff825116865289820151818b880152610d1182880182610c2c565b928a01519291505060028210610d4e577f4e487b710000000000000000000000000000000000000000000000000000000084526021600452602484fd5b948801529487019491870191600101610ccd565b50919998505050505050505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461043557600080fd5b600060208284031215610da757600080fd5b610db082610d71565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f830112610df757600080fd5b813567ffffffffffffffff80821115610e1257610e12610db7565b604051601f8301601f19908116603f01168101908282118183101715610e3a57610e3a610db7565b81604052838152866020858801011115610e5357600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610e8657600080fd5b610e8f83610d71565b9150602083013567ffffffffffffffff811115610eab57600080fd5b610eb785828601610de6565b9150509250929050565b600060208284031215610ed357600080fd5b813567ffffffffffffffff811115610eea57600080fd5b610ef684828501610de6565b949350505050565b602081526000610db06020830184610c2c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060ff821660ff84168060ff03821115610f5d57610f5d610f11565b019392505050565b600281046001821680610f7957607f821691505b60208210811415610fb3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060ff821660ff811415610fff57610fff610f11565b6001019291505056fea26469706673582212205f0dc07229fcf52af0daa127775b8fce3458a5fde9c7f2ad13f4cfca7775ed9164736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7482:1",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:1",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "64:422:1",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "74:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "94:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "88:5:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "88:12:1"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "78:6:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "116:3:1"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "121:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "109:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "109:19:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "109:19:1"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "137:10:1",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "146:1:1",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "141:1:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "208:110:1",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "222:14:1",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "232:4:1",
                          "type": "",
                          "value": "0x20"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "226:2:1",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "264:3:1"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "269:1:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "260:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "260:11:1"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "273:2:1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "256:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "256:20:1"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "292:5:1"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "299:1:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "288:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "288:13:1"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "303:2:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "284:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "284:22:1"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "278:5:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "278:29:1"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "249:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "249:59:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "249:59:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "167:1:1"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "170:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "164:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "164:13:1"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "178:21:1",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "180:17:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "189:1:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "192:4:1",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "185:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "185:12:1"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "180:1:1"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "160:3:1",
                    "statements": []
                  },
                  "src": "156:162:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "352:62:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "381:3:1"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "386:6:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "377:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "377:16:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "395:4:1",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "373:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "373:27:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "402:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "366:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "366:38:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "366:38:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "333:1:1"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "336:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "330:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "330:13:1"
                  },
                  "nodeType": "YulIf",
                  "src": "327:87:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "423:57:1",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "438:3:1"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "451:6:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "459:2:1",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "447:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "447:15:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "468:2:1",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "464:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "464:7:1"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "443:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "443:29:1"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "434:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "434:39:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "475:4:1",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "430:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "430:50:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "423:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "41:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "48:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:1",
                "type": ""
              }
            ],
            "src": "14:472:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "523:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "540:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "543:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "533:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "533:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "533:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "637:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "640:4:1",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "630:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "630:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "630:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "661:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "664:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "654:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "654:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "654:15:1"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "491:184:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "879:1310:1",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "889:12:1",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "899:2:1",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "893:2:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "910:32:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "928:9:1"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "939:2:1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "924:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "924:18:1"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "914:6:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "958:9:1"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "969:2:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "951:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "951:21:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "951:21:1"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "981:17:1",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "992:6:1"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "985:3:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1007:27:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1027:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1021:5:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1021:13:1"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1011:6:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "1050:6:1"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1058:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1043:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1043:22:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1043:22:1"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1074:12:1",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1084:2:1",
                    "type": "",
                    "value": "64"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1078:2:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1095:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1106:9:1"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1117:2:1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1102:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1102:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1095:3:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1129:54:1",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1151:9:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "1166:6:1"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1174:2:1"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "1162:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1162:15:1"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1147:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1147:31:1"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1180:2:1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1143:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1143:40:1"
                  },
                  "variables": [
                    {
                      "name": "tail_2",
                      "nodeType": "YulTypedName",
                      "src": "1133:6:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1192:29:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1210:6:1"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1218:2:1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1206:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1206:15:1"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "1196:6:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1230:10:1",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1239:1:1",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1234:1:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1249:12:1",
                  "value": {
                    "name": "i",
                    "nodeType": "YulIdentifier",
                    "src": "1260:1:1"
                  },
                  "variables": [
                    {
                      "name": "i_1",
                      "nodeType": "YulTypedName",
                      "src": "1253:3:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1325:835:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "1346:3:1"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "tail_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "1359:6:1"
                                    },
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "1367:9:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "1355:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1355:22:1"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1383:2:1",
                                      "type": "",
                                      "value": "63"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "1379:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1379:7:1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1351:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1351:36:1"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1339:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1339:49:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1339:49:1"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1401:23:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "1417:6:1"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1411:5:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1411:13:1"
                        },
                        "variables": [
                          {
                            "name": "_3",
                            "nodeType": "YulTypedName",
                            "src": "1405:2:1",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1437:14:1",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1447:4:1",
                          "type": "",
                          "value": "0x60"
                        },
                        "variables": [
                          {
                            "name": "_4",
                            "nodeType": "YulTypedName",
                            "src": "1441:2:1",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "tail_2",
                              "nodeType": "YulIdentifier",
                              "src": "1471:6:1"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_3",
                                      "nodeType": "YulIdentifier",
                                      "src": "1489:2:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "1483:5:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1483:9:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1494:42:1",
                                  "type": "",
                                  "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "1479:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1479:58:1"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1464:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1464:74:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1464:74:1"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1551:38:1",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulIdentifier",
                                  "src": "1581:2:1"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1585:2:1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1577:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1577:11:1"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1571:5:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1571:18:1"
                        },
                        "variables": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulTypedName",
                            "src": "1555:12:1",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "tail_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1613:6:1"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1621:2:1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1609:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1609:15:1"
                            },
                            {
                              "name": "_4",
                              "nodeType": "YulIdentifier",
                              "src": "1626:2:1"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1602:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1602:27:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1602:27:1"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1642:62:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "memberValue0",
                              "nodeType": "YulIdentifier",
                              "src": "1674:12:1"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "tail_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1692:6:1"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "1700:2:1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1688:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1688:15:1"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_string",
                            "nodeType": "YulIdentifier",
                            "src": "1656:17:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1656:48:1"
                        },
                        "variables": [
                          {
                            "name": "tail_3",
                            "nodeType": "YulTypedName",
                            "src": "1646:6:1",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1717:40:1",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulIdentifier",
                                  "src": "1749:2:1"
                                },
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1753:2:1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1745:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1745:11:1"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1739:5:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1739:18:1"
                        },
                        "variables": [
                          {
                            "name": "memberValue0_1",
                            "nodeType": "YulTypedName",
                            "src": "1721:14:1",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1815:184:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "1840:1:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1843:77:1",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1833:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1833:88:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1833:88:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1945:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1948:4:1",
                                    "type": "",
                                    "value": "0x21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1938:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1938:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1938:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "1977:1:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1980:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1970:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1970:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1970:15:1"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "memberValue0_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1783:14:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1799:1:1",
                                  "type": "",
                                  "value": "2"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "1780:2:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1780:21:1"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "1773:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1773:29:1"
                        },
                        "nodeType": "YulIf",
                        "src": "1770:229:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "tail_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "2023:6:1"
                                },
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "2031:2:1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2019:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2019:15:1"
                            },
                            {
                              "name": "memberValue0_1",
                              "nodeType": "YulIdentifier",
                              "src": "2036:14:1"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2012:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2012:39:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2012:39:1"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2064:16:1",
                        "value": {
                          "name": "tail_3",
                          "nodeType": "YulIdentifier",
                          "src": "2074:6:1"
                        },
                        "variableNames": [
                          {
                            "name": "tail_2",
                            "nodeType": "YulIdentifier",
                            "src": "2064:6:1"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2093:25:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "2107:6:1"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "2115:2:1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2103:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2103:15:1"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2093:6:1"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2131:19:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "2142:3:1"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "2147:2:1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2138:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2138:12:1"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2131:3:1"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i_1",
                        "nodeType": "YulIdentifier",
                        "src": "1281:3:1"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1286:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1278:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1278:15:1"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1294:22:1",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1296:18:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "i_1",
                              "nodeType": "YulIdentifier",
                              "src": "1307:3:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1312:1:1",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1303:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1303:11:1"
                        },
                        "variableNames": [
                          {
                            "name": "i_1",
                            "nodeType": "YulIdentifier",
                            "src": "1296:3:1"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1274:3:1",
                    "statements": []
                  },
                  "src": "1270:890:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2169:14:1",
                  "value": {
                    "name": "tail_2",
                    "nodeType": "YulIdentifier",
                    "src": "2177:6:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2169:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_struct$_Employee_$55_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Employee_$55_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "848:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "859:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "870:4:1",
                "type": ""
              }
            ],
            "src": "680:1509:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2243:147:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2253:29:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2275:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2262:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2262:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2253:5:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2368:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2377:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2380:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2370:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2370:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2370:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2304:5:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2315:5:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2322:42:1",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2311:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2311:54:1"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2301:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2301:65:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2294:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2294:73:1"
                  },
                  "nodeType": "YulIf",
                  "src": "2291:93:1"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2222:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2233:5:1",
                "type": ""
              }
            ],
            "src": "2194:196:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2465:116:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2511:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2520:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2523:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2513:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2513:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2513:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2486:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2495:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2482:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2482:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2507:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2478:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2478:32:1"
                  },
                  "nodeType": "YulIf",
                  "src": "2475:52:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2536:39:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2565:9:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2546:18:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2546:29:1"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2536:6:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2431:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2442:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2454:6:1",
                "type": ""
              }
            ],
            "src": "2395:186:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2687:76:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2697:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2709:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2720:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2705:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2705:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2697:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2739:9:1"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2750:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2732:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2732:25:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2732:25:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2656:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2667:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2678:4:1",
                "type": ""
              }
            ],
            "src": "2586:177:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2800:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2817:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2820:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2810:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2810:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2810:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2914:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2917:4:1",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2907:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2907:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2907:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2938:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2941:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2931:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2931:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2931:15:1"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "2768:184:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3010:666:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3059:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3068:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3071:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3061:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3061:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3061:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3038:6:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3046:4:1",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3034:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3034:17:1"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "3053:3:1"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3030:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3030:27:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3023:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3023:35:1"
                  },
                  "nodeType": "YulIf",
                  "src": "3020:55:1"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3084:30:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3107:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3094:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3094:20:1"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3088:2:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3123:28:1",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3133:18:1",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "3127:2:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3174:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "3176:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3176:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3176:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3166:2:1"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "3170:2:1"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3163:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3163:10:1"
                  },
                  "nodeType": "YulIf",
                  "src": "3160:36:1"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3205:17:1",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3219:2:1",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "3215:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3215:7:1"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "3209:2:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3231:23:1",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3251:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3245:5:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3245:9:1"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "3235:6:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3263:71:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "3285:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "3309:2:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3313:4:1",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3305:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3305:13:1"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "3320:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "3301:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3301:22:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3325:2:1",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3297:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3297:31:1"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "3330:2:1"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3293:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3293:40:1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3281:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3281:53:1"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "3267:10:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3393:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "3395:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3395:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3395:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3352:10:1"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "3364:2:1"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3349:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3349:18:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3372:10:1"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3384:6:1"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3369:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3369:22:1"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "3346:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3346:46:1"
                  },
                  "nodeType": "YulIf",
                  "src": "3343:72:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3431:2:1",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "3435:10:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3424:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3424:22:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3424:22:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "3462:6:1"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3470:2:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3455:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3455:18:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3455:18:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3521:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3530:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3533:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3523:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3523:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3523:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3496:6:1"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3504:2:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3492:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3492:15:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3509:4:1",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3488:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3488:26:1"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "3516:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3485:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3485:35:1"
                  },
                  "nodeType": "YulIf",
                  "src": "3482:55:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3563:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3571:4:1",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3559:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3559:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3582:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3590:4:1",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3578:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3578:17:1"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3597:2:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "3546:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3546:54:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3546:54:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "3624:6:1"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3632:2:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3620:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3620:15:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3637:4:1",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3616:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3616:26:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3644:1:1",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3609:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3609:37:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3609:37:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3655:15:1",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "3664:6:1"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "3655:5:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2984:6:1",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2992:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "3000:5:1",
                "type": ""
              }
            ],
            "src": "2957:719:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3778:299:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3824:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3833:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3836:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3826:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3826:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3826:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3799:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3808:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3795:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3795:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3820:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3791:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3791:32:1"
                  },
                  "nodeType": "YulIf",
                  "src": "3788:52:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3849:39:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3878:9:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3859:18:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3859:29:1"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3849:6:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3897:46:1",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3928:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3939:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3924:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3924:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3911:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3911:32:1"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "3901:6:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3986:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3995:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3998:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3988:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3988:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3988:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3958:6:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3966:18:1",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3955:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3955:30:1"
                  },
                  "nodeType": "YulIf",
                  "src": "3952:50:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4011:60:1",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4043:9:1"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4054:6:1"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4039:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4039:22:1"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4063:7:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "4021:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4021:50:1"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4011:6:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3736:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3747:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3759:6:1",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3767:6:1",
                "type": ""
              }
            ],
            "src": "3681:396:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4162:242:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4208:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4217:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4220:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4210:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4210:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4210:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4183:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4192:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4179:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4179:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4204:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4175:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4175:32:1"
                  },
                  "nodeType": "YulIf",
                  "src": "4172:52:1"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4233:37:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4260:9:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4247:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4247:23:1"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "4237:6:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4313:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4322:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4325:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4315:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4315:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4315:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4285:6:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4293:18:1",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4282:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4282:30:1"
                  },
                  "nodeType": "YulIf",
                  "src": "4279:50:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4338:60:1",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4370:9:1"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4381:6:1"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4366:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4366:22:1"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4390:7:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "4348:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4348:50:1"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4338:6:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4128:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4139:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4151:6:1",
                "type": ""
              }
            ],
            "src": "4082:322:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4530:99:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4547:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4558:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4540:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4540:21:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4540:21:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4570:53:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4596:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4608:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4619:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4604:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4604:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "4578:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4578:45:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4570:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4499:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4510:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4521:4:1",
                "type": ""
              }
            ],
            "src": "4409:220:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4808:228:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4825:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4836:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4818:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4818:21:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4818:21:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4859:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4870:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4855:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4855:18:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4875:2:1",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4848:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4848:30:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4848:30:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4898:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4909:2:1",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4894:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4894:18:1"
                      },
                      {
                        "hexValue": "4f6e6c7920616e20456d706c6f7965722063616e206d616b6520746869732072",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4914:34:1",
                        "type": "",
                        "value": "Only an Employer can make this r"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4887:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4887:62:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4887:62:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4969:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4980:2:1",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4965:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4965:18:1"
                      },
                      {
                        "hexValue": "657175657374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4985:8:1",
                        "type": "",
                        "value": "equest"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4958:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4958:36:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4958:36:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5003:27:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5015:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5026:3:1",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5011:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5011:19:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5003:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3be4d26246e2bce2379a9e4d5831e0ca9f90360d730d99a00e3c2328d8c7a9e2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4785:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4799:4:1",
                "type": ""
              }
            ],
            "src": "4634:402:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5073:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5090:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5093:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5083:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5083:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5083:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5187:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5190:4:1",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5180:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5180:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5180:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5211:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5214:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5204:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5204:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5204:15:1"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "5041:184:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5276:158:1",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5286:23:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5301:1:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5304:4:1",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5297:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5297:12:1"
                  },
                  "variables": [
                    {
                      "name": "x_1",
                      "nodeType": "YulTypedName",
                      "src": "5290:3:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5318:23:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5333:1:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5336:4:1",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5329:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5329:12:1"
                  },
                  "variables": [
                    {
                      "name": "y_1",
                      "nodeType": "YulTypedName",
                      "src": "5322:3:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5377:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5379:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5379:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5379:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x_1",
                        "nodeType": "YulIdentifier",
                        "src": "5356:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5365:4:1",
                            "type": "",
                            "value": "0xff"
                          },
                          {
                            "name": "y_1",
                            "nodeType": "YulIdentifier",
                            "src": "5371:3:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5361:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5361:14:1"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5353:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5353:23:1"
                  },
                  "nodeType": "YulIf",
                  "src": "5350:49:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5408:20:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x_1",
                        "nodeType": "YulIdentifier",
                        "src": "5419:3:1"
                      },
                      {
                        "name": "y_1",
                        "nodeType": "YulIdentifier",
                        "src": "5424:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5415:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5415:13:1"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "5408:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5259:1:1",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5262:1:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "5268:3:1",
                "type": ""
              }
            ],
            "src": "5230:204:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5494:382:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5504:22:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "5518:4:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5524:1:1",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "5514:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5514:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "5504:6:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5535:38:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "5565:4:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5571:1:1",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5561:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5561:12:1"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "5539:18:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5612:31:1",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5614:27:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "5628:6:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5636:4:1",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "5624:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5624:17:1"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5614:6:1"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "5592:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5585:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5585:26:1"
                  },
                  "nodeType": "YulIf",
                  "src": "5582:61:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5702:168:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5723:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5726:77:1",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5716:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5716:88:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5716:88:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5824:1:1",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5827:4:1",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5817:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5817:15:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5817:15:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5852:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5855:4:1",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5845:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5845:15:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5845:15:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "5658:18:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5681:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5689:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "5678:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5678:14:1"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "5655:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5655:38:1"
                  },
                  "nodeType": "YulIf",
                  "src": "5652:218:1"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "5474:4:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5483:6:1",
                "type": ""
              }
            ],
            "src": "5439:437:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5913:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5930:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5933:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5923:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5923:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5923:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6027:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6030:4:1",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6020:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6020:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6020:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6051:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6054:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6044:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6044:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6044:15:1"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "5881:184:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6115:130:1",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6125:31:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6144:5:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6151:4:1",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6140:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6140:16:1"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "6129:7:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6186:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6188:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6188:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6188:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "6171:7:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6180:4:1",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "6168:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6168:17:1"
                  },
                  "nodeType": "YulIf",
                  "src": "6165:43:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6217:22:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "6228:7:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6237:1:1",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6224:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6224:15:1"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "6217:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6097:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "6107:3:1",
                "type": ""
              }
            ],
            "src": "6070:175:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6424:228:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6441:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6452:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6434:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6434:21:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6434:21:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6475:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6486:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6471:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6471:18:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6491:2:1",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6464:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6464:30:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6464:30:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6514:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6525:2:1",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6510:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6510:18:1"
                      },
                      {
                        "hexValue": "4f6e6c7920616e20656d706c6f7965722063616e206d616b6520746869732072",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6530:34:1",
                        "type": "",
                        "value": "Only an employer can make this r"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6503:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6503:62:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6503:62:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6585:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6596:2:1",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6581:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6581:18:1"
                      },
                      {
                        "hexValue": "657175657374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6601:8:1",
                        "type": "",
                        "value": "equest"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6574:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6574:36:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6574:36:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6619:27:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6631:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6642:3:1",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6627:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6627:19:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6619:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_281258d9cf6edfe93f63d6df9f03ebf04b784e3822c6ead2a10b2edcd1112463__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6401:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6415:4:1",
                "type": ""
              }
            ],
            "src": "6250:402:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6831:239:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6848:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6859:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6841:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6841:21:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6841:21:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6882:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6893:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6878:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6878:18:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6898:2:1",
                        "type": "",
                        "value": "49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6871:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6871:30:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6871:30:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6921:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6932:2:1",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6917:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6917:18:1"
                      },
                      {
                        "hexValue": "456d706c6f79656520697320616c726561647920726567697374657265642074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6937:34:1",
                        "type": "",
                        "value": "Employee is already registered t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6910:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6910:62:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6910:62:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6992:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7003:2:1",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6988:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6988:18:1"
                      },
                      {
                        "hexValue": "6f20616e206f7267616e697a6174696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7008:19:1",
                        "type": "",
                        "value": "o an organization"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6981:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6981:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6981:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7037:27:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7049:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7060:3:1",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7045:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7045:19:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7037:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f75202a11d9e6d1f88f37bd99e67f91a4030c943fd82324c1edb54cc330968b5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6808:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6822:4:1",
                "type": ""
              }
            ],
            "src": "6657:413:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7249:231:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7266:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7277:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7259:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7259:21:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7259:21:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7300:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7311:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7296:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7296:18:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7316:2:1",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7289:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7289:30:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7289:30:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7339:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7350:2:1",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7335:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7335:18:1"
                      },
                      {
                        "hexValue": "596f752061726520616c7265616479207265676973746572656420617320616e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7355:34:1",
                        "type": "",
                        "value": "You are already registered as an"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7328:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7328:62:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7328:62:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7410:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7421:2:1",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7406:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7406:18:1"
                      },
                      {
                        "hexValue": "20456d706c6f796572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7426:11:1",
                        "type": "",
                        "value": " Employer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7399:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7399:39:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7399:39:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7447:27:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7459:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7470:3:1",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7455:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7455:19:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7447:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1a014784f013dd3fe3cec43464793b8d71bd166f6b8d95418a86f63e2589705f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7226:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7240:4:1",
                "type": ""
              }
            ],
            "src": "7075:405:1"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_array$_t_struct$_Employee_$55_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Employee_$55_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let tail_2 := add(add(headStart, mul(length, _1)), _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        let i_1 := i\n        for { } lt(i_1, length) { i_1 := add(i_1, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(63)))\n            let _3 := mload(srcPtr)\n            let _4 := 0x60\n            mstore(tail_2, and(mload(_3), 0xffffffffffffffffffffffffffffffffffffffff))\n            let memberValue0 := mload(add(_3, _1))\n            mstore(add(tail_2, _1), _4)\n            let tail_3 := abi_encode_string(memberValue0, add(tail_2, _4))\n            let memberValue0_1 := mload(add(_3, _2))\n            if iszero(lt(memberValue0_1, 2))\n            {\n                mstore(i, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n                mstore(4, 0x21)\n                revert(i, 0x24)\n            }\n            mstore(add(tail_2, _2), memberValue0_1)\n            tail_2 := tail_3\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_3be4d26246e2bce2379a9e4d5831e0ca9f90360d730d99a00e3c2328d8c7a9e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Only an Employer can make this r\")\n        mstore(add(headStart, 96), \"equest\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint8(x, y) -> sum\n    {\n        let x_1 := and(x, 0xff)\n        let y_1 := and(y, 0xff)\n        if gt(x_1, sub(0xff, y_1)) { panic_error_0x11() }\n        sum := add(x_1, y_1)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_281258d9cf6edfe93f63d6df9f03ebf04b784e3822c6ead2a10b2edcd1112463__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Only an employer can make this r\")\n        mstore(add(headStart, 96), \"equest\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f75202a11d9e6d1f88f37bd99e67f91a4030c943fd82324c1edb54cc330968b5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"Employee is already registered t\")\n        mstore(add(headStart, 96), \"o an organization\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1a014784f013dd3fe3cec43464793b8d71bd166f6b8d95418a86f63e2589705f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"You are already registered as an\")\n        mstore(add(headStart, 96), \" Employer\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 1,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "200:6104:0:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "200:6104:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3155:550;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2791:238;;;;;;:::i;:::-;;:::i;:::-;;;2732:25:1;;;2720:2;2705:18;2791:238:0;2586:177:1;4560:1033:0;;;;;;:::i;:::-;;:::i;:::-;;3802:508;;;;;;:::i;:::-;;:::i;2467:125::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5759:542::-;;;;;;:::i;:::-;;:::i;3155:550::-;3251:10;3240:22;;;;:10;:22;;;;;;3202:17;;3240:22;;3232:73;;;;;;;4836:2:1;3232:73:0;;;4818:21:1;4875:2;4855:18;;;4848:30;4914:34;4894:18;;;4887:62;4985:8;4965:18;;;4958:36;5011:19;;3232:73:0;;;;;;;;;3420:10;3375:20;3398:33;;;:21;:33;;;;;:48;;;;;;;;3487:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3457:60;;3533:11;3528:143;3558:14;3550:22;;:5;:22;;;3528:143;;;3637:10;3617:31;;;;:19;:31;;;;;;3649:9;:5;3657:1;3649:9;:::i;:::-;3617:42;;;;;;;;;;;;;;;;-1:-1:-1;3617:42:0;3598:61;;;;;;;;;;;;;;;;;;;;;3617:42;;3598:61;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3598:61:0;;;-1:-1:-1;;3598:61:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;:9;3608:5;3598:16;;;;;;;;;;:::i;:::-;;;;;;:61;;;;3574:7;;;;;:::i;:::-;;;;3528:143;;;-1:-1:-1;3688:9:0;3155:550;-1:-1:-1;;3155:550:0:o;2791:238::-;2870:16;;;2848:7;2870:16;;;:10;:16;;;;;;;;2867:155;;;-1:-1:-1;2909:1:0;;2791:238;-1:-1:-1;2791:238:0:o;2867:155::-;2931:16;;;;;;;:10;:16;;;;;;;;2927:95;;;-1:-1:-1;2970:1:0;;2791:238;-1:-1:-1;2791:238:0:o;2927:95::-;-1:-1:-1;3009:1:0;;2791:238;-1:-1:-1;2791:238:0:o;2927:95::-;2791:238;;;:::o;4560:1033::-;4673:10;4662:22;;;;:10;:22;;;;;;;;4654:73;;;;;;;6452:2:1;4654:73:0;;;6434:21:1;6491:2;6471:18;;;6464:30;6530:34;6510:18;;;6503:62;6601:8;6581:18;;;6574:36;6627:19;;4654:73:0;6250:402:1;4654:73:0;4747:28;;;;;;;:10;:28;;;;;;;;4746:29;4738:91;;;;;;;6859:2:1;4738:91:0;;;6841:21:1;6898:2;6878:18;;;6871:30;6937:34;6917:18;;;6910:62;7008:19;6988:18;;;6981:47;7045:19;;4738:91:0;6657:413:1;4738:91:0;4898:136;;;;;;;;;;;;;;;;;;;4871:24;;4898:136;;4871:24;4898:136;;5136:10;5095:16;5114:33;;;:21;:33;;;;;:48;4871:163;;-1:-1:-1;5095:16:0;5114:52;;:48;;;;;5165:1;5114:52;:::i;:::-;5235:10;5213:33;;;;:21;:33;;;;;;;;:61;;;;;;;;;;;;;;:33;5315:28;;;;;:10;:28;;;;;:35;;-1:-1:-1;;5315:35:0;-1:-1:-1;5315:35:0;;;;;;5361;;;;;;:48;;;;;;;;;;;5420:41;;;;;;;:52;;;;;;;;;;;;;;;;;;;;;;5095:71;;-1:-1:-1;5464:8:0;;5420:52;;;;;;;;;;;:::i;:::-;-1:-1:-1;5420:52:0;;;;;;;;;-1:-1:-1;;5420:52:0;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;5503:10:0;5483:31;;;;:19;:31;;;;;;;;:43;;;;;;;;;;:54;;;;;;:31;:54;;;;;;;;;;;;;;-1:-1:-1;5483:43:0;;:54;;-1:-1:-1;5483:54:0;;;;;;;;:::i;:::-;-1:-1:-1;5483:54:0;;;;;;;;;-1:-1:-1;;5483:54:0;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;5548:23:0;;;;;;;:5;:23;;;;;;;;:37;;;;;;;;:::i;:::-;;4643:950;;4560:1033;;:::o;3802:508::-;3902:10;3891:22;;;;:10;:22;;;;;;;;3890:23;3868:114;;;;;;;7277:2:1;3868:114:0;;;7259:21:1;7316:2;7296:18;;;7289:30;7355:34;7335:18;;;7328:62;7426:11;7406:18;;;7399:39;7455:19;;3868:114:0;7075:405:1;3868:114:0;4068:98;;;;;;;;4111:10;4068:98;;;4033:32;4068:98;;;;;;;4177:33;;;:21;:33;;;;;:48;;;;;;4068:98;4177:48;;;;;;;4068:98;4177:48;;;;;;;;;;;;4236:10;:22;;;;;:29;;-1:-1:-1;;4236:29:0;4177:48;4236:29;;;4276:5;:17;;;;;;:26;;4068:98;;4276:26;;;;;;;:::i;:::-;;3857:453;3802:508;:::o;2467:125::-;2569:15;;;;;;;:5;:15;;;;;2562:22;;2528;;2569:15;2562:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2467:125;;;:::o;5759:542::-;5844:10;5833:22;;;;:10;:22;;;;;;;;5825:73;;;;;;;6452:2:1;5825:73:0;;;6434:21:1;6491:2;6471:18;;;6464:30;6530:34;6510:18;;;6503:62;6601:8;6581:18;;;6574:36;6627:19;;5825:73:0;6250:402:1;5825:73:0;5961:41;;;5938:20;5961:41;;;:23;:41;;;;;:48;;;;;;6072:13;:30;;;;;;;;:::i;:::-;;6068:226;;;-1:-1:-1;6119:41:0;;;;;;6170:15;6119:41;;;;;;;;:48;;:66;;-1:-1:-1;;6119:66:0;;;;;;5759:542::o;6068:226::-;-1:-1:-1;6218:41:0;;6269:13;6218:41;;;:23;:41;;;;;:48;;:64;;-1:-1:-1;;6218:64:0;;;5759:542::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:472:1;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;336:6;333:1;330:13;327:87;;;402:1;395:4;386:6;381:3;377:16;373:27;366:38;327:87;-1:-1:-1;468:2:1;447:15;-1:-1:-1;;443:29:1;434:39;;;;475:4;430:50;;14:472;-1:-1:-1;;14:472:1:o;491:184::-;543:77;540:1;533:88;640:4;637:1;630:15;664:4;661:1;654:15;680:1509;899:2;951:21;;;1021:13;;924:18;;;1043:22;;;870:4;;899:2;1084;;1102:18;;;;1162:15;;;1147:31;;1143:40;;1206:15;;;870:4;;1270:890;1286:6;1281:3;1278:15;1270:890;;;1383:2;1379:7;1367:9;1359:6;1355:22;1351:36;1346:3;1339:49;1417:6;1411:13;1447:4;1494:42;1489:2;1483:9;1479:58;1471:6;1464:74;1585:2;1581;1577:11;1571:18;1626:2;1621;1613:6;1609:15;1602:27;1656:48;1700:2;1692:6;1688:15;1674:12;1656:48;:::i;:::-;1745:11;;;1739:18;;1642:62;-1:-1:-1;;1799:1:1;1780:21;;1770:229;;1843:77;1840:1;1833:88;1948:4;1945:1;1938:15;1980:4;1977:1;1970:15;1770:229;2019:15;;;2012:39;2138:12;;;;2103:15;;;;1312:1;1303:11;1270:890;;;-1:-1:-1;2177:6:1;;680:1509;-1:-1:-1;;;;;;;;;680:1509:1:o;2194:196::-;2262:20;;2322:42;2311:54;;2301:65;;2291:93;;2380:1;2377;2370:12;2395:186;2454:6;2507:2;2495:9;2486:7;2482:23;2478:32;2475:52;;;2523:1;2520;2513:12;2475:52;2546:29;2565:9;2546:29;:::i;:::-;2536:39;2395:186;-1:-1:-1;;;2395:186:1:o;2768:184::-;2820:77;2817:1;2810:88;2917:4;2914:1;2907:15;2941:4;2938:1;2931:15;2957:719;3000:5;3053:3;3046:4;3038:6;3034:17;3030:27;3020:55;;3071:1;3068;3061:12;3020:55;3107:6;3094:20;3133:18;3170:2;3166;3163:10;3160:36;;;3176:18;;:::i;:::-;3251:2;3245:9;3219:2;3305:13;;-1:-1:-1;;3301:22:1;;;3325:2;3297:31;3293:40;3281:53;;;3349:18;;;3369:22;;;3346:46;3343:72;;;3395:18;;:::i;:::-;3435:10;3431:2;3424:22;3470:2;3462:6;3455:18;3516:3;3509:4;3504:2;3496:6;3492:15;3488:26;3485:35;3482:55;;;3533:1;3530;3523:12;3482:55;3597:2;3590:4;3582:6;3578:17;3571:4;3563:6;3559:17;3546:54;3644:1;3637:4;3632:2;3624:6;3620:15;3616:26;3609:37;3664:6;3655:15;;;;;;2957:719;;;;:::o;3681:396::-;3759:6;3767;3820:2;3808:9;3799:7;3795:23;3791:32;3788:52;;;3836:1;3833;3826:12;3788:52;3859:29;3878:9;3859:29;:::i;:::-;3849:39;;3939:2;3928:9;3924:18;3911:32;3966:18;3958:6;3955:30;3952:50;;;3998:1;3995;3988:12;3952:50;4021;4063:7;4054:6;4043:9;4039:22;4021:50;:::i;:::-;4011:60;;;3681:396;;;;;:::o;4082:322::-;4151:6;4204:2;4192:9;4183:7;4179:23;4175:32;4172:52;;;4220:1;4217;4210:12;4172:52;4260:9;4247:23;4293:18;4285:6;4282:30;4279:50;;;4325:1;4322;4315:12;4279:50;4348;4390:7;4381:6;4370:9;4366:22;4348:50;:::i;:::-;4338:60;4082:322;-1:-1:-1;;;;4082:322:1:o;4409:220::-;4558:2;4547:9;4540:21;4521:4;4578:45;4619:2;4608:9;4604:18;4596:6;4578:45;:::i;5041:184::-;5093:77;5090:1;5083:88;5190:4;5187:1;5180:15;5214:4;5211:1;5204:15;5230:204;5268:3;5304:4;5301:1;5297:12;5336:4;5333:1;5329:12;5371:3;5365:4;5361:14;5356:3;5353:23;5350:49;;;5379:18;;:::i;:::-;5415:13;;5230:204;-1:-1:-1;;;5230:204:1:o;5439:437::-;5524:1;5514:12;;5571:1;5561:12;;;5582:61;;5636:4;5628:6;5624:17;5614:27;;5582:61;5689:2;5681:6;5678:14;5658:18;5655:38;5652:218;;;5726:77;5723:1;5716:88;5827:4;5824:1;5817:15;5855:4;5852:1;5845:15;5652:218;;5439:437;;;:::o;5881:184::-;5933:77;5930:1;5923:88;6030:4;6027:1;6020:15;6054:4;6051:1;6044:15;6070:175;6107:3;6151:4;6144:5;6140:16;6180:4;6171:7;6168:17;6165:43;;;6188:18;;:::i;:::-;6237:1;6224:15;;6070:175;-1:-1:-1;;6070:175:1:o",
  "source": "// SPDX-License-Identifier: MIT OR Apache-2.0\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    function transfer(address recipient, uint256 amount)\r\n        external\r\n        returns (bool);\r\n}\r\n\r\ncontract User {\r\n    // Employee address => employerAddress\r\n    // Used when creating a new employee\r\n    mapping(address => address) private employee_Employer;\r\n\r\n    // Employee address => Employee Struct\r\n    // Used when creating a new Employee\r\n    mapping(address => Employee) private employee_AccountDetails;\r\n\r\n    // Organization employerAddress => Organization\r\n    // Used when creating an Organization\r\n    mapping(address => Organization) private employer_Organization;\r\n\r\n    // Employer address => employeeId => employeeAddress\r\n    // Used when creating a new Employer\r\n    // mapping(address => mapping(uint8 => address)) private member_Organization;\r\n    mapping(address => mapping(uint8 => Employee)) private member_Organization;\r\n\r\n    // Employer address => bool\r\n    mapping(address => bool) private isEmployer;\r\n\r\n    // Employee address => bool\r\n    mapping(address => bool) private isEmployee;\r\n\r\n    // User address => username\r\n    mapping(address => string) private users;\r\n\r\n    // TODO Course struct to be created to hold course details\r\n    // TODO Add course, delete course functions\r\n    // TODO Check for change in course status, emit an event on course completion that initiates streaming from employer to employee\r\n    // TODO Function to get all the learning courses added by employer\r\n    // TODO Employee address => List of courses enrolled and completed\r\n\r\n    enum Access {\r\n        Locked, // Locked by employer. Can't be unlocked by employee. No access to widrawal of funds.\r\n        Unlocked // Unlocked by employer. Can't be unlocked by employee. No access to widrawal of funds.\r\n    }\r\n\r\n    struct Employee {\r\n        address _address; // the address of the employee\r\n        string username; // an identifier for the employee\r\n        Access access; // locked(0) or unlocked(1)\r\n    }\r\n\r\n    struct Organization {\r\n        address payable owner; // the owner of the Organization\r\n        // mapping(address => Employee) employee; // the employees of the organization\r\n        uint8 numOfEmployees; // The number of employees in the organization\r\n    }\r\n\r\n    /** \r\n     * @notice - This function is used to retrieve the username based on wallet address\r\n     * @param _address - The address of the user.\r\n     */\r\n    function getUserName(address _address) external view returns(string memory username){\r\n        return users[_address];\r\n    }\r\n    \r\n    /** \r\n     * @notice - This function is used to determine the type of user\r\n     * 1 = employer. 2 = employee. 3 = unenrolled\r\n     * @param user - The address of the user.\r\n     */\r\n    function getUserType(address user) external view returns(uint256){\r\n        if(isEmployer[user]){\r\n            return 1;\r\n        }else if (isEmployee[user]){\r\n            return 2;\r\n        }else{\r\n            return 3;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice - This function is used to determine if the user is an employee of an organization.\r\n     */\r\n    function fetchEmployees() public view returns (Employee[] memory) {\r\n        require(isEmployer[msg.sender], \"Only an Employer can make this request\");\r\n\r\n        //determine how many employees the employer has\r\n        uint8 numOfEmployees = employer_Organization[msg.sender].numOfEmployees;\r\n        Employee[] memory employees = new Employee[](numOfEmployees);\r\n        for (uint8 index = 0; index < numOfEmployees; index++) {\r\n            employees[index] = member_Organization[msg.sender][index + 1];\r\n        }\r\n        return employees;\r\n    }\r\n\r\n    /**\r\n     * @notice - This function is used to create a new employer/owner\r\n     */\r\n    function createEmployer(string memory username) public {\r\n        require(\r\n            !isEmployer[msg.sender],\r\n            \"You are already registered as an Employer\"\r\n        );\r\n\r\n        // create a new organization\r\n        Organization memory organization = Organization({\r\n            owner: payable(msg.sender),\r\n            numOfEmployees: 0\r\n        });\r\n        employer_Organization[msg.sender] = organization;\r\n        isEmployer[msg.sender] = true;\r\n        users[msg.sender]=username;\r\n    }\r\n\r\n    /**\r\n     * @notice - This function is used to add a employee to the organization owned by an employer.\r\n     * @param _employeeAddress - The address of the employee.\r\n     * @param _employeeName - The username of the employee.\r\n     */\r\n    function addEmployee(address _employeeAddress, string memory _employeeName) public {\r\n        require(isEmployer[msg.sender], \"Only an employer can make this request\");\r\n        require(!isEmployee[_employeeAddress], \"Employee is already registered to an organization\");\r\n        // Fetch the employee\r\n        Employee memory employee = Employee({\r\n            _address: _employeeAddress,\r\n            username: _employeeName,\r\n            access: Access.Locked\r\n        });\r\n\r\n        // get next id number for the employee\r\n        uint8 employeeId = employer_Organization[msg.sender].numOfEmployees + 1;\r\n\r\n        // update employee count\r\n        employer_Organization[msg.sender].numOfEmployees = employeeId;\r\n\r\n        // update mappings\r\n        isEmployee[_employeeAddress] = true;\r\n        employee_Employer[_employeeAddress] = msg.sender;\r\n        employee_AccountDetails[_employeeAddress] = employee;\r\n        member_Organization[msg.sender][employeeId] = employee;\r\n        users[_employeeAddress]=_employeeName;\r\n    }\r\n\r\n    /**\r\n     * @notice - This function is used to change the access of an employee.\r\n     * @param _employeeAddress - The address of the employee.\r\n     */\r\n    function changeAccess(address _employeeAddress) public {\r\n        require(isEmployer[msg.sender], \"Only an employer can make this request\");\r\n\r\n        // current status\r\n        Access currentAccess = employee_AccountDetails[_employeeAddress].access;\r\n\r\n        // change the access of the employee\r\n        if (currentAccess == Access.Locked) {\r\n            employee_AccountDetails[_employeeAddress].access = Access.Unlocked;\r\n        } else {\r\n            employee_AccountDetails[_employeeAddress].access = Access.Locked;\r\n        }\r\n    }\r\n}\r\n",
  "sourcePath": "/mnt/c/blockchainrepo/kalvi-core/contracts/User.sol",
  "ast": {
    "absolutePath": "project:/contracts/User.sol",
    "exportedSymbols": {
      "IERC20": [
        11
      ],
      "User": [
        346
      ]
    },
    "id": 347,
    "license": "MIT OR Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "47:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC20",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 11,
        "linearizedBaseContracts": [
          11
        ],
        "name": "IERC20",
        "nameLocation": "84:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "a9059cbb",
            "id": 10,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "107:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "124:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "116:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "116:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "143:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "135:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "135:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "115:35:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "187:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "187:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "186:6:0"
            },
            "scope": 11,
            "src": "98:95:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 347,
        "src": "74:122:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "User",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 346,
        "linearizedBaseContracts": [
          346
        ],
        "name": "User",
        "nameLocation": "209:4:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 15,
            "mutability": "mutable",
            "name": "employee_Employer",
            "nameLocation": "343:17:0",
            "nodeType": "VariableDeclaration",
            "scope": 346,
            "src": "307:53:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 14,
              "keyType": {
                "id": 12,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "315:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "307:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 13,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "326:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 20,
            "mutability": "mutable",
            "name": "employee_AccountDetails",
            "nameLocation": "492:23:0",
            "nodeType": "VariableDeclaration",
            "scope": 346,
            "src": "455:60:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$55_storage_$",
              "typeString": "mapping(address => struct User.Employee)"
            },
            "typeName": {
              "id": 19,
              "keyType": {
                "id": 16,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "463:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "455:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$55_storage_$",
                "typeString": "mapping(address => struct User.Employee)"
              },
              "valueType": {
                "id": 18,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 17,
                  "name": "Employee",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55,
                  "src": "474:8:0"
                },
                "referencedDeclaration": 55,
                "src": "474:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Employee_$55_storage_ptr",
                  "typeString": "struct User.Employee"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 25,
            "mutability": "mutable",
            "name": "employer_Organization",
            "nameLocation": "661:21:0",
            "nodeType": "VariableDeclaration",
            "scope": 346,
            "src": "620:62:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Organization_$60_storage_$",
              "typeString": "mapping(address => struct User.Organization)"
            },
            "typeName": {
              "id": 24,
              "keyType": {
                "id": 21,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "628:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "620:32:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Organization_$60_storage_$",
                "typeString": "mapping(address => struct User.Organization)"
              },
              "valueType": {
                "id": 23,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 22,
                  "name": "Organization",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60,
                  "src": "639:12:0"
                },
                "referencedDeclaration": 60,
                "src": "639:12:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Organization_$60_storage_ptr",
                  "typeString": "struct User.Organization"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 32,
            "mutability": "mutable",
            "name": "member_Organization",
            "nameLocation": "929:19:0",
            "nodeType": "VariableDeclaration",
            "scope": 346,
            "src": "874:74:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint8_$_t_struct$_Employee_$55_storage_$_$",
              "typeString": "mapping(address => mapping(uint8 => struct User.Employee))"
            },
            "typeName": {
              "id": 31,
              "keyType": {
                "id": 26,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "882:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "874:46:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint8_$_t_struct$_Employee_$55_storage_$_$",
                "typeString": "mapping(address => mapping(uint8 => struct User.Employee))"
              },
              "valueType": {
                "id": 30,
                "keyType": {
                  "id": 27,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "901:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "nodeType": "Mapping",
                "src": "893:26:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Employee_$55_storage_$",
                  "typeString": "mapping(uint8 => struct User.Employee)"
                },
                "valueType": {
                  "id": 29,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 28,
                    "name": "Employee",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 55,
                    "src": "910:8:0"
                  },
                  "referencedDeclaration": 55,
                  "src": "910:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Employee_$55_storage_ptr",
                    "typeString": "struct User.Employee"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 36,
            "mutability": "mutable",
            "name": "isEmployer",
            "nameLocation": "1023:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 346,
            "src": "990:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 35,
              "keyType": {
                "id": 33,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "998:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "990:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 34,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1009:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 40,
            "mutability": "mutable",
            "name": "isEmployee",
            "nameLocation": "1108:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 346,
            "src": "1075:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 39,
              "keyType": {
                "id": 37,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1083:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1075:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 38,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1094:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 44,
            "mutability": "mutable",
            "name": "users",
            "nameLocation": "1195:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 346,
            "src": "1160:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
              "typeString": "mapping(address => string)"
            },
            "typeName": {
              "id": 43,
              "keyType": {
                "id": 41,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1168:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1160:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                "typeString": "mapping(address => string)"
              },
              "valueType": {
                "id": 42,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1179:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "private"
          },
          {
            "canonicalName": "User.Access",
            "id": 47,
            "members": [
              {
                "id": 45,
                "name": "Locked",
                "nameLocation": "1625:6:0",
                "nodeType": "EnumValue",
                "src": "1625:6:0"
              },
              {
                "id": 46,
                "name": "Unlocked",
                "nameLocation": "1728:8:0",
                "nodeType": "EnumValue",
                "src": "1728:8:0"
              }
            ],
            "name": "Access",
            "nameLocation": "1607:6:0",
            "nodeType": "EnumDefinition",
            "src": "1602:229:0"
          },
          {
            "canonicalName": "User.Employee",
            "id": 55,
            "members": [
              {
                "constant": false,
                "id": 49,
                "mutability": "mutable",
                "name": "_address",
                "nameLocation": "1874:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 55,
                "src": "1866:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 48,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1866:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 51,
                "mutability": "mutable",
                "name": "username",
                "nameLocation": "1931:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 55,
                "src": "1924:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 50,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1924:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54,
                "mutability": "mutable",
                "name": "access",
                "nameLocation": "1991:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 55,
                "src": "1984:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Access_$47",
                  "typeString": "enum User.Access"
                },
                "typeName": {
                  "id": 53,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 52,
                    "name": "Access",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 47,
                    "src": "1984:6:0"
                  },
                  "referencedDeclaration": 47,
                  "src": "1984:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Access_$47",
                    "typeString": "enum User.Access"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Employee",
            "nameLocation": "1846:8:0",
            "nodeType": "StructDefinition",
            "scope": 346,
            "src": "1839:194:0",
            "visibility": "public"
          },
          {
            "canonicalName": "User.Organization",
            "id": 60,
            "members": [
              {
                "constant": false,
                "id": 57,
                "mutability": "mutable",
                "name": "owner",
                "nameLocation": "2088:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 60,
                "src": "2072:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 56,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2072:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 59,
                "mutability": "mutable",
                "name": "numOfEmployees",
                "nameLocation": "2231:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 60,
                "src": "2225:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 58,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "2225:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Organization",
            "nameLocation": "2048:12:0",
            "nodeType": "StructDefinition",
            "scope": 346,
            "src": "2041:259:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 72,
              "nodeType": "Block",
              "src": "2551:41:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 68,
                      "name": "users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "2569:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                        "typeString": "mapping(address => string storage ref)"
                      }
                    },
                    "id": 70,
                    "indexExpression": {
                      "id": 69,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "2575:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2569:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 67,
                  "id": 71,
                  "nodeType": "Return",
                  "src": "2562:22:0"
                }
              ]
            },
            "documentation": {
              "id": 61,
              "nodeType": "StructuredDocumentation",
              "src": "2308:153:0",
              "text": " @notice - This function is used to retrieve the username based on wallet address\n @param _address - The address of the user."
            },
            "functionSelector": "d84f55ee",
            "id": 73,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserName",
            "nameLocation": "2476:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2496:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "2488:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2488:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2487:18:0"
            },
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66,
                  "mutability": "mutable",
                  "name": "username",
                  "nameLocation": "2542:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "2528:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2528:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2527:24:0"
            },
            "scope": 346,
            "src": "2467:125:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 98,
              "nodeType": "Block",
              "src": "2856:173:0",
              "statements": [
                {
                  "condition": {
                    "baseExpression": {
                      "id": 81,
                      "name": "isEmployer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "2870:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 83,
                    "indexExpression": {
                      "id": 82,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "2881:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2870:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "baseExpression": {
                        "id": 87,
                        "name": "isEmployee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "2931:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 89,
                      "indexExpression": {
                        "id": 88,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "2942:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2931:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 95,
                      "nodeType": "Block",
                      "src": "2987:35:0",
                      "statements": [
                        {
                          "expression": {
                            "hexValue": "33",
                            "id": 93,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3009:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "functionReturnParameters": 80,
                          "id": 94,
                          "nodeType": "Return",
                          "src": "3002:8:0"
                        }
                      ]
                    },
                    "id": 96,
                    "nodeType": "IfStatement",
                    "src": "2927:95:0",
                    "trueBody": {
                      "id": 92,
                      "nodeType": "Block",
                      "src": "2948:35:0",
                      "statements": [
                        {
                          "expression": {
                            "hexValue": "32",
                            "id": 90,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2970:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "functionReturnParameters": 80,
                          "id": 91,
                          "nodeType": "Return",
                          "src": "2963:8:0"
                        }
                      ]
                    }
                  },
                  "id": 97,
                  "nodeType": "IfStatement",
                  "src": "2867:155:0",
                  "trueBody": {
                    "id": 86,
                    "nodeType": "Block",
                    "src": "2887:35:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "31",
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2909:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 80,
                        "id": 85,
                        "nodeType": "Return",
                        "src": "2902:8:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 74,
              "nodeType": "StructuredDocumentation",
              "src": "2604:181:0",
              "text": " @notice - This function is used to determine the type of user\n 1 = employer. 2 = employee. 3 = unenrolled\n @param user - The address of the user."
            },
            "functionSelector": "8b3f863f",
            "id": 99,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserType",
            "nameLocation": "2800:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "2820:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "2812:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2812:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2811:14:0"
            },
            "returnParameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "2848:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2848:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2847:9:0"
            },
            "scope": 346,
            "src": "2791:238:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 162,
              "nodeType": "Block",
              "src": "3221:484:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 108,
                          "name": "isEmployer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "3240:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 111,
                        "indexExpression": {
                          "expression": {
                            "id": 109,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3251:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3251:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3240:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920616e20456d706c6f7965722063616e206d616b6520746869732072657175657374",
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3264:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3be4d26246e2bce2379a9e4d5831e0ca9f90360d730d99a00e3c2328d8c7a9e2",
                          "typeString": "literal_string \"Only an Employer can make this request\""
                        },
                        "value": "Only an Employer can make this request"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3be4d26246e2bce2379a9e4d5831e0ca9f90360d730d99a00e3c2328d8c7a9e2",
                          "typeString": "literal_string \"Only an Employer can make this request\""
                        }
                      ],
                      "id": 107,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3232:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3232:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "3232:73:0"
                },
                {
                  "assignments": [
                    116
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 116,
                      "mutability": "mutable",
                      "name": "numOfEmployees",
                      "nameLocation": "3381:14:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 162,
                      "src": "3375:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 115,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "3375:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 122,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 117,
                        "name": "employer_Organization",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "3398:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Organization_$60_storage_$",
                          "typeString": "mapping(address => struct User.Organization storage ref)"
                        }
                      },
                      "id": 120,
                      "indexExpression": {
                        "expression": {
                          "id": 118,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3420:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3420:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3398:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Organization_$60_storage",
                        "typeString": "struct User.Organization storage ref"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "numOfEmployees",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 59,
                    "src": "3398:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3375:71:0"
                },
                {
                  "assignments": [
                    127
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 127,
                      "mutability": "mutable",
                      "name": "employees",
                      "nameLocation": "3475:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 162,
                      "src": "3457:27:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Employee_$55_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct User.Employee[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 125,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 124,
                            "name": "Employee",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 55,
                            "src": "3457:8:0"
                          },
                          "referencedDeclaration": 55,
                          "src": "3457:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Employee_$55_storage_ptr",
                            "typeString": "struct User.Employee"
                          }
                        },
                        "id": 126,
                        "nodeType": "ArrayTypeName",
                        "src": "3457:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Employee_$55_storage_$dyn_storage_ptr",
                          "typeString": "struct User.Employee[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 134,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 132,
                        "name": "numOfEmployees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "3502:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3487:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Employee_$55_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct User.Employee memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 129,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 128,
                            "name": "Employee",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 55,
                            "src": "3491:8:0"
                          },
                          "referencedDeclaration": 55,
                          "src": "3491:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Employee_$55_storage_ptr",
                            "typeString": "struct User.Employee"
                          }
                        },
                        "id": 130,
                        "nodeType": "ArrayTypeName",
                        "src": "3491:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Employee_$55_storage_$dyn_storage_ptr",
                          "typeString": "struct User.Employee[]"
                        }
                      }
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3487:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Employee_$55_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct User.Employee memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3457:60:0"
                },
                {
                  "body": {
                    "id": 158,
                    "nodeType": "Block",
                    "src": "3583:88:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 145,
                              "name": "employees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 127,
                              "src": "3598:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Employee_$55_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct User.Employee memory[] memory"
                              }
                            },
                            "id": 147,
                            "indexExpression": {
                              "id": 146,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 136,
                              "src": "3608:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3598:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Employee_$55_memory_ptr",
                              "typeString": "struct User.Employee memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 148,
                                "name": "member_Organization",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32,
                                "src": "3617:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint8_$_t_struct$_Employee_$55_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint8 => struct User.Employee storage ref))"
                                }
                              },
                              "id": 151,
                              "indexExpression": {
                                "expression": {
                                  "id": 149,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3637:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 150,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3637:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3617:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Employee_$55_storage_$",
                                "typeString": "mapping(uint8 => struct User.Employee storage ref)"
                              }
                            },
                            "id": 155,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 152,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 136,
                                "src": "3649:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 153,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3657:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "3649:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3617:42:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Employee_$55_storage",
                              "typeString": "struct User.Employee storage ref"
                            }
                          },
                          "src": "3598:61:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Employee_$55_memory_ptr",
                            "typeString": "struct User.Employee memory"
                          }
                        },
                        "id": 157,
                        "nodeType": "ExpressionStatement",
                        "src": "3598:61:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 139,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 136,
                      "src": "3550:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 140,
                      "name": "numOfEmployees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116,
                      "src": "3558:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3550:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 159,
                  "initializationExpression": {
                    "assignments": [
                      136
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 136,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "3539:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "3533:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 135,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3533:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 138,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3547:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3533:15:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3574:7:0",
                      "subExpression": {
                        "id": 142,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "3574:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 144,
                    "nodeType": "ExpressionStatement",
                    "src": "3574:7:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "3528:143:0"
                },
                {
                  "expression": {
                    "id": 160,
                    "name": "employees",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 127,
                    "src": "3688:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Employee_$55_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct User.Employee memory[] memory"
                    }
                  },
                  "functionReturnParameters": 106,
                  "id": 161,
                  "nodeType": "Return",
                  "src": "3681:16:0"
                }
              ]
            },
            "documentation": {
              "id": 100,
              "nodeType": "StructuredDocumentation",
              "src": "3037:112:0",
              "text": " @notice - This function is used to determine if the user is an employee of an organization."
            },
            "functionSelector": "0a67a48d",
            "id": 163,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fetchEmployees",
            "nameLocation": "3164:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3178:2:0"
            },
            "returnParameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 105,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "3202:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Employee_$55_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct User.Employee[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 103,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 102,
                        "name": "Employee",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 55,
                        "src": "3202:8:0"
                      },
                      "referencedDeclaration": 55,
                      "src": "3202:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$55_storage_ptr",
                        "typeString": "struct User.Employee"
                      }
                    },
                    "id": 104,
                    "nodeType": "ArrayTypeName",
                    "src": "3202:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Employee_$55_storage_$dyn_storage_ptr",
                      "typeString": "struct User.Employee[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3201:19:0"
            },
            "scope": 346,
            "src": "3155:550:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 211,
              "nodeType": "Block",
              "src": "3857:453:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3890:23:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 170,
                            "name": "isEmployer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "3891:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 173,
                          "indexExpression": {
                            "expression": {
                              "id": 171,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3902:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3902:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3891:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752061726520616c7265616479207265676973746572656420617320616e20456d706c6f796572",
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3928:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a014784f013dd3fe3cec43464793b8d71bd166f6b8d95418a86f63e2589705f",
                          "typeString": "literal_string \"You are already registered as an Employer\""
                        },
                        "value": "You are already registered as an Employer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a014784f013dd3fe3cec43464793b8d71bd166f6b8d95418a86f63e2589705f",
                          "typeString": "literal_string \"You are already registered as an Employer\""
                        }
                      ],
                      "id": 169,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3868:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3868:114:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "3868:114:0"
                },
                {
                  "assignments": [
                    180
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 180,
                      "mutability": "mutable",
                      "name": "organization",
                      "nameLocation": "4053:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 211,
                      "src": "4033:32:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Organization_$60_memory_ptr",
                        "typeString": "struct User.Organization"
                      },
                      "typeName": {
                        "id": 179,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 178,
                          "name": "Organization",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 60,
                          "src": "4033:12:0"
                        },
                        "referencedDeclaration": 60,
                        "src": "4033:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Organization_$60_storage_ptr",
                          "typeString": "struct User.Organization"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 189,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 184,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4111:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4111:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4103:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 182,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4103:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4103:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4153:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 181,
                      "name": "Organization",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "4068:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Organization_$60_storage_ptr_$",
                        "typeString": "type(struct User.Organization storage pointer)"
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "owner",
                      "numOfEmployees"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "4068:98:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Organization_$60_memory_ptr",
                      "typeString": "struct User.Organization memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4033:133:0"
                },
                {
                  "expression": {
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 190,
                        "name": "employer_Organization",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "4177:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Organization_$60_storage_$",
                          "typeString": "mapping(address => struct User.Organization storage ref)"
                        }
                      },
                      "id": 193,
                      "indexExpression": {
                        "expression": {
                          "id": 191,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4199:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4199:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4177:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Organization_$60_storage",
                        "typeString": "struct User.Organization storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 194,
                      "name": "organization",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 180,
                      "src": "4213:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Organization_$60_memory_ptr",
                        "typeString": "struct User.Organization memory"
                      }
                    },
                    "src": "4177:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Organization_$60_storage",
                      "typeString": "struct User.Organization storage ref"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "4177:48:0"
                },
                {
                  "expression": {
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 197,
                        "name": "isEmployer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "4236:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 200,
                      "indexExpression": {
                        "expression": {
                          "id": 198,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4247:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4247:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4236:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4261:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4236:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "4236:29:0"
                },
                {
                  "expression": {
                    "id": 209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 204,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "4276:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                          "typeString": "mapping(address => string storage ref)"
                        }
                      },
                      "id": 207,
                      "indexExpression": {
                        "expression": {
                          "id": 205,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4282:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4282:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4276:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 208,
                      "name": "username",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "4294:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "4276:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 210,
                  "nodeType": "ExpressionStatement",
                  "src": "4276:26:0"
                }
              ]
            },
            "documentation": {
              "id": 164,
              "nodeType": "StructuredDocumentation",
              "src": "3713:83:0",
              "text": " @notice - This function is used to create a new employer/owner"
            },
            "functionSelector": "c95d75f0",
            "id": 212,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createEmployer",
            "nameLocation": "3811:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 166,
                  "mutability": "mutable",
                  "name": "username",
                  "nameLocation": "3840:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "3826:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3826:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3825:24:0"
            },
            "returnParameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3857:0:0"
            },
            "scope": 346,
            "src": "3802:508:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 298,
              "nodeType": "Block",
              "src": "4643:950:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 221,
                          "name": "isEmployer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "4662:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 224,
                        "indexExpression": {
                          "expression": {
                            "id": 222,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4673:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4673:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4662:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920616e20656d706c6f7965722063616e206d616b6520746869732072657175657374",
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4686:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_281258d9cf6edfe93f63d6df9f03ebf04b784e3822c6ead2a10b2edcd1112463",
                          "typeString": "literal_string \"Only an employer can make this request\""
                        },
                        "value": "Only an employer can make this request"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_281258d9cf6edfe93f63d6df9f03ebf04b784e3822c6ead2a10b2edcd1112463",
                          "typeString": "literal_string \"Only an employer can make this request\""
                        }
                      ],
                      "id": 220,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4654:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4654:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 227,
                  "nodeType": "ExpressionStatement",
                  "src": "4654:73:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4746:29:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 229,
                            "name": "isEmployee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40,
                            "src": "4747:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 231,
                          "indexExpression": {
                            "id": 230,
                            "name": "_employeeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 215,
                            "src": "4758:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4747:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456d706c6f79656520697320616c7265616479207265676973746572656420746f20616e206f7267616e697a6174696f6e",
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4777:51:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f75202a11d9e6d1f88f37bd99e67f91a4030c943fd82324c1edb54cc330968b5",
                          "typeString": "literal_string \"Employee is already registered to an organization\""
                        },
                        "value": "Employee is already registered to an organization"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f75202a11d9e6d1f88f37bd99e67f91a4030c943fd82324c1edb54cc330968b5",
                          "typeString": "literal_string \"Employee is already registered to an organization\""
                        }
                      ],
                      "id": 228,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4738:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4738:91:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "4738:91:0"
                },
                {
                  "assignments": [
                    238
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 238,
                      "mutability": "mutable",
                      "name": "employee",
                      "nameLocation": "4887:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 298,
                      "src": "4871:24:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$55_memory_ptr",
                        "typeString": "struct User.Employee"
                      },
                      "typeName": {
                        "id": 237,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 236,
                          "name": "Employee",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 55,
                          "src": "4871:8:0"
                        },
                        "referencedDeclaration": 55,
                        "src": "4871:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Employee_$55_storage_ptr",
                          "typeString": "struct User.Employee"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 245,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 240,
                        "name": "_employeeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "4932:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 241,
                        "name": "_employeeName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 217,
                        "src": "4973:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 242,
                          "name": "Access",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "5009:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Access_$47_$",
                            "typeString": "type(enum User.Access)"
                          }
                        },
                        "id": 243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Locked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45,
                        "src": "5009:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Access_$47",
                          "typeString": "enum User.Access"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_enum$_Access_$47",
                          "typeString": "enum User.Access"
                        }
                      ],
                      "id": 239,
                      "name": "Employee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "4898:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Employee_$55_storage_ptr_$",
                        "typeString": "type(struct User.Employee storage pointer)"
                      }
                    },
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "_address",
                      "username",
                      "access"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "4898:136:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Employee_$55_memory_ptr",
                      "typeString": "struct User.Employee memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4871:163:0"
                },
                {
                  "assignments": [
                    247
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 247,
                      "mutability": "mutable",
                      "name": "employeeId",
                      "nameLocation": "5101:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 298,
                      "src": "5095:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 246,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "5095:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 255,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 248,
                          "name": "employer_Organization",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "5114:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Organization_$60_storage_$",
                            "typeString": "mapping(address => struct User.Organization storage ref)"
                          }
                        },
                        "id": 251,
                        "indexExpression": {
                          "expression": {
                            "id": 249,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5136:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5136:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5114:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Organization_$60_storage",
                          "typeString": "struct User.Organization storage ref"
                        }
                      },
                      "id": 252,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "numOfEmployees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59,
                      "src": "5114:48:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5165:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "5114:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5095:71:0"
                },
                {
                  "expression": {
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 256,
                          "name": "employer_Organization",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "5213:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Organization_$60_storage_$",
                            "typeString": "mapping(address => struct User.Organization storage ref)"
                          }
                        },
                        "id": 259,
                        "indexExpression": {
                          "expression": {
                            "id": 257,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5235:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5235:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5213:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Organization_$60_storage",
                          "typeString": "struct User.Organization storage ref"
                        }
                      },
                      "id": 260,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numOfEmployees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59,
                      "src": "5213:48:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 261,
                      "name": "employeeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 247,
                      "src": "5264:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "5213:61:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "5213:61:0"
                },
                {
                  "expression": {
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 264,
                        "name": "isEmployee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "5315:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 266,
                      "indexExpression": {
                        "id": 265,
                        "name": "_employeeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "5326:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5315:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5346:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5315:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 269,
                  "nodeType": "ExpressionStatement",
                  "src": "5315:35:0"
                },
                {
                  "expression": {
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 270,
                        "name": "employee_Employer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "5361:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 272,
                      "indexExpression": {
                        "id": 271,
                        "name": "_employeeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "5379:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5361:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 273,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "5399:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5399:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5361:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "5361:48:0"
                },
                {
                  "expression": {
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 277,
                        "name": "employee_AccountDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "5420:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$55_storage_$",
                          "typeString": "mapping(address => struct User.Employee storage ref)"
                        }
                      },
                      "id": 279,
                      "indexExpression": {
                        "id": 278,
                        "name": "_employeeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "5444:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5420:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$55_storage",
                        "typeString": "struct User.Employee storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 280,
                      "name": "employee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 238,
                      "src": "5464:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$55_memory_ptr",
                        "typeString": "struct User.Employee memory"
                      }
                    },
                    "src": "5420:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Employee_$55_storage",
                      "typeString": "struct User.Employee storage ref"
                    }
                  },
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "5420:52:0"
                },
                {
                  "expression": {
                    "id": 290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 283,
                          "name": "member_Organization",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "5483:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint8_$_t_struct$_Employee_$55_storage_$_$",
                            "typeString": "mapping(address => mapping(uint8 => struct User.Employee storage ref))"
                          }
                        },
                        "id": 287,
                        "indexExpression": {
                          "expression": {
                            "id": 284,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5503:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5503:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5483:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Employee_$55_storage_$",
                          "typeString": "mapping(uint8 => struct User.Employee storage ref)"
                        }
                      },
                      "id": 288,
                      "indexExpression": {
                        "id": 286,
                        "name": "employeeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 247,
                        "src": "5515:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5483:43:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$55_storage",
                        "typeString": "struct User.Employee storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 289,
                      "name": "employee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 238,
                      "src": "5529:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$55_memory_ptr",
                        "typeString": "struct User.Employee memory"
                      }
                    },
                    "src": "5483:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Employee_$55_storage",
                      "typeString": "struct User.Employee storage ref"
                    }
                  },
                  "id": 291,
                  "nodeType": "ExpressionStatement",
                  "src": "5483:54:0"
                },
                {
                  "expression": {
                    "id": 296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 292,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "5548:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                          "typeString": "mapping(address => string storage ref)"
                        }
                      },
                      "id": 294,
                      "indexExpression": {
                        "id": 293,
                        "name": "_employeeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "5554:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5548:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 295,
                      "name": "_employeeName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 217,
                      "src": "5572:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "5548:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 297,
                  "nodeType": "ExpressionStatement",
                  "src": "5548:37:0"
                }
              ]
            },
            "documentation": {
              "id": 213,
              "nodeType": "StructuredDocumentation",
              "src": "4318:236:0",
              "text": " @notice - This function is used to add a employee to the organization owned by an employer.\n @param _employeeAddress - The address of the employee.\n @param _employeeName - The username of the employee."
            },
            "functionSelector": "a502e808",
            "id": 299,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addEmployee",
            "nameLocation": "4569:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 215,
                  "mutability": "mutable",
                  "name": "_employeeAddress",
                  "nameLocation": "4589:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 299,
                  "src": "4581:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 214,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4581:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 217,
                  "mutability": "mutable",
                  "name": "_employeeName",
                  "nameLocation": "4621:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 299,
                  "src": "4607:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 216,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4607:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4580:55:0"
            },
            "returnParameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4643:0:0"
            },
            "scope": 346,
            "src": "4560:1033:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 344,
              "nodeType": "Block",
              "src": "5814:487:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 306,
                          "name": "isEmployer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "5833:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 309,
                        "indexExpression": {
                          "expression": {
                            "id": 307,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5844:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5844:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5833:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920616e20656d706c6f7965722063616e206d616b6520746869732072657175657374",
                        "id": 310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5857:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_281258d9cf6edfe93f63d6df9f03ebf04b784e3822c6ead2a10b2edcd1112463",
                          "typeString": "literal_string \"Only an employer can make this request\""
                        },
                        "value": "Only an employer can make this request"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_281258d9cf6edfe93f63d6df9f03ebf04b784e3822c6ead2a10b2edcd1112463",
                          "typeString": "literal_string \"Only an employer can make this request\""
                        }
                      ],
                      "id": 305,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5825:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5825:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 312,
                  "nodeType": "ExpressionStatement",
                  "src": "5825:73:0"
                },
                {
                  "assignments": [
                    315
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 315,
                      "mutability": "mutable",
                      "name": "currentAccess",
                      "nameLocation": "5945:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 344,
                      "src": "5938:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Access_$47",
                        "typeString": "enum User.Access"
                      },
                      "typeName": {
                        "id": 314,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 313,
                          "name": "Access",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 47,
                          "src": "5938:6:0"
                        },
                        "referencedDeclaration": 47,
                        "src": "5938:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Access_$47",
                          "typeString": "enum User.Access"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 320,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 316,
                        "name": "employee_AccountDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "5961:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$55_storage_$",
                          "typeString": "mapping(address => struct User.Employee storage ref)"
                        }
                      },
                      "id": 318,
                      "indexExpression": {
                        "id": 317,
                        "name": "_employeeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "5985:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5961:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$55_storage",
                        "typeString": "struct User.Employee storage ref"
                      }
                    },
                    "id": 319,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "access",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 54,
                    "src": "5961:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Access_$47",
                      "typeString": "enum User.Access"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5938:71:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Access_$47",
                      "typeString": "enum User.Access"
                    },
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 321,
                      "name": "currentAccess",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 315,
                      "src": "6072:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Access_$47",
                        "typeString": "enum User.Access"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 322,
                        "name": "Access",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "6089:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Access_$47_$",
                          "typeString": "type(enum User.Access)"
                        }
                      },
                      "id": 323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45,
                      "src": "6089:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Access_$47",
                        "typeString": "enum User.Access"
                      }
                    },
                    "src": "6072:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 342,
                    "nodeType": "Block",
                    "src": "6203:91:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 334,
                                "name": "employee_AccountDetails",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 20,
                                "src": "6218:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$55_storage_$",
                                  "typeString": "mapping(address => struct User.Employee storage ref)"
                                }
                              },
                              "id": 336,
                              "indexExpression": {
                                "id": 335,
                                "name": "_employeeAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 302,
                                "src": "6242:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6218:41:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Employee_$55_storage",
                                "typeString": "struct User.Employee storage ref"
                              }
                            },
                            "id": 337,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "access",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54,
                            "src": "6218:48:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Access_$47",
                              "typeString": "enum User.Access"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 338,
                              "name": "Access",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "6269:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Access_$47_$",
                                "typeString": "type(enum User.Access)"
                              }
                            },
                            "id": 339,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Locked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45,
                            "src": "6269:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Access_$47",
                              "typeString": "enum User.Access"
                            }
                          },
                          "src": "6218:64:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Access_$47",
                            "typeString": "enum User.Access"
                          }
                        },
                        "id": 341,
                        "nodeType": "ExpressionStatement",
                        "src": "6218:64:0"
                      }
                    ]
                  },
                  "id": 343,
                  "nodeType": "IfStatement",
                  "src": "6068:226:0",
                  "trueBody": {
                    "id": 333,
                    "nodeType": "Block",
                    "src": "6104:93:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 325,
                                "name": "employee_AccountDetails",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 20,
                                "src": "6119:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$55_storage_$",
                                  "typeString": "mapping(address => struct User.Employee storage ref)"
                                }
                              },
                              "id": 327,
                              "indexExpression": {
                                "id": 326,
                                "name": "_employeeAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 302,
                                "src": "6143:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6119:41:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Employee_$55_storage",
                                "typeString": "struct User.Employee storage ref"
                              }
                            },
                            "id": 328,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "access",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54,
                            "src": "6119:48:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Access_$47",
                              "typeString": "enum User.Access"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 329,
                              "name": "Access",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "6170:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Access_$47_$",
                                "typeString": "type(enum User.Access)"
                              }
                            },
                            "id": 330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Unlocked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46,
                            "src": "6170:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Access_$47",
                              "typeString": "enum User.Access"
                            }
                          },
                          "src": "6119:66:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Access_$47",
                            "typeString": "enum User.Access"
                          }
                        },
                        "id": 332,
                        "nodeType": "ExpressionStatement",
                        "src": "6119:66:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 300,
              "nodeType": "StructuredDocumentation",
              "src": "5601:152:0",
              "text": " @notice - This function is used to change the access of an employee.\n @param _employeeAddress - The address of the employee."
            },
            "functionSelector": "f403688a",
            "id": 345,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeAccess",
            "nameLocation": "5768:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 302,
                  "mutability": "mutable",
                  "name": "_employeeAddress",
                  "nameLocation": "5789:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 345,
                  "src": "5781:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5781:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5780:26:0"
            },
            "returnParameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5814:0:0"
            },
            "scope": 346,
            "src": "5759:542:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 347,
        "src": "200:6104:0",
        "usedErrors": []
      }
    ],
    "src": "47:6259:0"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/User.sol",
    "exportedSymbols": {
      "IERC20": [
        11
      ],
      "User": [
        346
      ]
    },
    "id": 347,
    "license": "MIT OR Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "47:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC20",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 11,
        "linearizedBaseContracts": [
          11
        ],
        "name": "IERC20",
        "nameLocation": "84:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "a9059cbb",
            "id": 10,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "107:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "124:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "116:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "116:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "143:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "135:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "135:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "115:35:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "187:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "187:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "186:6:0"
            },
            "scope": 11,
            "src": "98:95:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 347,
        "src": "74:122:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "User",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 346,
        "linearizedBaseContracts": [
          346
        ],
        "name": "User",
        "nameLocation": "209:4:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 15,
            "mutability": "mutable",
            "name": "employee_Employer",
            "nameLocation": "343:17:0",
            "nodeType": "VariableDeclaration",
            "scope": 346,
            "src": "307:53:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 14,
              "keyType": {
                "id": 12,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "315:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "307:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 13,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "326:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 20,
            "mutability": "mutable",
            "name": "employee_AccountDetails",
            "nameLocation": "492:23:0",
            "nodeType": "VariableDeclaration",
            "scope": 346,
            "src": "455:60:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$55_storage_$",
              "typeString": "mapping(address => struct User.Employee)"
            },
            "typeName": {
              "id": 19,
              "keyType": {
                "id": 16,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "463:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "455:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$55_storage_$",
                "typeString": "mapping(address => struct User.Employee)"
              },
              "valueType": {
                "id": 18,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 17,
                  "name": "Employee",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55,
                  "src": "474:8:0"
                },
                "referencedDeclaration": 55,
                "src": "474:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Employee_$55_storage_ptr",
                  "typeString": "struct User.Employee"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 25,
            "mutability": "mutable",
            "name": "employer_Organization",
            "nameLocation": "661:21:0",
            "nodeType": "VariableDeclaration",
            "scope": 346,
            "src": "620:62:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Organization_$60_storage_$",
              "typeString": "mapping(address => struct User.Organization)"
            },
            "typeName": {
              "id": 24,
              "keyType": {
                "id": 21,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "628:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "620:32:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Organization_$60_storage_$",
                "typeString": "mapping(address => struct User.Organization)"
              },
              "valueType": {
                "id": 23,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 22,
                  "name": "Organization",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60,
                  "src": "639:12:0"
                },
                "referencedDeclaration": 60,
                "src": "639:12:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Organization_$60_storage_ptr",
                  "typeString": "struct User.Organization"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 32,
            "mutability": "mutable",
            "name": "member_Organization",
            "nameLocation": "929:19:0",
            "nodeType": "VariableDeclaration",
            "scope": 346,
            "src": "874:74:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint8_$_t_struct$_Employee_$55_storage_$_$",
              "typeString": "mapping(address => mapping(uint8 => struct User.Employee))"
            },
            "typeName": {
              "id": 31,
              "keyType": {
                "id": 26,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "882:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "874:46:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint8_$_t_struct$_Employee_$55_storage_$_$",
                "typeString": "mapping(address => mapping(uint8 => struct User.Employee))"
              },
              "valueType": {
                "id": 30,
                "keyType": {
                  "id": 27,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "901:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "nodeType": "Mapping",
                "src": "893:26:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Employee_$55_storage_$",
                  "typeString": "mapping(uint8 => struct User.Employee)"
                },
                "valueType": {
                  "id": 29,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 28,
                    "name": "Employee",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 55,
                    "src": "910:8:0"
                  },
                  "referencedDeclaration": 55,
                  "src": "910:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Employee_$55_storage_ptr",
                    "typeString": "struct User.Employee"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 36,
            "mutability": "mutable",
            "name": "isEmployer",
            "nameLocation": "1023:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 346,
            "src": "990:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 35,
              "keyType": {
                "id": 33,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "998:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "990:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 34,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1009:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 40,
            "mutability": "mutable",
            "name": "isEmployee",
            "nameLocation": "1108:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 346,
            "src": "1075:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 39,
              "keyType": {
                "id": 37,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1083:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1075:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 38,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1094:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 44,
            "mutability": "mutable",
            "name": "users",
            "nameLocation": "1195:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 346,
            "src": "1160:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
              "typeString": "mapping(address => string)"
            },
            "typeName": {
              "id": 43,
              "keyType": {
                "id": 41,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1168:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1160:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                "typeString": "mapping(address => string)"
              },
              "valueType": {
                "id": 42,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1179:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "private"
          },
          {
            "canonicalName": "User.Access",
            "id": 47,
            "members": [
              {
                "id": 45,
                "name": "Locked",
                "nameLocation": "1625:6:0",
                "nodeType": "EnumValue",
                "src": "1625:6:0"
              },
              {
                "id": 46,
                "name": "Unlocked",
                "nameLocation": "1728:8:0",
                "nodeType": "EnumValue",
                "src": "1728:8:0"
              }
            ],
            "name": "Access",
            "nameLocation": "1607:6:0",
            "nodeType": "EnumDefinition",
            "src": "1602:229:0"
          },
          {
            "canonicalName": "User.Employee",
            "id": 55,
            "members": [
              {
                "constant": false,
                "id": 49,
                "mutability": "mutable",
                "name": "_address",
                "nameLocation": "1874:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 55,
                "src": "1866:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 48,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1866:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 51,
                "mutability": "mutable",
                "name": "username",
                "nameLocation": "1931:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 55,
                "src": "1924:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 50,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1924:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54,
                "mutability": "mutable",
                "name": "access",
                "nameLocation": "1991:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 55,
                "src": "1984:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Access_$47",
                  "typeString": "enum User.Access"
                },
                "typeName": {
                  "id": 53,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 52,
                    "name": "Access",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 47,
                    "src": "1984:6:0"
                  },
                  "referencedDeclaration": 47,
                  "src": "1984:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Access_$47",
                    "typeString": "enum User.Access"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Employee",
            "nameLocation": "1846:8:0",
            "nodeType": "StructDefinition",
            "scope": 346,
            "src": "1839:194:0",
            "visibility": "public"
          },
          {
            "canonicalName": "User.Organization",
            "id": 60,
            "members": [
              {
                "constant": false,
                "id": 57,
                "mutability": "mutable",
                "name": "owner",
                "nameLocation": "2088:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 60,
                "src": "2072:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 56,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2072:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 59,
                "mutability": "mutable",
                "name": "numOfEmployees",
                "nameLocation": "2231:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 60,
                "src": "2225:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 58,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "2225:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Organization",
            "nameLocation": "2048:12:0",
            "nodeType": "StructDefinition",
            "scope": 346,
            "src": "2041:259:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 72,
              "nodeType": "Block",
              "src": "2551:41:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 68,
                      "name": "users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "2569:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                        "typeString": "mapping(address => string storage ref)"
                      }
                    },
                    "id": 70,
                    "indexExpression": {
                      "id": 69,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "2575:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2569:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 67,
                  "id": 71,
                  "nodeType": "Return",
                  "src": "2562:22:0"
                }
              ]
            },
            "documentation": {
              "id": 61,
              "nodeType": "StructuredDocumentation",
              "src": "2308:153:0",
              "text": " @notice - This function is used to retrieve the username based on wallet address\n @param _address - The address of the user."
            },
            "functionSelector": "d84f55ee",
            "id": 73,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserName",
            "nameLocation": "2476:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2496:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "2488:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2488:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2487:18:0"
            },
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66,
                  "mutability": "mutable",
                  "name": "username",
                  "nameLocation": "2542:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "2528:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2528:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2527:24:0"
            },
            "scope": 346,
            "src": "2467:125:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 98,
              "nodeType": "Block",
              "src": "2856:173:0",
              "statements": [
                {
                  "condition": {
                    "baseExpression": {
                      "id": 81,
                      "name": "isEmployer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "2870:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 83,
                    "indexExpression": {
                      "id": 82,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "2881:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2870:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "baseExpression": {
                        "id": 87,
                        "name": "isEmployee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "2931:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 89,
                      "indexExpression": {
                        "id": 88,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "2942:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2931:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 95,
                      "nodeType": "Block",
                      "src": "2987:35:0",
                      "statements": [
                        {
                          "expression": {
                            "hexValue": "33",
                            "id": 93,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3009:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "functionReturnParameters": 80,
                          "id": 94,
                          "nodeType": "Return",
                          "src": "3002:8:0"
                        }
                      ]
                    },
                    "id": 96,
                    "nodeType": "IfStatement",
                    "src": "2927:95:0",
                    "trueBody": {
                      "id": 92,
                      "nodeType": "Block",
                      "src": "2948:35:0",
                      "statements": [
                        {
                          "expression": {
                            "hexValue": "32",
                            "id": 90,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2970:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "functionReturnParameters": 80,
                          "id": 91,
                          "nodeType": "Return",
                          "src": "2963:8:0"
                        }
                      ]
                    }
                  },
                  "id": 97,
                  "nodeType": "IfStatement",
                  "src": "2867:155:0",
                  "trueBody": {
                    "id": 86,
                    "nodeType": "Block",
                    "src": "2887:35:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "31",
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2909:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 80,
                        "id": 85,
                        "nodeType": "Return",
                        "src": "2902:8:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 74,
              "nodeType": "StructuredDocumentation",
              "src": "2604:181:0",
              "text": " @notice - This function is used to determine the type of user\n 1 = employer. 2 = employee. 3 = unenrolled\n @param user - The address of the user."
            },
            "functionSelector": "8b3f863f",
            "id": 99,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserType",
            "nameLocation": "2800:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "2820:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "2812:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2812:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2811:14:0"
            },
            "returnParameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "2848:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2848:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2847:9:0"
            },
            "scope": 346,
            "src": "2791:238:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 162,
              "nodeType": "Block",
              "src": "3221:484:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 108,
                          "name": "isEmployer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "3240:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 111,
                        "indexExpression": {
                          "expression": {
                            "id": 109,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3251:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3251:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3240:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920616e20456d706c6f7965722063616e206d616b6520746869732072657175657374",
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3264:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3be4d26246e2bce2379a9e4d5831e0ca9f90360d730d99a00e3c2328d8c7a9e2",
                          "typeString": "literal_string \"Only an Employer can make this request\""
                        },
                        "value": "Only an Employer can make this request"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3be4d26246e2bce2379a9e4d5831e0ca9f90360d730d99a00e3c2328d8c7a9e2",
                          "typeString": "literal_string \"Only an Employer can make this request\""
                        }
                      ],
                      "id": 107,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3232:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3232:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "3232:73:0"
                },
                {
                  "assignments": [
                    116
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 116,
                      "mutability": "mutable",
                      "name": "numOfEmployees",
                      "nameLocation": "3381:14:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 162,
                      "src": "3375:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 115,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "3375:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 122,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 117,
                        "name": "employer_Organization",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "3398:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Organization_$60_storage_$",
                          "typeString": "mapping(address => struct User.Organization storage ref)"
                        }
                      },
                      "id": 120,
                      "indexExpression": {
                        "expression": {
                          "id": 118,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3420:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3420:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3398:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Organization_$60_storage",
                        "typeString": "struct User.Organization storage ref"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "numOfEmployees",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 59,
                    "src": "3398:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3375:71:0"
                },
                {
                  "assignments": [
                    127
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 127,
                      "mutability": "mutable",
                      "name": "employees",
                      "nameLocation": "3475:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 162,
                      "src": "3457:27:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Employee_$55_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct User.Employee[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 125,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 124,
                            "name": "Employee",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 55,
                            "src": "3457:8:0"
                          },
                          "referencedDeclaration": 55,
                          "src": "3457:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Employee_$55_storage_ptr",
                            "typeString": "struct User.Employee"
                          }
                        },
                        "id": 126,
                        "nodeType": "ArrayTypeName",
                        "src": "3457:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Employee_$55_storage_$dyn_storage_ptr",
                          "typeString": "struct User.Employee[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 134,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 132,
                        "name": "numOfEmployees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "3502:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3487:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Employee_$55_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct User.Employee memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 129,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 128,
                            "name": "Employee",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 55,
                            "src": "3491:8:0"
                          },
                          "referencedDeclaration": 55,
                          "src": "3491:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Employee_$55_storage_ptr",
                            "typeString": "struct User.Employee"
                          }
                        },
                        "id": 130,
                        "nodeType": "ArrayTypeName",
                        "src": "3491:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Employee_$55_storage_$dyn_storage_ptr",
                          "typeString": "struct User.Employee[]"
                        }
                      }
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3487:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Employee_$55_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct User.Employee memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3457:60:0"
                },
                {
                  "body": {
                    "id": 158,
                    "nodeType": "Block",
                    "src": "3583:88:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 145,
                              "name": "employees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 127,
                              "src": "3598:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Employee_$55_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct User.Employee memory[] memory"
                              }
                            },
                            "id": 147,
                            "indexExpression": {
                              "id": 146,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 136,
                              "src": "3608:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3598:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Employee_$55_memory_ptr",
                              "typeString": "struct User.Employee memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 148,
                                "name": "member_Organization",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32,
                                "src": "3617:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint8_$_t_struct$_Employee_$55_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint8 => struct User.Employee storage ref))"
                                }
                              },
                              "id": 151,
                              "indexExpression": {
                                "expression": {
                                  "id": 149,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3637:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 150,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3637:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3617:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Employee_$55_storage_$",
                                "typeString": "mapping(uint8 => struct User.Employee storage ref)"
                              }
                            },
                            "id": 155,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 152,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 136,
                                "src": "3649:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 153,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3657:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "3649:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3617:42:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Employee_$55_storage",
                              "typeString": "struct User.Employee storage ref"
                            }
                          },
                          "src": "3598:61:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Employee_$55_memory_ptr",
                            "typeString": "struct User.Employee memory"
                          }
                        },
                        "id": 157,
                        "nodeType": "ExpressionStatement",
                        "src": "3598:61:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 139,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 136,
                      "src": "3550:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 140,
                      "name": "numOfEmployees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116,
                      "src": "3558:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3550:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 159,
                  "initializationExpression": {
                    "assignments": [
                      136
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 136,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "3539:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "3533:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 135,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3533:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 138,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3547:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3533:15:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3574:7:0",
                      "subExpression": {
                        "id": 142,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "3574:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 144,
                    "nodeType": "ExpressionStatement",
                    "src": "3574:7:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "3528:143:0"
                },
                {
                  "expression": {
                    "id": 160,
                    "name": "employees",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 127,
                    "src": "3688:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Employee_$55_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct User.Employee memory[] memory"
                    }
                  },
                  "functionReturnParameters": 106,
                  "id": 161,
                  "nodeType": "Return",
                  "src": "3681:16:0"
                }
              ]
            },
            "documentation": {
              "id": 100,
              "nodeType": "StructuredDocumentation",
              "src": "3037:112:0",
              "text": " @notice - This function is used to determine if the user is an employee of an organization."
            },
            "functionSelector": "0a67a48d",
            "id": 163,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fetchEmployees",
            "nameLocation": "3164:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3178:2:0"
            },
            "returnParameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 105,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "3202:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Employee_$55_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct User.Employee[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 103,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 102,
                        "name": "Employee",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 55,
                        "src": "3202:8:0"
                      },
                      "referencedDeclaration": 55,
                      "src": "3202:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$55_storage_ptr",
                        "typeString": "struct User.Employee"
                      }
                    },
                    "id": 104,
                    "nodeType": "ArrayTypeName",
                    "src": "3202:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Employee_$55_storage_$dyn_storage_ptr",
                      "typeString": "struct User.Employee[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3201:19:0"
            },
            "scope": 346,
            "src": "3155:550:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 211,
              "nodeType": "Block",
              "src": "3857:453:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3890:23:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 170,
                            "name": "isEmployer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "3891:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 173,
                          "indexExpression": {
                            "expression": {
                              "id": 171,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3902:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3902:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3891:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752061726520616c7265616479207265676973746572656420617320616e20456d706c6f796572",
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3928:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a014784f013dd3fe3cec43464793b8d71bd166f6b8d95418a86f63e2589705f",
                          "typeString": "literal_string \"You are already registered as an Employer\""
                        },
                        "value": "You are already registered as an Employer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a014784f013dd3fe3cec43464793b8d71bd166f6b8d95418a86f63e2589705f",
                          "typeString": "literal_string \"You are already registered as an Employer\""
                        }
                      ],
                      "id": 169,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3868:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3868:114:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "3868:114:0"
                },
                {
                  "assignments": [
                    180
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 180,
                      "mutability": "mutable",
                      "name": "organization",
                      "nameLocation": "4053:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 211,
                      "src": "4033:32:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Organization_$60_memory_ptr",
                        "typeString": "struct User.Organization"
                      },
                      "typeName": {
                        "id": 179,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 178,
                          "name": "Organization",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 60,
                          "src": "4033:12:0"
                        },
                        "referencedDeclaration": 60,
                        "src": "4033:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Organization_$60_storage_ptr",
                          "typeString": "struct User.Organization"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 189,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 184,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4111:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4111:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4103:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 182,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4103:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4103:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4153:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 181,
                      "name": "Organization",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "4068:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Organization_$60_storage_ptr_$",
                        "typeString": "type(struct User.Organization storage pointer)"
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "owner",
                      "numOfEmployees"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "4068:98:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Organization_$60_memory_ptr",
                      "typeString": "struct User.Organization memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4033:133:0"
                },
                {
                  "expression": {
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 190,
                        "name": "employer_Organization",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "4177:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Organization_$60_storage_$",
                          "typeString": "mapping(address => struct User.Organization storage ref)"
                        }
                      },
                      "id": 193,
                      "indexExpression": {
                        "expression": {
                          "id": 191,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4199:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4199:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4177:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Organization_$60_storage",
                        "typeString": "struct User.Organization storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 194,
                      "name": "organization",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 180,
                      "src": "4213:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Organization_$60_memory_ptr",
                        "typeString": "struct User.Organization memory"
                      }
                    },
                    "src": "4177:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Organization_$60_storage",
                      "typeString": "struct User.Organization storage ref"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "4177:48:0"
                },
                {
                  "expression": {
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 197,
                        "name": "isEmployer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "4236:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 200,
                      "indexExpression": {
                        "expression": {
                          "id": 198,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4247:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4247:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4236:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4261:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4236:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "4236:29:0"
                },
                {
                  "expression": {
                    "id": 209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 204,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "4276:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                          "typeString": "mapping(address => string storage ref)"
                        }
                      },
                      "id": 207,
                      "indexExpression": {
                        "expression": {
                          "id": 205,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4282:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4282:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4276:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 208,
                      "name": "username",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "4294:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "4276:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 210,
                  "nodeType": "ExpressionStatement",
                  "src": "4276:26:0"
                }
              ]
            },
            "documentation": {
              "id": 164,
              "nodeType": "StructuredDocumentation",
              "src": "3713:83:0",
              "text": " @notice - This function is used to create a new employer/owner"
            },
            "functionSelector": "c95d75f0",
            "id": 212,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createEmployer",
            "nameLocation": "3811:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 166,
                  "mutability": "mutable",
                  "name": "username",
                  "nameLocation": "3840:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "3826:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3826:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3825:24:0"
            },
            "returnParameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3857:0:0"
            },
            "scope": 346,
            "src": "3802:508:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 298,
              "nodeType": "Block",
              "src": "4643:950:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 221,
                          "name": "isEmployer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "4662:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 224,
                        "indexExpression": {
                          "expression": {
                            "id": 222,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4673:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4673:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4662:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920616e20656d706c6f7965722063616e206d616b6520746869732072657175657374",
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4686:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_281258d9cf6edfe93f63d6df9f03ebf04b784e3822c6ead2a10b2edcd1112463",
                          "typeString": "literal_string \"Only an employer can make this request\""
                        },
                        "value": "Only an employer can make this request"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_281258d9cf6edfe93f63d6df9f03ebf04b784e3822c6ead2a10b2edcd1112463",
                          "typeString": "literal_string \"Only an employer can make this request\""
                        }
                      ],
                      "id": 220,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4654:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4654:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 227,
                  "nodeType": "ExpressionStatement",
                  "src": "4654:73:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4746:29:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 229,
                            "name": "isEmployee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40,
                            "src": "4747:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 231,
                          "indexExpression": {
                            "id": 230,
                            "name": "_employeeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 215,
                            "src": "4758:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4747:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456d706c6f79656520697320616c7265616479207265676973746572656420746f20616e206f7267616e697a6174696f6e",
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4777:51:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f75202a11d9e6d1f88f37bd99e67f91a4030c943fd82324c1edb54cc330968b5",
                          "typeString": "literal_string \"Employee is already registered to an organization\""
                        },
                        "value": "Employee is already registered to an organization"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f75202a11d9e6d1f88f37bd99e67f91a4030c943fd82324c1edb54cc330968b5",
                          "typeString": "literal_string \"Employee is already registered to an organization\""
                        }
                      ],
                      "id": 228,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4738:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4738:91:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "4738:91:0"
                },
                {
                  "assignments": [
                    238
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 238,
                      "mutability": "mutable",
                      "name": "employee",
                      "nameLocation": "4887:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 298,
                      "src": "4871:24:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$55_memory_ptr",
                        "typeString": "struct User.Employee"
                      },
                      "typeName": {
                        "id": 237,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 236,
                          "name": "Employee",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 55,
                          "src": "4871:8:0"
                        },
                        "referencedDeclaration": 55,
                        "src": "4871:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Employee_$55_storage_ptr",
                          "typeString": "struct User.Employee"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 245,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 240,
                        "name": "_employeeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "4932:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 241,
                        "name": "_employeeName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 217,
                        "src": "4973:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 242,
                          "name": "Access",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "5009:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Access_$47_$",
                            "typeString": "type(enum User.Access)"
                          }
                        },
                        "id": 243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Locked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45,
                        "src": "5009:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Access_$47",
                          "typeString": "enum User.Access"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_enum$_Access_$47",
                          "typeString": "enum User.Access"
                        }
                      ],
                      "id": 239,
                      "name": "Employee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "4898:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Employee_$55_storage_ptr_$",
                        "typeString": "type(struct User.Employee storage pointer)"
                      }
                    },
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "_address",
                      "username",
                      "access"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "4898:136:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Employee_$55_memory_ptr",
                      "typeString": "struct User.Employee memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4871:163:0"
                },
                {
                  "assignments": [
                    247
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 247,
                      "mutability": "mutable",
                      "name": "employeeId",
                      "nameLocation": "5101:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 298,
                      "src": "5095:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 246,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "5095:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 255,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 248,
                          "name": "employer_Organization",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "5114:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Organization_$60_storage_$",
                            "typeString": "mapping(address => struct User.Organization storage ref)"
                          }
                        },
                        "id": 251,
                        "indexExpression": {
                          "expression": {
                            "id": 249,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5136:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5136:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5114:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Organization_$60_storage",
                          "typeString": "struct User.Organization storage ref"
                        }
                      },
                      "id": 252,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "numOfEmployees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59,
                      "src": "5114:48:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5165:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "5114:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5095:71:0"
                },
                {
                  "expression": {
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 256,
                          "name": "employer_Organization",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "5213:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Organization_$60_storage_$",
                            "typeString": "mapping(address => struct User.Organization storage ref)"
                          }
                        },
                        "id": 259,
                        "indexExpression": {
                          "expression": {
                            "id": 257,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5235:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5235:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5213:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Organization_$60_storage",
                          "typeString": "struct User.Organization storage ref"
                        }
                      },
                      "id": 260,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numOfEmployees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59,
                      "src": "5213:48:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 261,
                      "name": "employeeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 247,
                      "src": "5264:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "5213:61:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "5213:61:0"
                },
                {
                  "expression": {
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 264,
                        "name": "isEmployee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "5315:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 266,
                      "indexExpression": {
                        "id": 265,
                        "name": "_employeeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "5326:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5315:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5346:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5315:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 269,
                  "nodeType": "ExpressionStatement",
                  "src": "5315:35:0"
                },
                {
                  "expression": {
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 270,
                        "name": "employee_Employer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "5361:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 272,
                      "indexExpression": {
                        "id": 271,
                        "name": "_employeeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "5379:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5361:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 273,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "5399:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5399:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5361:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "5361:48:0"
                },
                {
                  "expression": {
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 277,
                        "name": "employee_AccountDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "5420:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$55_storage_$",
                          "typeString": "mapping(address => struct User.Employee storage ref)"
                        }
                      },
                      "id": 279,
                      "indexExpression": {
                        "id": 278,
                        "name": "_employeeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "5444:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5420:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$55_storage",
                        "typeString": "struct User.Employee storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 280,
                      "name": "employee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 238,
                      "src": "5464:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$55_memory_ptr",
                        "typeString": "struct User.Employee memory"
                      }
                    },
                    "src": "5420:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Employee_$55_storage",
                      "typeString": "struct User.Employee storage ref"
                    }
                  },
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "5420:52:0"
                },
                {
                  "expression": {
                    "id": 290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 283,
                          "name": "member_Organization",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "5483:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint8_$_t_struct$_Employee_$55_storage_$_$",
                            "typeString": "mapping(address => mapping(uint8 => struct User.Employee storage ref))"
                          }
                        },
                        "id": 287,
                        "indexExpression": {
                          "expression": {
                            "id": 284,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5503:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5503:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5483:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Employee_$55_storage_$",
                          "typeString": "mapping(uint8 => struct User.Employee storage ref)"
                        }
                      },
                      "id": 288,
                      "indexExpression": {
                        "id": 286,
                        "name": "employeeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 247,
                        "src": "5515:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5483:43:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$55_storage",
                        "typeString": "struct User.Employee storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 289,
                      "name": "employee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 238,
                      "src": "5529:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$55_memory_ptr",
                        "typeString": "struct User.Employee memory"
                      }
                    },
                    "src": "5483:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Employee_$55_storage",
                      "typeString": "struct User.Employee storage ref"
                    }
                  },
                  "id": 291,
                  "nodeType": "ExpressionStatement",
                  "src": "5483:54:0"
                },
                {
                  "expression": {
                    "id": 296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 292,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "5548:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                          "typeString": "mapping(address => string storage ref)"
                        }
                      },
                      "id": 294,
                      "indexExpression": {
                        "id": 293,
                        "name": "_employeeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "5554:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5548:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 295,
                      "name": "_employeeName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 217,
                      "src": "5572:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "5548:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 297,
                  "nodeType": "ExpressionStatement",
                  "src": "5548:37:0"
                }
              ]
            },
            "documentation": {
              "id": 213,
              "nodeType": "StructuredDocumentation",
              "src": "4318:236:0",
              "text": " @notice - This function is used to add a employee to the organization owned by an employer.\n @param _employeeAddress - The address of the employee.\n @param _employeeName - The username of the employee."
            },
            "functionSelector": "a502e808",
            "id": 299,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addEmployee",
            "nameLocation": "4569:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 215,
                  "mutability": "mutable",
                  "name": "_employeeAddress",
                  "nameLocation": "4589:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 299,
                  "src": "4581:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 214,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4581:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 217,
                  "mutability": "mutable",
                  "name": "_employeeName",
                  "nameLocation": "4621:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 299,
                  "src": "4607:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 216,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4607:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4580:55:0"
            },
            "returnParameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4643:0:0"
            },
            "scope": 346,
            "src": "4560:1033:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 344,
              "nodeType": "Block",
              "src": "5814:487:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 306,
                          "name": "isEmployer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "5833:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 309,
                        "indexExpression": {
                          "expression": {
                            "id": 307,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5844:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5844:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5833:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920616e20656d706c6f7965722063616e206d616b6520746869732072657175657374",
                        "id": 310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5857:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_281258d9cf6edfe93f63d6df9f03ebf04b784e3822c6ead2a10b2edcd1112463",
                          "typeString": "literal_string \"Only an employer can make this request\""
                        },
                        "value": "Only an employer can make this request"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_281258d9cf6edfe93f63d6df9f03ebf04b784e3822c6ead2a10b2edcd1112463",
                          "typeString": "literal_string \"Only an employer can make this request\""
                        }
                      ],
                      "id": 305,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5825:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5825:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 312,
                  "nodeType": "ExpressionStatement",
                  "src": "5825:73:0"
                },
                {
                  "assignments": [
                    315
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 315,
                      "mutability": "mutable",
                      "name": "currentAccess",
                      "nameLocation": "5945:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 344,
                      "src": "5938:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Access_$47",
                        "typeString": "enum User.Access"
                      },
                      "typeName": {
                        "id": 314,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 313,
                          "name": "Access",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 47,
                          "src": "5938:6:0"
                        },
                        "referencedDeclaration": 47,
                        "src": "5938:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Access_$47",
                          "typeString": "enum User.Access"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 320,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 316,
                        "name": "employee_AccountDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "5961:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$55_storage_$",
                          "typeString": "mapping(address => struct User.Employee storage ref)"
                        }
                      },
                      "id": 318,
                      "indexExpression": {
                        "id": 317,
                        "name": "_employeeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "5985:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5961:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$55_storage",
                        "typeString": "struct User.Employee storage ref"
                      }
                    },
                    "id": 319,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "access",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 54,
                    "src": "5961:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Access_$47",
                      "typeString": "enum User.Access"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5938:71:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Access_$47",
                      "typeString": "enum User.Access"
                    },
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 321,
                      "name": "currentAccess",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 315,
                      "src": "6072:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Access_$47",
                        "typeString": "enum User.Access"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 322,
                        "name": "Access",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "6089:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Access_$47_$",
                          "typeString": "type(enum User.Access)"
                        }
                      },
                      "id": 323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45,
                      "src": "6089:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Access_$47",
                        "typeString": "enum User.Access"
                      }
                    },
                    "src": "6072:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 342,
                    "nodeType": "Block",
                    "src": "6203:91:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 334,
                                "name": "employee_AccountDetails",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 20,
                                "src": "6218:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$55_storage_$",
                                  "typeString": "mapping(address => struct User.Employee storage ref)"
                                }
                              },
                              "id": 336,
                              "indexExpression": {
                                "id": 335,
                                "name": "_employeeAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 302,
                                "src": "6242:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6218:41:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Employee_$55_storage",
                                "typeString": "struct User.Employee storage ref"
                              }
                            },
                            "id": 337,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "access",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54,
                            "src": "6218:48:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Access_$47",
                              "typeString": "enum User.Access"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 338,
                              "name": "Access",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "6269:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Access_$47_$",
                                "typeString": "type(enum User.Access)"
                              }
                            },
                            "id": 339,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Locked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45,
                            "src": "6269:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Access_$47",
                              "typeString": "enum User.Access"
                            }
                          },
                          "src": "6218:64:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Access_$47",
                            "typeString": "enum User.Access"
                          }
                        },
                        "id": 341,
                        "nodeType": "ExpressionStatement",
                        "src": "6218:64:0"
                      }
                    ]
                  },
                  "id": 343,
                  "nodeType": "IfStatement",
                  "src": "6068:226:0",
                  "trueBody": {
                    "id": 333,
                    "nodeType": "Block",
                    "src": "6104:93:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 325,
                                "name": "employee_AccountDetails",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 20,
                                "src": "6119:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$55_storage_$",
                                  "typeString": "mapping(address => struct User.Employee storage ref)"
                                }
                              },
                              "id": 327,
                              "indexExpression": {
                                "id": 326,
                                "name": "_employeeAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 302,
                                "src": "6143:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6119:41:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Employee_$55_storage",
                                "typeString": "struct User.Employee storage ref"
                              }
                            },
                            "id": 328,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "access",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54,
                            "src": "6119:48:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Access_$47",
                              "typeString": "enum User.Access"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 329,
                              "name": "Access",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "6170:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Access_$47_$",
                                "typeString": "type(enum User.Access)"
                              }
                            },
                            "id": 330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Unlocked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46,
                            "src": "6170:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Access_$47",
                              "typeString": "enum User.Access"
                            }
                          },
                          "src": "6119:66:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Access_$47",
                            "typeString": "enum User.Access"
                          }
                        },
                        "id": 332,
                        "nodeType": "ExpressionStatement",
                        "src": "6119:66:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 300,
              "nodeType": "StructuredDocumentation",
              "src": "5601:152:0",
              "text": " @notice - This function is used to change the access of an employee.\n @param _employeeAddress - The address of the employee."
            },
            "functionSelector": "f403688a",
            "id": 345,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeAccess",
            "nameLocation": "5768:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 302,
                  "mutability": "mutable",
                  "name": "_employeeAddress",
                  "nameLocation": "5789:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 345,
                  "src": "5781:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5781:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5780:26:0"
            },
            "returnParameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5814:0:0"
            },
            "scope": 346,
            "src": "5759:542:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 347,
        "src": "200:6104:0",
        "usedErrors": []
      }
    ],
    "src": "47:6259:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {},
      "links": {},
      "address": "0x2646E8Ac94852C6D54dCe5Ad1563Cd7290757682",
      "transactionHash": "0x52c7308d1fa575bfa0cca670dbdf802a7a97890f635aead695f68914613d4b96"
    },
    "80001": {
      "events": {},
      "links": {},
      "address": "0x2CD55dB4eC31DB02685249eD27eE1950d3f331cD",
      "transactionHash": "0x058b9a9a08565d1b9c162993c297c346a3f418821a192f899be0650b02316d12"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-03-24T21:24:36.770Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addEmployee(address,string)": {
        "params": {
          "_employeeAddress": "- The address of the employee.",
          "_employeeName": "- The username of the employee."
        }
      },
      "changeAccess(address)": {
        "params": {
          "_employeeAddress": "- The address of the employee."
        }
      },
      "getUserName(address)": {
        "params": {
          "_address": "- The address of the user."
        }
      },
      "getUserType(address)": {
        "params": {
          "user": "- The address of the user."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addEmployee(address,string)": {
        "notice": "- This function is used to add a employee to the organization owned by an employer."
      },
      "changeAccess(address)": {
        "notice": "- This function is used to change the access of an employee."
      },
      "createEmployer(string)": {
        "notice": "- This function is used to create a new employer/owner"
      },
      "fetchEmployees()": {
        "notice": "- This function is used to determine if the user is an employee of an organization."
      },
      "getUserName(address)": {
        "notice": "- This function is used to retrieve the username based on wallet address"
      },
      "getUserType(address)": {
        "notice": "- This function is used to determine the type of user 1 = employer. 2 = employee. 3 = unenrolled"
      }
    },
    "version": 1
  }
}
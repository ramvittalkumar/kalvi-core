{
  "contractName": "User",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUserType",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "fetchEmployees",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "_address",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "username",
              "type": "string"
            },
            {
              "internalType": "enum User.Access",
              "name": "access",
              "type": "uint8"
            }
          ],
          "internalType": "struct User.Employee[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "createEmployer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_employeeAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_employeeName",
          "type": "string"
        }
      ],
      "name": "addEmployee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_employeeAddress",
          "type": "address"
        }
      ],
      "name": "changeAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_employeeAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_employeeName\",\"type\":\"string\"}],\"name\":\"addEmployee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_employeeAddress\",\"type\":\"address\"}],\"name\":\"changeAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createEmployer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fetchEmployees\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"enum User.Access\",\"name\":\"access\",\"type\":\"uint8\"}],\"internalType\":\"struct User.Employee[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserType\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addEmployee(address,string)\":{\"params\":{\"_employeeAddress\":\"- The address of the employee.\",\"_employeeName\":\"- The username of the employee.\"}},\"changeAccess(address)\":{\"params\":{\"_employeeAddress\":\"- The address of the employee.\"}},\"getUserType(address)\":{\"params\":{\"user\":\"- The address of the user.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addEmployee(address,string)\":{\"notice\":\"- This function is used to add a employee to the organization owned by an employer.\"},\"changeAccess(address)\":{\"notice\":\"- This function is used to change the access of an employee.\"},\"createEmployer()\":{\"notice\":\"- This function is used to create a new employer/owner\"},\"fetchEmployees()\":{\"notice\":\"- This function is used to determine if the user is an employee of an organization.\"},\"getUserType(address)\":{\"notice\":\"- This function is used to determine the type of user 1 = employer. 2 = employee. 3 = unenrolled\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/User.sol\":\"User\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1500},\"remappings\":[]},\"sources\":{\"project:/contracts/User.sol\":{\"keccak256\":\"0x407d6563b46988bc2ad76181232c204743617b1dcf4a84a99919446d78884c4e\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://245ac4bc5f38dee399714ee3cc91249af2bd303402466bd2aa602060e5e7b5f2\",\"dweb:/ipfs/QmUvpchu6c621iXkC8Z3Qz1MVSvoNhqXRocBEdkzBQsiDS\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610e8f806100206000396000f3fe608060405234801561001057600080fd5b5060043610610084576000357c0100000000000000000000000000000000000000000000000000000000900480638b3f863f1161006d5780638b3f863f146100b1578063a502e808146100d2578063f403688a146100e557600080fd5b80630a67a48d1461008957806330242b76146100a7575b600080fd5b6100916100f8565b60405161009e9190610b52565b60405180910390f35b6100af61038b565b005b6100c46100bf366004610c4f565b6104c3565b60405190815260200161009e565b6100af6100e0366004610ca0565b61053c565b6100af6100f3366004610c4f565b6108ba565b3360009081526004602052604090205460609060ff1661019f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f6e6c7920616e20456d706c6f7965722063616e206d616b652074686973207260448201527f657175657374000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b3360009081526002602052604081205474010000000000000000000000000000000000000000900460ff16908167ffffffffffffffff8111156101e4576101e4610c71565b60405190808252806020026020018201604052801561021d57816020015b61020a610a08565b8152602001906001900390816102025790505b50905060005b8260ff168160ff161015610384573360009081526003602052604081209061024c836001610d91565b60ff1681526020808201929092526040908101600020815160608101909252805473ffffffffffffffffffffffffffffffffffffffff168252600181018054929391929184019161029c90610db6565b80601f01602080910402602001604051908101604052809291908181526020018280546102c890610db6565b80156103155780601f106102ea57610100808354040283529160200191610315565b820191906000526020600020905b8154815290600101906020018083116102f857829003601f168201915b5050509183525050600282015460209091019060ff16600181111561033c5761033c610ae8565b600181111561034d5761034d610ae8565b81525050828260ff168151811061036657610366610e0a565b6020026020010181905250808061037c90610e39565b915050610223565b5092915050565b3360009081526004602052604090205460ff161561042b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f596f752061726520616c7265616479207265676973746572656420617320616e60448201527f20456d706c6f79657200000000000000000000000000000000000000000000006064820152608401610196565b60408051808201825233808252600060208084018281529282526002815284822093518454935160ff1674010000000000000000000000000000000000000000027fffffffffffffffffffffff00000000000000000000000000000000000000000090941673ffffffffffffffffffffffffffffffffffffffff9190911617929092179092556004905220805460ff19166001179055565b73ffffffffffffffffffffffffffffffffffffffff811660009081526004602052604081205460ff16156104f957506001919050565b73ffffffffffffffffffffffffffffffffffffffff821660009081526005602052604090205460ff161561052f57506002919050565b506003919050565b919050565b3360009081526004602052604090205460ff166105db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f6e6c7920616e20656d706c6f7965722063616e206d616b652074686973207260448201527f65717565737400000000000000000000000000000000000000000000000000006064820152608401610196565b73ffffffffffffffffffffffffffffffffffffffff821660009081526005602052604090205460ff1615610691576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f456d706c6f79656520697320616c72656164792072656769737465726564207460448201527f6f20616e206f7267616e697a6174696f6e0000000000000000000000000000006064820152608401610196565b6040805160608101825273ffffffffffffffffffffffffffffffffffffffff8416815260208101839052600091810182905233600090815260026020526040812054919250906106fd9074010000000000000000000000000000000000000000900460ff166001610d91565b336000818152600260209081526040808320805460ff871674010000000000000000000000000000000000000000027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff90911617905573ffffffffffffffffffffffffffffffffffffffff898116845260058352818420805460ff1916600190811790915584845282852080547fffffffffffffffffffffffff00000000000000000000000000000000000000009081169097179055808452919093208751815494169390941692909217835585810151805194955086946107e6938501929190910190610a4f565b50604082015160028201805460ff19166001838181111561080957610809610ae8565b02179055505033600090815260036020908152604080832060ff861684528252909120845181547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178155848201518051869450919261088a92600185019290910190610a4f565b50604082015160028201805460ff1916600183818111156108ad576108ad610ae8565b0217905550505050505050565b3360009081526004602052604090205460ff16610959576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f6e6c7920616e20656d706c6f7965722063616e206d616b652074686973207260448201527f65717565737400000000000000000000000000000000000000000000000000006064820152608401610196565b73ffffffffffffffffffffffffffffffffffffffff811660009081526001602052604081206002015460ff169081600181111561099857610998610ae8565b14156109d6575073ffffffffffffffffffffffffffffffffffffffff166000908152600160208190526040909120600201805460ff19169091179055565b5073ffffffffffffffffffffffffffffffffffffffff166000908152600160205260409020600201805460ff19169055565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160006001811115610a4a57610a4a610ae8565b905290565b828054610a5b90610db6565b90600052602060002090601f016020900481019282610a7d5760008555610ac3565b82601f10610a9657805160ff1916838001178555610ac3565b82800160010185558215610ac3579182015b82811115610ac3578251825591602001919060010190610aa8565b50610acf929150610ad3565b5090565b5b80821115610acf5760008155600101610ad4565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110610b4e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b6020808252825182820181905260009190604090818501908084028601830187850186805b84811015610c1c57603f198a85030186528251606073ffffffffffffffffffffffffffffffffffffffff825116865289820151818b880152805180838901528592505b80831015610bd8578183018c015188840160800152918b0191610bba565b80831115610be957856080828a0101525b928a015192610bfa888c0185610b17565b988b0198601f01601f1916969096016080019550505091870191600101610b77565b50919998505050505050505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461053757600080fd5b600060208284031215610c6157600080fd5b610c6a82610c2b565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060408385031215610cb357600080fd5b610cbc83610c2b565b9150602083013567ffffffffffffffff80821115610cd957600080fd5b818501915085601f830112610ced57600080fd5b813581811115610cff57610cff610c71565b604051601f8201601f19908116603f01168101908382118183101715610d2757610d27610c71565b81604052828152886020848701011115610d4057600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060ff821660ff84168060ff03821115610dae57610dae610d62565b019392505050565b600281046001821680610dca57607f821691505b60208210811415610e04577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060ff821660ff811415610e5057610e50610d62565b6001019291505056fea264697066735822122095485877ad6dd29e958d43e47eb44bafb00baf08ee4737a91153c6cbf7961e4564736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610084576000357c0100000000000000000000000000000000000000000000000000000000900480638b3f863f1161006d5780638b3f863f146100b1578063a502e808146100d2578063f403688a146100e557600080fd5b80630a67a48d1461008957806330242b76146100a7575b600080fd5b6100916100f8565b60405161009e9190610b52565b60405180910390f35b6100af61038b565b005b6100c46100bf366004610c4f565b6104c3565b60405190815260200161009e565b6100af6100e0366004610ca0565b61053c565b6100af6100f3366004610c4f565b6108ba565b3360009081526004602052604090205460609060ff1661019f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f6e6c7920616e20456d706c6f7965722063616e206d616b652074686973207260448201527f657175657374000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b3360009081526002602052604081205474010000000000000000000000000000000000000000900460ff16908167ffffffffffffffff8111156101e4576101e4610c71565b60405190808252806020026020018201604052801561021d57816020015b61020a610a08565b8152602001906001900390816102025790505b50905060005b8260ff168160ff161015610384573360009081526003602052604081209061024c836001610d91565b60ff1681526020808201929092526040908101600020815160608101909252805473ffffffffffffffffffffffffffffffffffffffff168252600181018054929391929184019161029c90610db6565b80601f01602080910402602001604051908101604052809291908181526020018280546102c890610db6565b80156103155780601f106102ea57610100808354040283529160200191610315565b820191906000526020600020905b8154815290600101906020018083116102f857829003601f168201915b5050509183525050600282015460209091019060ff16600181111561033c5761033c610ae8565b600181111561034d5761034d610ae8565b81525050828260ff168151811061036657610366610e0a565b6020026020010181905250808061037c90610e39565b915050610223565b5092915050565b3360009081526004602052604090205460ff161561042b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f596f752061726520616c7265616479207265676973746572656420617320616e60448201527f20456d706c6f79657200000000000000000000000000000000000000000000006064820152608401610196565b60408051808201825233808252600060208084018281529282526002815284822093518454935160ff1674010000000000000000000000000000000000000000027fffffffffffffffffffffff00000000000000000000000000000000000000000090941673ffffffffffffffffffffffffffffffffffffffff9190911617929092179092556004905220805460ff19166001179055565b73ffffffffffffffffffffffffffffffffffffffff811660009081526004602052604081205460ff16156104f957506001919050565b73ffffffffffffffffffffffffffffffffffffffff821660009081526005602052604090205460ff161561052f57506002919050565b506003919050565b919050565b3360009081526004602052604090205460ff166105db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f6e6c7920616e20656d706c6f7965722063616e206d616b652074686973207260448201527f65717565737400000000000000000000000000000000000000000000000000006064820152608401610196565b73ffffffffffffffffffffffffffffffffffffffff821660009081526005602052604090205460ff1615610691576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f456d706c6f79656520697320616c72656164792072656769737465726564207460448201527f6f20616e206f7267616e697a6174696f6e0000000000000000000000000000006064820152608401610196565b6040805160608101825273ffffffffffffffffffffffffffffffffffffffff8416815260208101839052600091810182905233600090815260026020526040812054919250906106fd9074010000000000000000000000000000000000000000900460ff166001610d91565b336000818152600260209081526040808320805460ff871674010000000000000000000000000000000000000000027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff90911617905573ffffffffffffffffffffffffffffffffffffffff898116845260058352818420805460ff1916600190811790915584845282852080547fffffffffffffffffffffffff00000000000000000000000000000000000000009081169097179055808452919093208751815494169390941692909217835585810151805194955086946107e6938501929190910190610a4f565b50604082015160028201805460ff19166001838181111561080957610809610ae8565b02179055505033600090815260036020908152604080832060ff861684528252909120845181547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178155848201518051869450919261088a92600185019290910190610a4f565b50604082015160028201805460ff1916600183818111156108ad576108ad610ae8565b0217905550505050505050565b3360009081526004602052604090205460ff16610959576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f6e6c7920616e20656d706c6f7965722063616e206d616b652074686973207260448201527f65717565737400000000000000000000000000000000000000000000000000006064820152608401610196565b73ffffffffffffffffffffffffffffffffffffffff811660009081526001602052604081206002015460ff169081600181111561099857610998610ae8565b14156109d6575073ffffffffffffffffffffffffffffffffffffffff166000908152600160208190526040909120600201805460ff19169091179055565b5073ffffffffffffffffffffffffffffffffffffffff166000908152600160205260409020600201805460ff19169055565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160006001811115610a4a57610a4a610ae8565b905290565b828054610a5b90610db6565b90600052602060002090601f016020900481019282610a7d5760008555610ac3565b82601f10610a9657805160ff1916838001178555610ac3565b82800160010185558215610ac3579182015b82811115610ac3578251825591602001919060010190610aa8565b50610acf929150610ad3565b5090565b5b80821115610acf5760008155600101610ad4565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110610b4e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b6020808252825182820181905260009190604090818501908084028601830187850186805b84811015610c1c57603f198a85030186528251606073ffffffffffffffffffffffffffffffffffffffff825116865289820151818b880152805180838901528592505b80831015610bd8578183018c015188840160800152918b0191610bba565b80831115610be957856080828a0101525b928a015192610bfa888c0185610b17565b988b0198601f01601f1916969096016080019550505091870191600101610b77565b50919998505050505050505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461053757600080fd5b600060208284031215610c6157600080fd5b610c6a82610c2b565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060408385031215610cb357600080fd5b610cbc83610c2b565b9150602083013567ffffffffffffffff80821115610cd957600080fd5b818501915085601f830112610ced57600080fd5b813581811115610cff57610cff610c71565b604051601f8201601f19908116603f01168101908382118183101715610d2757610d27610c71565b81604052828152886020848701011115610d4057600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060ff821660ff84168060ff03821115610dae57610dae610d62565b019392505050565b600281046001821680610dca57607f821691505b60208210811415610e04577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060ff821660ff811415610e5057610e50610d62565b6001019291505056fea264697066735822122095485877ad6dd29e958d43e47eb44bafb00baf08ee4737a91153c6cbf7961e4564736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6792:2",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:2",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "46:152:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "63:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "66:77:2",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "56:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "56:88:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "56:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "160:1:2",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "163:4:2",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "153:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "153:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "153:15:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "184:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "187:4:2",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "177:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "177:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "177:15:2"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "14:184:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "251:243:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "293:168:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "314:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "317:77:2",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "307:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "307:88:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "307:88:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "415:1:2",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "418:4:2",
                              "type": "",
                              "value": "0x21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "408:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "408:15:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "408:15:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "443:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "446:4:2",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "436:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "436:15:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "436:15:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "274:5:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "281:1:2",
                            "type": "",
                            "value": "2"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "271:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "271:12:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "264:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "264:20:2"
                  },
                  "nodeType": "YulIf",
                  "src": "261:200:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "477:3:2"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "482:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "470:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "470:18:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "470:18:2"
                }
              ]
            },
            "name": "abi_encode_enum_Access",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "235:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "242:3:2",
                "type": ""
              }
            ],
            "src": "203:291:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "698:1477:2",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "708:12:2",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "718:2:2",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "712:2:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "729:32:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "747:9:2"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "758:2:2"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "743:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "743:18:2"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "733:6:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "777:9:2"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "788:2:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "770:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "770:21:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "770:21:2"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "800:17:2",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "811:6:2"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "804:3:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "826:27:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "846:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "840:5:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "840:13:2"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "830:6:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "869:6:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "877:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "862:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "862:22:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "862:22:2"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "893:12:2",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "903:2:2",
                    "type": "",
                    "value": "64"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "897:2:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "914:25:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "925:9:2"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "936:2:2"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "921:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "921:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "914:3:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "948:54:2",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "970:9:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "985:6:2"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "993:2:2"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "981:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "981:15:2"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "966:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "966:31:2"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "999:2:2"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "962:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "962:40:2"
                  },
                  "variables": [
                    {
                      "name": "tail_2",
                      "nodeType": "YulTypedName",
                      "src": "952:6:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1011:29:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1029:6:2"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1037:2:2"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1025:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1025:15:2"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "1015:6:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1049:10:2",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1058:1:2",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1053:1:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1068:12:2",
                  "value": {
                    "name": "i",
                    "nodeType": "YulIdentifier",
                    "src": "1079:1:2"
                  },
                  "variables": [
                    {
                      "name": "i_1",
                      "nodeType": "YulTypedName",
                      "src": "1072:3:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1144:1002:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "1165:3:2"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "tail_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "1178:6:2"
                                    },
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "1186:9:2"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "1174:3:2"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1174:22:2"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1202:2:2",
                                      "type": "",
                                      "value": "63"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "1198:3:2"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1198:7:2"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1170:3:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1170:36:2"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1158:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1158:49:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1158:49:2"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1220:23:2",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "1236:6:2"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1230:5:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1230:13:2"
                        },
                        "variables": [
                          {
                            "name": "_3",
                            "nodeType": "YulTypedName",
                            "src": "1224:2:2",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1256:14:2",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1266:4:2",
                          "type": "",
                          "value": "0x60"
                        },
                        "variables": [
                          {
                            "name": "_4",
                            "nodeType": "YulTypedName",
                            "src": "1260:2:2",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "tail_2",
                              "nodeType": "YulIdentifier",
                              "src": "1290:6:2"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_3",
                                      "nodeType": "YulIdentifier",
                                      "src": "1308:2:2"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "1302:5:2"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1302:9:2"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1313:42:2",
                                  "type": "",
                                  "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "1298:3:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1298:58:2"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1283:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1283:74:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1283:74:2"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1370:38:2",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulIdentifier",
                                  "src": "1400:2:2"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1404:2:2"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1396:3:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1396:11:2"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1390:5:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1390:18:2"
                        },
                        "variables": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulTypedName",
                            "src": "1374:12:2",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "tail_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1432:6:2"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1440:2:2"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1428:3:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1428:15:2"
                            },
                            {
                              "name": "_4",
                              "nodeType": "YulIdentifier",
                              "src": "1445:2:2"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1421:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1421:27:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1421:27:2"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1461:35:2",
                        "value": {
                          "arguments": [
                            {
                              "name": "memberValue0",
                              "nodeType": "YulIdentifier",
                              "src": "1483:12:2"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1477:5:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1477:19:2"
                        },
                        "variables": [
                          {
                            "name": "length_1",
                            "nodeType": "YulTypedName",
                            "src": "1465:8:2",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "tail_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1520:6:2"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "1528:2:2"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1516:3:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1516:15:2"
                            },
                            {
                              "name": "length_1",
                              "nodeType": "YulIdentifier",
                              "src": "1533:8:2"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1509:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1509:33:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1509:33:2"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1555:12:2",
                        "value": {
                          "name": "i",
                          "nodeType": "YulIdentifier",
                          "src": "1566:1:2"
                        },
                        "variables": [
                          {
                            "name": "i_2",
                            "nodeType": "YulTypedName",
                            "src": "1559:3:2",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1642:106:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "tail_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "1675:6:2"
                                          },
                                          {
                                            "name": "i_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "1683:3:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1671:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1671:16:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1689:3:2",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1667:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1667:26:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "memberValue0",
                                                "nodeType": "YulIdentifier",
                                                "src": "1709:12:2"
                                              },
                                              {
                                                "name": "i_2",
                                                "nodeType": "YulIdentifier",
                                                "src": "1723:3:2"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "1705:3:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1705:22:2"
                                          },
                                          {
                                            "name": "_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "1729:2:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1701:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1701:31:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "1695:5:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1695:38:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1660:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1660:74:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1660:74:2"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "i_2",
                              "nodeType": "YulIdentifier",
                              "src": "1591:3:2"
                            },
                            {
                              "name": "length_1",
                              "nodeType": "YulIdentifier",
                              "src": "1596:8:2"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "1588:2:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1588:17:2"
                        },
                        "nodeType": "YulForLoop",
                        "post": {
                          "nodeType": "YulBlock",
                          "src": "1606:23:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1608:19:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "i_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1619:3:2"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1624:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1615:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1615:12:2"
                              },
                              "variableNames": [
                                {
                                  "name": "i_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1608:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "pre": {
                          "nodeType": "YulBlock",
                          "src": "1584:3:2",
                          "statements": []
                        },
                        "src": "1580:168:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1794:74:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "tail_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "1827:6:2"
                                          },
                                          {
                                            "name": "length_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "1835:8:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1823:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1823:21:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1846:3:2",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1819:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1819:31:2"
                                  },
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "1852:1:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1812:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1812:42:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1812:42:2"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "i_2",
                              "nodeType": "YulIdentifier",
                              "src": "1767:3:2"
                            },
                            {
                              "name": "length_1",
                              "nodeType": "YulIdentifier",
                              "src": "1772:8:2"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "1764:2:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1764:17:2"
                        },
                        "nodeType": "YulIf",
                        "src": "1761:107:2"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1881:40:2",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulIdentifier",
                                  "src": "1913:2:2"
                                },
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1917:2:2"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1909:3:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1909:11:2"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1903:5:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1903:18:2"
                        },
                        "variables": [
                          {
                            "name": "memberValue0_1",
                            "nodeType": "YulTypedName",
                            "src": "1885:14:2",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "memberValue0_1",
                              "nodeType": "YulIdentifier",
                              "src": "1957:14:2"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "tail_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1977:6:2"
                                },
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1985:2:2"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1973:3:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1973:15:2"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_enum_Access",
                            "nodeType": "YulIdentifier",
                            "src": "1934:22:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1934:55:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1934:55:2"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2002:64:2",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "tail_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "2020:6:2"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "length_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "2036:8:2"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2046:2:2",
                                          "type": "",
                                          "value": "31"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2032:3:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2032:17:2"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2055:2:2",
                                          "type": "",
                                          "value": "31"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "not",
                                        "nodeType": "YulIdentifier",
                                        "src": "2051:3:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2051:7:2"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "2028:3:2"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2028:31:2"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2016:3:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2016:44:2"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2062:3:2",
                              "type": "",
                              "value": "128"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2012:3:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2012:54:2"
                        },
                        "variableNames": [
                          {
                            "name": "tail_2",
                            "nodeType": "YulIdentifier",
                            "src": "2002:6:2"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2079:25:2",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "2093:6:2"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "2101:2:2"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2089:3:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2089:15:2"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2079:6:2"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2117:19:2",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "2128:3:2"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "2133:2:2"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2124:3:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2124:12:2"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2117:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i_1",
                        "nodeType": "YulIdentifier",
                        "src": "1100:3:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1105:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1097:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1097:15:2"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1113:22:2",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1115:18:2",
                        "value": {
                          "arguments": [
                            {
                              "name": "i_1",
                              "nodeType": "YulIdentifier",
                              "src": "1126:3:2"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1131:1:2",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1122:3:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1122:11:2"
                        },
                        "variableNames": [
                          {
                            "name": "i_1",
                            "nodeType": "YulIdentifier",
                            "src": "1115:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1093:3:2",
                    "statements": []
                  },
                  "src": "1089:1057:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2155:14:2",
                  "value": {
                    "name": "tail_2",
                    "nodeType": "YulIdentifier",
                    "src": "2163:6:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2155:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_struct$_Employee_$84_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Employee_$84_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "667:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "678:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "689:4:2",
                "type": ""
              }
            ],
            "src": "499:1676:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2229:147:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2239:29:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2261:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2248:12:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2248:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2239:5:2"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2354:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2363:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2366:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2356:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2356:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2356:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2290:5:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2301:5:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2308:42:2",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2297:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2297:54:2"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2287:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2287:65:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2280:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2280:73:2"
                  },
                  "nodeType": "YulIf",
                  "src": "2277:93:2"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2208:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2219:5:2",
                "type": ""
              }
            ],
            "src": "2180:196:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2451:116:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2497:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2506:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2509:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2499:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2499:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2499:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2472:7:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2481:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2468:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2468:23:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2493:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2464:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2464:32:2"
                  },
                  "nodeType": "YulIf",
                  "src": "2461:52:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2522:39:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2551:9:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2532:18:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2532:29:2"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2522:6:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2417:9:2",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2428:7:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2440:6:2",
                "type": ""
              }
            ],
            "src": "2381:186:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2673:76:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2683:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2695:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2706:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2691:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2691:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2683:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2725:9:2"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2736:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2718:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2718:25:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2718:25:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2642:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2653:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2664:4:2",
                "type": ""
              }
            ],
            "src": "2572:177:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2786:152:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2803:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2806:77:2",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2796:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2796:88:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2796:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2900:1:2",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2903:4:2",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2893:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2893:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2893:15:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2924:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2927:4:2",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2917:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2917:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2917:15:2"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "2754:184:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3040:899:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3086:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3095:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3098:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3088:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3088:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3088:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3061:7:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3070:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3057:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3057:23:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3082:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3053:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3053:32:2"
                  },
                  "nodeType": "YulIf",
                  "src": "3050:52:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3111:39:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3140:9:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3121:18:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3121:29:2"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3111:6:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3159:46:2",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3190:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3201:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3186:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3186:18:2"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3173:12:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3173:32:2"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "3163:6:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3214:28:2",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3224:18:2",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3218:2:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3269:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3278:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3281:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3271:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3271:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3271:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3257:6:2"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3265:2:2"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3254:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3254:14:2"
                  },
                  "nodeType": "YulIf",
                  "src": "3251:34:2"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3294:32:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3308:9:2"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3319:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3304:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3304:22:2"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "3298:2:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3374:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3383:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3386:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3376:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3376:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3376:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "3353:2:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3357:4:2",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3349:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3349:13:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3364:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3345:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3345:27:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3338:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3338:35:2"
                  },
                  "nodeType": "YulIf",
                  "src": "3335:55:2"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3399:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "3422:2:2"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3409:12:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3409:16:2"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "3403:2:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3448:22:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "3450:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3450:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3450:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "3440:2:2"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3444:2:2"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3437:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3437:10:2"
                  },
                  "nodeType": "YulIf",
                  "src": "3434:36:2"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3479:17:2",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3493:2:2",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "3489:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3489:7:2"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "3483:2:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3505:23:2",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3525:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3519:5:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3519:9:2"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "3509:6:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3537:71:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "3559:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "3583:2:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3587:4:2",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3579:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3579:13:2"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "3594:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "3575:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3575:22:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3599:2:2",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3571:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3571:31:2"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "3604:2:2"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3567:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3567:40:2"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3555:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3555:53:2"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "3541:10:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3667:22:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "3669:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3669:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3669:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3626:10:2"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3638:2:2"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3623:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3623:18:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3646:10:2"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3658:6:2"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3643:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3643:22:2"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "3620:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3620:46:2"
                  },
                  "nodeType": "YulIf",
                  "src": "3617:72:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3705:2:2",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "3709:10:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3698:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3698:22:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3698:22:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "3736:6:2"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "3744:2:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3729:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3729:18:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3729:18:2"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3793:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3802:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3805:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3795:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3795:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3795:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "3770:2:2"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "3774:2:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3766:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3766:11:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3779:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3762:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3762:20:2"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3784:7:2"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3759:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3759:33:2"
                  },
                  "nodeType": "YulIf",
                  "src": "3756:53:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3835:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3843:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3831:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3831:15:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "3852:2:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3856:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3848:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3848:11:2"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "3861:2:2"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "3818:12:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3818:46:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3818:46:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "3888:6:2"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "3896:2:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3884:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3884:15:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3901:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3880:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3880:24:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3906:1:2",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3873:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3873:35:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3873:35:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3917:16:2",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "3927:6:2"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3917:6:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2998:9:2",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3009:7:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3021:6:2",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3029:6:2",
                "type": ""
              }
            ],
            "src": "2943:996:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4118:228:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4135:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4146:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4128:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4128:21:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4128:21:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4169:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4180:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4165:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4165:18:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4185:2:2",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4158:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4158:30:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4158:30:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4208:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4219:2:2",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4204:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4204:18:2"
                      },
                      {
                        "hexValue": "4f6e6c7920616e20456d706c6f7965722063616e206d616b6520746869732072",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4224:34:2",
                        "type": "",
                        "value": "Only an Employer can make this r"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4197:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4197:62:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4197:62:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4279:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4290:2:2",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4275:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4275:18:2"
                      },
                      {
                        "hexValue": "657175657374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4295:8:2",
                        "type": "",
                        "value": "equest"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4268:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4268:36:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4268:36:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4313:27:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4325:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4336:3:2",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4321:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4321:19:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4313:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3be4d26246e2bce2379a9e4d5831e0ca9f90360d730d99a00e3c2328d8c7a9e2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4095:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4109:4:2",
                "type": ""
              }
            ],
            "src": "3944:402:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4383:152:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4400:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4403:77:2",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4393:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4393:88:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4393:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4497:1:2",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4500:4:2",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4490:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4490:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4490:15:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4521:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4524:4:2",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4514:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4514:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4514:15:2"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "4351:184:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4586:158:2",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4596:23:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4611:1:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4614:4:2",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "4607:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4607:12:2"
                  },
                  "variables": [
                    {
                      "name": "x_1",
                      "nodeType": "YulTypedName",
                      "src": "4600:3:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4628:23:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4643:1:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4646:4:2",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "4639:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4639:12:2"
                  },
                  "variables": [
                    {
                      "name": "y_1",
                      "nodeType": "YulTypedName",
                      "src": "4632:3:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4687:22:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4689:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4689:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4689:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x_1",
                        "nodeType": "YulIdentifier",
                        "src": "4666:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4675:4:2",
                            "type": "",
                            "value": "0xff"
                          },
                          {
                            "name": "y_1",
                            "nodeType": "YulIdentifier",
                            "src": "4681:3:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4671:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4671:14:2"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4663:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4663:23:2"
                  },
                  "nodeType": "YulIf",
                  "src": "4660:49:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4718:20:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x_1",
                        "nodeType": "YulIdentifier",
                        "src": "4729:3:2"
                      },
                      {
                        "name": "y_1",
                        "nodeType": "YulIdentifier",
                        "src": "4734:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4725:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4725:13:2"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "4718:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4569:1:2",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4572:1:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "4578:3:2",
                "type": ""
              }
            ],
            "src": "4540:204:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4804:382:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4814:22:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "4828:4:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4834:1:2",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "4824:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4824:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "4814:6:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4845:38:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "4875:4:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4881:1:2",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "4871:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4871:12:2"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "4849:18:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4922:31:2",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4924:27:2",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "4938:6:2"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4946:4:2",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "4934:3:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4934:17:2"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4924:6:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "4902:18:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4895:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4895:26:2"
                  },
                  "nodeType": "YulIf",
                  "src": "4892:61:2"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5012:168:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5033:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5036:77:2",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5026:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5026:88:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5026:88:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5134:1:2",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5137:4:2",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5127:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5127:15:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5127:15:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5162:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5165:4:2",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5155:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5155:15:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5155:15:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "4968:18:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4991:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4999:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "4988:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4988:14:2"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "4965:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4965:38:2"
                  },
                  "nodeType": "YulIf",
                  "src": "4962:218:2"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "4784:4:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4793:6:2",
                "type": ""
              }
            ],
            "src": "4749:437:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5223:152:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5240:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5243:77:2",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5233:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5233:88:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5233:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5337:1:2",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5340:4:2",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5330:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5330:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5330:15:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5361:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5364:4:2",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5354:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5354:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5354:15:2"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "5191:184:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5425:130:2",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5435:31:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5454:5:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5461:4:2",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5450:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5450:16:2"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "5439:7:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5496:22:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5498:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5498:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5498:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "5481:7:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5490:4:2",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "5478:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5478:17:2"
                  },
                  "nodeType": "YulIf",
                  "src": "5475:43:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5527:22:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "5538:7:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5547:1:2",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5534:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5534:15:2"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "5527:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5407:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "5417:3:2",
                "type": ""
              }
            ],
            "src": "5380:175:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5734:231:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5751:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5762:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5744:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5744:21:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5744:21:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5785:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5796:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5781:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5781:18:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5801:2:2",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5774:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5774:30:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5774:30:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5824:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5835:2:2",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5820:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5820:18:2"
                      },
                      {
                        "hexValue": "596f752061726520616c7265616479207265676973746572656420617320616e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5840:34:2",
                        "type": "",
                        "value": "You are already registered as an"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5813:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5813:62:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5813:62:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5895:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5906:2:2",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5891:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5891:18:2"
                      },
                      {
                        "hexValue": "20456d706c6f796572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5911:11:2",
                        "type": "",
                        "value": " Employer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5884:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5884:39:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5884:39:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5932:27:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5944:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5955:3:2",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5940:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5940:19:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5932:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1a014784f013dd3fe3cec43464793b8d71bd166f6b8d95418a86f63e2589705f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5711:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5725:4:2",
                "type": ""
              }
            ],
            "src": "5560:405:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6144:228:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6161:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6172:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6154:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6154:21:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6154:21:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6195:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6206:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6191:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6191:18:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6211:2:2",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6184:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6184:30:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6184:30:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6234:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6245:2:2",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6230:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6230:18:2"
                      },
                      {
                        "hexValue": "4f6e6c7920616e20656d706c6f7965722063616e206d616b6520746869732072",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6250:34:2",
                        "type": "",
                        "value": "Only an employer can make this r"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6223:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6223:62:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6223:62:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6305:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6316:2:2",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6301:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6301:18:2"
                      },
                      {
                        "hexValue": "657175657374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6321:8:2",
                        "type": "",
                        "value": "equest"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6294:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6294:36:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6294:36:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6339:27:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6351:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6362:3:2",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6347:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6347:19:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6339:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_281258d9cf6edfe93f63d6df9f03ebf04b784e3822c6ead2a10b2edcd1112463__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6121:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6135:4:2",
                "type": ""
              }
            ],
            "src": "5970:402:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6551:239:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6568:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6579:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6561:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6561:21:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6561:21:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6602:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6613:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6598:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6598:18:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6618:2:2",
                        "type": "",
                        "value": "49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6591:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6591:30:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6591:30:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6641:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6652:2:2",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6637:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6637:18:2"
                      },
                      {
                        "hexValue": "456d706c6f79656520697320616c726561647920726567697374657265642074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6657:34:2",
                        "type": "",
                        "value": "Employee is already registered t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6630:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6630:62:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6630:62:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6712:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6723:2:2",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6708:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6708:18:2"
                      },
                      {
                        "hexValue": "6f20616e206f7267616e697a6174696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6728:19:2",
                        "type": "",
                        "value": "o an organization"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6701:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6701:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6701:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6757:27:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6769:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6780:3:2",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6765:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6765:19:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6757:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f75202a11d9e6d1f88f37bd99e67f91a4030c943fd82324c1edb54cc330968b5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6528:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6542:4:2",
                "type": ""
              }
            ],
            "src": "6377:413:2"
          }
        ]
      },
      "contents": "{\n    { }\n    function panic_error_0x21()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_enum_Access(value, pos)\n    {\n        if iszero(lt(value, 2))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_tuple_t_array$_t_struct$_Employee_$84_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Employee_$84_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let tail_2 := add(add(headStart, mul(length, _1)), _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        let i_1 := i\n        for { } lt(i_1, length) { i_1 := add(i_1, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(63)))\n            let _3 := mload(srcPtr)\n            let _4 := 0x60\n            mstore(tail_2, and(mload(_3), 0xffffffffffffffffffffffffffffffffffffffff))\n            let memberValue0 := mload(add(_3, _1))\n            mstore(add(tail_2, _1), _4)\n            let length_1 := mload(memberValue0)\n            mstore(add(tail_2, _4), length_1)\n            let i_2 := i\n            for { } lt(i_2, length_1) { i_2 := add(i_2, _1) }\n            {\n                mstore(add(add(tail_2, i_2), 128), mload(add(add(memberValue0, i_2), _1)))\n            }\n            if gt(i_2, length_1)\n            {\n                mstore(add(add(tail_2, length_1), 128), i)\n            }\n            let memberValue0_1 := mload(add(_3, _2))\n            abi_encode_enum_Access(memberValue0_1, add(tail_2, _2))\n            tail_2 := add(add(tail_2, and(add(length_1, 31), not(31))), 128)\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_stringliteral_3be4d26246e2bce2379a9e4d5831e0ca9f90360d730d99a00e3c2328d8c7a9e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Only an Employer can make this r\")\n        mstore(add(headStart, 96), \"equest\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint8(x, y) -> sum\n    {\n        let x_1 := and(x, 0xff)\n        let y_1 := and(y, 0xff)\n        if gt(x_1, sub(0xff, y_1)) { panic_error_0x11() }\n        sum := add(x_1, y_1)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_1a014784f013dd3fe3cec43464793b8d71bd166f6b8d95418a86f63e2589705f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"You are already registered as an\")\n        mstore(add(headStart, 96), \" Employer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_281258d9cf6edfe93f63d6df9f03ebf04b784e3822c6ead2a10b2edcd1112463__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Only an employer can make this r\")\n        mstore(add(headStart, 96), \"equest\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f75202a11d9e6d1f88f37bd99e67f91a4030c943fd82324c1edb54cc330968b5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"Employee is already registered t\")\n        mstore(add(headStart, 96), \"o an organization\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 2,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "200:5619:1:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "200:5619:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2777:550;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3424:449;;;:::i;:::-;;2413:238;;;;;;:::i;:::-;;:::i;:::-;;;2718:25:2;;;2706:2;2691:18;2413:238:1;2572:177:2;4123:985:1;;;;;;:::i;:::-;;:::i;5274:542::-;;;;;;:::i;:::-;;:::i;2777:550::-;2873:10;2862:22;;;;:10;:22;;;;;;2824:17;;2862:22;;2854:73;;;;;;;4146:2:2;2854:73:1;;;4128:21:2;4185:2;4165:18;;;4158:30;4224:34;4204:18;;;4197:62;4295:8;4275:18;;;4268:36;4321:19;;2854:73:1;;;;;;;;;3042:10;2997:20;3020:33;;;:21;:33;;;;;:48;;;;;;;;3109:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3079:60;;3155:11;3150:143;3180:14;3172:22;;:5;:22;;;3150:143;;;3259:10;3239:31;;;;:19;:31;;;;;;3271:9;:5;3279:1;3271:9;:::i;:::-;3239:42;;;;;;;;;;;;;;;;-1:-1:-1;3239:42:1;3220:61;;;;;;;;;;;;;;;;;;;;;3239:42;;3220:61;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3220:61:1;;;-1:-1:-1;;3220:61:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;:9;3230:5;3220:16;;;;;;;;;;:::i;:::-;;;;;;:61;;;;3196:7;;;;;:::i;:::-;;;;3150:143;;;-1:-1:-1;3310:9:1;2777:550;-1:-1:-1;;2777:550:1:o;3424:449::-;3502:10;3491:22;;;;:10;:22;;;;;;;;3490:23;3468:114;;;;;;;5762:2:2;3468:114:1;;;5744:21:2;5801:2;5781:18;;;5774:30;5840:34;5820:18;;;5813:62;5911:11;5891:18;;;5884:39;5940:19;;3468:114:1;5560:405:2;3468:114:1;3668:98;;;;;;;;3711:10;3668:98;;;3633:32;3668:98;;;;;;;3777:33;;;:21;:33;;;;;:48;;;;;;3668:98;3777:48;;;;;;;3668:98;3777:48;;;;;;;;;;;;3836:10;:22;;;:29;;-1:-1:-1;;3836:29:1;3777:48;3836:29;;;3424:449::o;2413:238::-;2492:16;;;2470:7;2492:16;;;:10;:16;;;;;;;;2489:155;;;-1:-1:-1;2531:1:1;;2413:238;-1:-1:-1;2413:238:1:o;2489:155::-;2553:16;;;;;;;:10;:16;;;;;;;;2549:95;;;-1:-1:-1;2592:1:1;;2413:238;-1:-1:-1;2413:238:1:o;2549:95::-;-1:-1:-1;2631:1:1;;2413:238;-1:-1:-1;2413:238:1:o;2549:95::-;2413:238;;;:::o;4123:985::-;4236:10;4225:22;;;;:10;:22;;;;;;;;4217:73;;;;;;;6172:2:2;4217:73:1;;;6154:21:2;6211:2;6191:18;;;6184:30;6250:34;6230:18;;;6223:62;6321:8;6301:18;;;6294:36;6347:19;;4217:73:1;5970:402:2;4217:73:1;4310:28;;;;;;;:10;:28;;;;;;;;4309:29;4301:91;;;;;;;6579:2:2;4301:91:1;;;6561:21:2;6618:2;6598:18;;;6591:30;6657:34;6637:18;;;6630:62;6728:19;6708:18;;;6701:47;6765:19;;4301:91:1;6377:413:2;4301:91:1;4461:136;;;;;;;;;;;;;;;;;;;4434:24;;4461:136;;4434:24;4461:136;;4699:10;4658:16;4677:33;;;:21;:33;;;;;:48;4434:163;;-1:-1:-1;4658:16:1;4677:52;;:48;;;;;4728:1;4677:52;:::i;:::-;4798:10;4776:33;;;;:21;:33;;;;;;;;:61;;;;;;;;;;;;;;:33;4878:28;;;;;:10;:28;;;;;:35;;-1:-1:-1;;4878:35:1;-1:-1:-1;4878:35:1;;;;;;4924;;;;;;:48;;;;;;;;;;;4983:41;;;;;;;:52;;;;;;;;;;;;;;;;;;;;;;4658:71;;-1:-1:-1;5027:8:1;;4983:52;;;;;;;;;;;:::i;:::-;-1:-1:-1;4983:52:1;;;;;;;;;-1:-1:-1;;4983:52:1;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;5066:10:1;5046:31;;;;:19;:31;;;;;;;;:43;;;;;;;;;;:54;;;;;;:31;:54;;;;;;;;;;;;;;-1:-1:-1;5046:43:1;;:54;;-1:-1:-1;5046:54:1;;;;;;;;:::i;:::-;-1:-1:-1;5046:54:1;;;;;;;;;-1:-1:-1;;5046:54:1;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;;4123:985:1:o;5274:542::-;5359:10;5348:22;;;;:10;:22;;;;;;;;5340:73;;;;;;;6172:2:2;5340:73:1;;;6154:21:2;6211:2;6191:18;;;6184:30;6250:34;6230:18;;;6223:62;6321:8;6301:18;;;6294:36;6347:19;;5340:73:1;5970:402:2;5340:73:1;5476:41;;;5453:20;5476:41;;;:23;:41;;;;;:48;;;;;;5587:13;:30;;;;;;;;:::i;:::-;;5583:226;;;-1:-1:-1;5634:41:1;;;;;;5685:15;5634:41;;;;;;;;:48;;:66;;-1:-1:-1;;5634:66:1;;;;;;5274:542::o;5583:226::-;-1:-1:-1;5733:41:1;;5784:13;5733:41;;;:23;:41;;;;;:48;;:64;;-1:-1:-1;;5733:64:1;;;5274:542::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:184:2;66:77;63:1;56:88;163:4;160:1;153:15;187:4;184:1;177:15;203:291;281:1;274:5;271:12;261:200;;317:77;314:1;307:88;418:4;415:1;408:15;446:4;443:1;436:15;261:200;470:18;;203:291::o;499:1676::-;718:2;770:21;;;840:13;;743:18;;;862:22;;;689:4;;718:2;903;;921:18;;;;981:15;;;966:31;;962:40;;1025:15;;;689:4;;1089:1057;1105:6;1100:3;1097:15;1089:1057;;;1202:2;1198:7;1186:9;1178:6;1174:22;1170:36;1165:3;1158:49;1236:6;1230:13;1266:4;1313:42;1308:2;1302:9;1298:58;1290:6;1283:74;1404:2;1400;1396:11;1390:18;1445:2;1440;1432:6;1428:15;1421:27;1483:12;1477:19;1533:8;1528:2;1520:6;1516:15;1509:33;1566:1;1555:12;;1580:168;1596:8;1591:3;1588:17;1580:168;;;1705:22;;;1701:31;;1695:38;1671:16;;;1689:3;1667:26;1660:74;1615:12;;;;1580:168;;;1772:8;1767:3;1764:17;1761:107;;;1852:1;1846:3;1835:8;1827:6;1823:21;1819:31;1812:42;1761:107;1909:11;;;1903:18;;1934:55;1973:15;;;1903:18;1934:55;:::i;:::-;2124:12;;;;2055:2;2032:17;-1:-1:-1;;2028:31:2;2016:44;;;;2062:3;2012:54;;-1:-1:-1;;;2089:15:2;;;;1131:1;1122:11;1089:1057;;;-1:-1:-1;2163:6:2;;499:1676;-1:-1:-1;;;;;;;;;499:1676:2:o;2180:196::-;2248:20;;2308:42;2297:54;;2287:65;;2277:93;;2366:1;2363;2356:12;2381:186;2440:6;2493:2;2481:9;2472:7;2468:23;2464:32;2461:52;;;2509:1;2506;2499:12;2461:52;2532:29;2551:9;2532:29;:::i;:::-;2522:39;2381:186;-1:-1:-1;;;2381:186:2:o;2754:184::-;2806:77;2803:1;2796:88;2903:4;2900:1;2893:15;2927:4;2924:1;2917:15;2943:996;3021:6;3029;3082:2;3070:9;3061:7;3057:23;3053:32;3050:52;;;3098:1;3095;3088:12;3050:52;3121:29;3140:9;3121:29;:::i;:::-;3111:39;;3201:2;3190:9;3186:18;3173:32;3224:18;3265:2;3257:6;3254:14;3251:34;;;3281:1;3278;3271:12;3251:34;3319:6;3308:9;3304:22;3294:32;;3364:7;3357:4;3353:2;3349:13;3345:27;3335:55;;3386:1;3383;3376:12;3335:55;3422:2;3409:16;3444:2;3440;3437:10;3434:36;;;3450:18;;:::i;:::-;3525:2;3519:9;3493:2;3579:13;;-1:-1:-1;;3575:22:2;;;3599:2;3571:31;3567:40;3555:53;;;3623:18;;;3643:22;;;3620:46;3617:72;;;3669:18;;:::i;:::-;3709:10;3705:2;3698:22;3744:2;3736:6;3729:18;3784:7;3779:2;3774;3770;3766:11;3762:20;3759:33;3756:53;;;3805:1;3802;3795:12;3756:53;3861:2;3856;3852;3848:11;3843:2;3835:6;3831:15;3818:46;3906:1;3901:2;3896;3888:6;3884:15;3880:24;3873:35;3927:6;3917:16;;;;;;;2943:996;;;;;:::o;4351:184::-;4403:77;4400:1;4393:88;4500:4;4497:1;4490:15;4524:4;4521:1;4514:15;4540:204;4578:3;4614:4;4611:1;4607:12;4646:4;4643:1;4639:12;4681:3;4675:4;4671:14;4666:3;4663:23;4660:49;;;4689:18;;:::i;:::-;4725:13;;4540:204;-1:-1:-1;;;4540:204:2:o;4749:437::-;4834:1;4824:12;;4881:1;4871:12;;;4892:61;;4946:4;4938:6;4934:17;4924:27;;4892:61;4999:2;4991:6;4988:14;4968:18;4965:38;4962:218;;;5036:77;5033:1;5026:88;5137:4;5134:1;5127:15;5165:4;5162:1;5155:15;4962:218;;4749:437;;;:::o;5191:184::-;5243:77;5240:1;5233:88;5340:4;5337:1;5330:15;5364:4;5361:1;5354:15;5380:175;5417:3;5461:4;5454:5;5450:16;5490:4;5481:7;5478:17;5475:43;;;5498:18;;:::i;:::-;5547:1;5534:15;;5380:175;-1:-1:-1;;5380:175:2:o",
  "source": "// SPDX-License-Identifier: MIT OR Apache-2.0\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    function transfer(address recipient, uint256 amount)\r\n        external\r\n        returns (bool);\r\n}\r\n\r\ncontract User {\r\n    // Employee address => employerAddress\r\n    // Used when creating a new employee\r\n    mapping(address => address) private employee_Employer;\r\n\r\n    // Employee address => Employee Struct\r\n    // Used when creating a new Employee\r\n    mapping(address => Employee) private employee_AccountDetails;\r\n\r\n    // Organization employerAddress => Organization\r\n    // Used when creating an Organization\r\n    mapping(address => Organization) private employer_Organization;\r\n\r\n    // Employer address => employeeId => employeeAddress\r\n    // Used when creating a new Employer\r\n    // mapping(address => mapping(uint8 => address)) private member_Organization;\r\n    mapping(address => mapping(uint8 => Employee)) private member_Organization;\r\n\r\n    // Employer address => bool\r\n    mapping(address => bool) private isEmployer;\r\n\r\n    // Employee address => bool\r\n    mapping(address => bool) private isEmployee;\r\n\r\n    // TODO Course struct to be created to hold course details\r\n    // TODO Add course, delete course functions\r\n    // TODO Check for change in course status, emit an event on course completion that initiates streaming from employer to employee\r\n    // TODO Function to get all the learning courses added by employer\r\n    // TODO Employee address => List of courses enrolled and completed\r\n\r\n    enum Access {\r\n        Locked, // Locked by employer. Can't be unlocked by employee. No access to widrawal of funds.\r\n        Unlocked // Unlocked by employer. Can't be unlocked by employee. No access to widrawal of funds.\r\n    }\r\n\r\n    struct Employee {\r\n        address _address; // the address of the employee\r\n        string username; // an identifier for the employee\r\n        Access access; // locked(0) or unlocked(1)\r\n    }\r\n\r\n    struct Organization {\r\n        address payable owner; // the owner of the Organization\r\n        // mapping(address => Employee) employee; // the employees of the organization\r\n        uint8 numOfEmployees; // The number of employees in the organization\r\n    }\r\n\r\n    /** \r\n     * @notice - This function is used to determine the type of user\r\n     * 1 = employer. 2 = employee. 3 = unenrolled\r\n     * @param user - The address of the user.\r\n     */\r\n    function getUserType(address user) external view returns(uint256){\r\n        if(isEmployer[user]){\r\n            return 1;\r\n        }else if (isEmployee[user]){\r\n            return 2;\r\n        }else{\r\n            return 3;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice - This function is used to determine if the user is an employee of an organization.\r\n     */\r\n    function fetchEmployees() public view returns (Employee[] memory) {\r\n        require(isEmployer[msg.sender], \"Only an Employer can make this request\");\r\n\r\n        //determine how many employees the employer has\r\n        uint8 numOfEmployees = employer_Organization[msg.sender].numOfEmployees;\r\n        Employee[] memory employees = new Employee[](numOfEmployees);\r\n        for (uint8 index = 0; index < numOfEmployees; index++) {\r\n            employees[index] = member_Organization[msg.sender][index + 1];\r\n        }\r\n        return employees;\r\n    }\r\n\r\n    /**\r\n     * @notice - This function is used to create a new employer/owner\r\n     */\r\n    function createEmployer() public {\r\n        require(\r\n            !isEmployer[msg.sender],\r\n            \"You are already registered as an Employer\"\r\n        );\r\n\r\n        // create a new organization\r\n        Organization memory organization = Organization({\r\n            owner: payable(msg.sender),\r\n            numOfEmployees: 0\r\n        });\r\n        employer_Organization[msg.sender] = organization;\r\n        isEmployer[msg.sender] = true;\r\n    }\r\n\r\n    /**\r\n     * @notice - This function is used to add a employee to the organization owned by an employer.\r\n     * @param _employeeAddress - The address of the employee.\r\n     * @param _employeeName - The username of the employee.\r\n     */\r\n    function addEmployee(address _employeeAddress, string memory _employeeName) public {\r\n        require(isEmployer[msg.sender], \"Only an employer can make this request\");\r\n        require(!isEmployee[_employeeAddress], \"Employee is already registered to an organization\");\r\n        // Fetch the employee\r\n        Employee memory employee = Employee({\r\n            _address: _employeeAddress,\r\n            username: _employeeName,\r\n            access: Access.Locked\r\n        });\r\n\r\n        // get next id number for the employee\r\n        uint8 employeeId = employer_Organization[msg.sender].numOfEmployees + 1;\r\n\r\n        // update employee count\r\n        employer_Organization[msg.sender].numOfEmployees = employeeId;\r\n\r\n        // update mappings\r\n        isEmployee[_employeeAddress] = true;\r\n        employee_Employer[_employeeAddress] = msg.sender;\r\n        employee_AccountDetails[_employeeAddress] = employee;\r\n        member_Organization[msg.sender][employeeId] = employee;\r\n    }\r\n\r\n    /**\r\n     * @notice - This function is used to change the access of an employee.\r\n     * @param _employeeAddress - The address of the employee.\r\n     */\r\n    function changeAccess(address _employeeAddress) public {\r\n        require(isEmployer[msg.sender], \"Only an employer can make this request\");\r\n\r\n        // current status\r\n        Access currentAccess = employee_AccountDetails[_employeeAddress].access;\r\n\r\n        // change the access of the employee\r\n        if (currentAccess == Access.Locked) {\r\n            employee_AccountDetails[_employeeAddress].access = Access.Unlocked;\r\n        } else {\r\n            employee_AccountDetails[_employeeAddress].access = Access.Locked;\r\n        }\r\n    }\r\n}\r\n",
  "sourcePath": "/mnt/c/blockchainrepo/kalvi-core/contracts/User.sol",
  "ast": {
    "absolutePath": "project:/contracts/User.sol",
    "exportedSymbols": {
      "IERC20": [
        44
      ],
      "User": [
        347
      ]
    },
    "id": 348,
    "license": "MIT OR Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "47:23:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC20",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 44,
        "linearizedBaseContracts": [
          44
        ],
        "name": "IERC20",
        "nameLocation": "84:6:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "a9059cbb",
            "id": 43,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "107:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "124:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "116:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "116:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "143:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "135:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "135:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "115:35:1"
            },
            "returnParameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "187:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "187:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "186:6:1"
            },
            "scope": 44,
            "src": "98:95:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 348,
        "src": "74:122:1",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "User",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 347,
        "linearizedBaseContracts": [
          347
        ],
        "name": "User",
        "nameLocation": "209:4:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 48,
            "mutability": "mutable",
            "name": "employee_Employer",
            "nameLocation": "343:17:1",
            "nodeType": "VariableDeclaration",
            "scope": 347,
            "src": "307:53:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 47,
              "keyType": {
                "id": 45,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "315:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "307:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 46,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "326:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 53,
            "mutability": "mutable",
            "name": "employee_AccountDetails",
            "nameLocation": "492:23:1",
            "nodeType": "VariableDeclaration",
            "scope": 347,
            "src": "455:60:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$84_storage_$",
              "typeString": "mapping(address => struct User.Employee)"
            },
            "typeName": {
              "id": 52,
              "keyType": {
                "id": 49,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "463:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "455:28:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$84_storage_$",
                "typeString": "mapping(address => struct User.Employee)"
              },
              "valueType": {
                "id": 51,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 50,
                  "name": "Employee",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 84,
                  "src": "474:8:1"
                },
                "referencedDeclaration": 84,
                "src": "474:8:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Employee_$84_storage_ptr",
                  "typeString": "struct User.Employee"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 58,
            "mutability": "mutable",
            "name": "employer_Organization",
            "nameLocation": "661:21:1",
            "nodeType": "VariableDeclaration",
            "scope": 347,
            "src": "620:62:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Organization_$89_storage_$",
              "typeString": "mapping(address => struct User.Organization)"
            },
            "typeName": {
              "id": 57,
              "keyType": {
                "id": 54,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "628:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "620:32:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Organization_$89_storage_$",
                "typeString": "mapping(address => struct User.Organization)"
              },
              "valueType": {
                "id": 56,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 55,
                  "name": "Organization",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 89,
                  "src": "639:12:1"
                },
                "referencedDeclaration": 89,
                "src": "639:12:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Organization_$89_storage_ptr",
                  "typeString": "struct User.Organization"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 65,
            "mutability": "mutable",
            "name": "member_Organization",
            "nameLocation": "929:19:1",
            "nodeType": "VariableDeclaration",
            "scope": 347,
            "src": "874:74:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint8_$_t_struct$_Employee_$84_storage_$_$",
              "typeString": "mapping(address => mapping(uint8 => struct User.Employee))"
            },
            "typeName": {
              "id": 64,
              "keyType": {
                "id": 59,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "882:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "874:46:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint8_$_t_struct$_Employee_$84_storage_$_$",
                "typeString": "mapping(address => mapping(uint8 => struct User.Employee))"
              },
              "valueType": {
                "id": 63,
                "keyType": {
                  "id": 60,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "901:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "nodeType": "Mapping",
                "src": "893:26:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Employee_$84_storage_$",
                  "typeString": "mapping(uint8 => struct User.Employee)"
                },
                "valueType": {
                  "id": 62,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 61,
                    "name": "Employee",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 84,
                    "src": "910:8:1"
                  },
                  "referencedDeclaration": 84,
                  "src": "910:8:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Employee_$84_storage_ptr",
                    "typeString": "struct User.Employee"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 69,
            "mutability": "mutable",
            "name": "isEmployer",
            "nameLocation": "1023:10:1",
            "nodeType": "VariableDeclaration",
            "scope": 347,
            "src": "990:43:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 68,
              "keyType": {
                "id": 66,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "998:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "990:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 67,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1009:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 73,
            "mutability": "mutable",
            "name": "isEmployee",
            "nameLocation": "1108:10:1",
            "nodeType": "VariableDeclaration",
            "scope": 347,
            "src": "1075:43:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 72,
              "keyType": {
                "id": 70,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1083:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1075:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 71,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1094:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "canonicalName": "User.Access",
            "id": 76,
            "members": [
              {
                "id": 74,
                "name": "Locked",
                "nameLocation": "1543:6:1",
                "nodeType": "EnumValue",
                "src": "1543:6:1"
              },
              {
                "id": 75,
                "name": "Unlocked",
                "nameLocation": "1646:8:1",
                "nodeType": "EnumValue",
                "src": "1646:8:1"
              }
            ],
            "name": "Access",
            "nameLocation": "1525:6:1",
            "nodeType": "EnumDefinition",
            "src": "1520:229:1"
          },
          {
            "canonicalName": "User.Employee",
            "id": 84,
            "members": [
              {
                "constant": false,
                "id": 78,
                "mutability": "mutable",
                "name": "_address",
                "nameLocation": "1792:8:1",
                "nodeType": "VariableDeclaration",
                "scope": 84,
                "src": "1784:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 77,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1784:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80,
                "mutability": "mutable",
                "name": "username",
                "nameLocation": "1849:8:1",
                "nodeType": "VariableDeclaration",
                "scope": 84,
                "src": "1842:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 79,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1842:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 83,
                "mutability": "mutable",
                "name": "access",
                "nameLocation": "1909:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 84,
                "src": "1902:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Access_$76",
                  "typeString": "enum User.Access"
                },
                "typeName": {
                  "id": 82,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 81,
                    "name": "Access",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 76,
                    "src": "1902:6:1"
                  },
                  "referencedDeclaration": 76,
                  "src": "1902:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Access_$76",
                    "typeString": "enum User.Access"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Employee",
            "nameLocation": "1764:8:1",
            "nodeType": "StructDefinition",
            "scope": 347,
            "src": "1757:194:1",
            "visibility": "public"
          },
          {
            "canonicalName": "User.Organization",
            "id": 89,
            "members": [
              {
                "constant": false,
                "id": 86,
                "mutability": "mutable",
                "name": "owner",
                "nameLocation": "2006:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 89,
                "src": "1990:21:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 85,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1990:15:1",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 88,
                "mutability": "mutable",
                "name": "numOfEmployees",
                "nameLocation": "2149:14:1",
                "nodeType": "VariableDeclaration",
                "scope": 89,
                "src": "2143:20:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 87,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "2143:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Organization",
            "nameLocation": "1966:12:1",
            "nodeType": "StructDefinition",
            "scope": 347,
            "src": "1959:259:1",
            "visibility": "public"
          },
          {
            "body": {
              "id": 114,
              "nodeType": "Block",
              "src": "2478:173:1",
              "statements": [
                {
                  "condition": {
                    "baseExpression": {
                      "id": 97,
                      "name": "isEmployer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "2492:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 99,
                    "indexExpression": {
                      "id": 98,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92,
                      "src": "2503:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2492:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "baseExpression": {
                        "id": 103,
                        "name": "isEmployee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "2553:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 105,
                      "indexExpression": {
                        "id": 104,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "2564:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2553:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 111,
                      "nodeType": "Block",
                      "src": "2609:35:1",
                      "statements": [
                        {
                          "expression": {
                            "hexValue": "33",
                            "id": 109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2631:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "functionReturnParameters": 96,
                          "id": 110,
                          "nodeType": "Return",
                          "src": "2624:8:1"
                        }
                      ]
                    },
                    "id": 112,
                    "nodeType": "IfStatement",
                    "src": "2549:95:1",
                    "trueBody": {
                      "id": 108,
                      "nodeType": "Block",
                      "src": "2570:35:1",
                      "statements": [
                        {
                          "expression": {
                            "hexValue": "32",
                            "id": 106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2592:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "functionReturnParameters": 96,
                          "id": 107,
                          "nodeType": "Return",
                          "src": "2585:8:1"
                        }
                      ]
                    }
                  },
                  "id": 113,
                  "nodeType": "IfStatement",
                  "src": "2489:155:1",
                  "trueBody": {
                    "id": 102,
                    "nodeType": "Block",
                    "src": "2509:35:1",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "31",
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2531:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 96,
                        "id": 101,
                        "nodeType": "Return",
                        "src": "2524:8:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 90,
              "nodeType": "StructuredDocumentation",
              "src": "2226:181:1",
              "text": " @notice - This function is used to determine the type of user\n 1 = employer. 2 = employee. 3 = unenrolled\n @param user - The address of the user."
            },
            "functionSelector": "8b3f863f",
            "id": 115,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserType",
            "nameLocation": "2422:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "2442:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "2434:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2434:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2433:14:1"
            },
            "returnParameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "2470:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2470:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2469:9:1"
            },
            "scope": 347,
            "src": "2413:238:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 178,
              "nodeType": "Block",
              "src": "2843:484:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 124,
                          "name": "isEmployer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "2862:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 127,
                        "indexExpression": {
                          "expression": {
                            "id": 125,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2873:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2873:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2862:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920616e20456d706c6f7965722063616e206d616b6520746869732072657175657374",
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2886:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3be4d26246e2bce2379a9e4d5831e0ca9f90360d730d99a00e3c2328d8c7a9e2",
                          "typeString": "literal_string \"Only an Employer can make this request\""
                        },
                        "value": "Only an Employer can make this request"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3be4d26246e2bce2379a9e4d5831e0ca9f90360d730d99a00e3c2328d8c7a9e2",
                          "typeString": "literal_string \"Only an Employer can make this request\""
                        }
                      ],
                      "id": 123,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2854:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2854:73:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "2854:73:1"
                },
                {
                  "assignments": [
                    132
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 132,
                      "mutability": "mutable",
                      "name": "numOfEmployees",
                      "nameLocation": "3003:14:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 178,
                      "src": "2997:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 131,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2997:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 138,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 133,
                        "name": "employer_Organization",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "3020:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Organization_$89_storage_$",
                          "typeString": "mapping(address => struct User.Organization storage ref)"
                        }
                      },
                      "id": 136,
                      "indexExpression": {
                        "expression": {
                          "id": 134,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3042:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3042:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3020:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Organization_$89_storage",
                        "typeString": "struct User.Organization storage ref"
                      }
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "numOfEmployees",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 88,
                    "src": "3020:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2997:71:1"
                },
                {
                  "assignments": [
                    143
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 143,
                      "mutability": "mutable",
                      "name": "employees",
                      "nameLocation": "3097:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 178,
                      "src": "3079:27:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Employee_$84_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct User.Employee[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 141,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 140,
                            "name": "Employee",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 84,
                            "src": "3079:8:1"
                          },
                          "referencedDeclaration": 84,
                          "src": "3079:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Employee_$84_storage_ptr",
                            "typeString": "struct User.Employee"
                          }
                        },
                        "id": 142,
                        "nodeType": "ArrayTypeName",
                        "src": "3079:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Employee_$84_storage_$dyn_storage_ptr",
                          "typeString": "struct User.Employee[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 150,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 148,
                        "name": "numOfEmployees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 132,
                        "src": "3124:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3109:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Employee_$84_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct User.Employee memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 145,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 144,
                            "name": "Employee",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 84,
                            "src": "3113:8:1"
                          },
                          "referencedDeclaration": 84,
                          "src": "3113:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Employee_$84_storage_ptr",
                            "typeString": "struct User.Employee"
                          }
                        },
                        "id": 146,
                        "nodeType": "ArrayTypeName",
                        "src": "3113:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Employee_$84_storage_$dyn_storage_ptr",
                          "typeString": "struct User.Employee[]"
                        }
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3109:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Employee_$84_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct User.Employee memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3079:60:1"
                },
                {
                  "body": {
                    "id": 174,
                    "nodeType": "Block",
                    "src": "3205:88:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 161,
                              "name": "employees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "3220:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Employee_$84_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct User.Employee memory[] memory"
                              }
                            },
                            "id": 163,
                            "indexExpression": {
                              "id": 162,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "3230:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3220:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Employee_$84_memory_ptr",
                              "typeString": "struct User.Employee memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 164,
                                "name": "member_Organization",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65,
                                "src": "3239:19:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint8_$_t_struct$_Employee_$84_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint8 => struct User.Employee storage ref))"
                                }
                              },
                              "id": 167,
                              "indexExpression": {
                                "expression": {
                                  "id": 165,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3259:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 166,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3259:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3239:31:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Employee_$84_storage_$",
                                "typeString": "mapping(uint8 => struct User.Employee storage ref)"
                              }
                            },
                            "id": 171,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 168,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 152,
                                "src": "3271:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 169,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3279:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "3271:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3239:42:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Employee_$84_storage",
                              "typeString": "struct User.Employee storage ref"
                            }
                          },
                          "src": "3220:61:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Employee_$84_memory_ptr",
                            "typeString": "struct User.Employee memory"
                          }
                        },
                        "id": 173,
                        "nodeType": "ExpressionStatement",
                        "src": "3220:61:1"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 155,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 152,
                      "src": "3172:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 156,
                      "name": "numOfEmployees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 132,
                      "src": "3180:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3172:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 175,
                  "initializationExpression": {
                    "assignments": [
                      152
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 152,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "3161:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 175,
                        "src": "3155:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 151,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3155:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 154,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3169:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3155:15:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3196:7:1",
                      "subExpression": {
                        "id": 158,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 152,
                        "src": "3196:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 160,
                    "nodeType": "ExpressionStatement",
                    "src": "3196:7:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "3150:143:1"
                },
                {
                  "expression": {
                    "id": 176,
                    "name": "employees",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 143,
                    "src": "3310:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Employee_$84_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct User.Employee memory[] memory"
                    }
                  },
                  "functionReturnParameters": 122,
                  "id": 177,
                  "nodeType": "Return",
                  "src": "3303:16:1"
                }
              ]
            },
            "documentation": {
              "id": 116,
              "nodeType": "StructuredDocumentation",
              "src": "2659:112:1",
              "text": " @notice - This function is used to determine if the user is an employee of an organization."
            },
            "functionSelector": "0a67a48d",
            "id": 179,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fetchEmployees",
            "nameLocation": "2786:14:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2800:2:1"
            },
            "returnParameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 121,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "2824:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Employee_$84_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct User.Employee[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 119,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 118,
                        "name": "Employee",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 84,
                        "src": "2824:8:1"
                      },
                      "referencedDeclaration": 84,
                      "src": "2824:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$84_storage_ptr",
                        "typeString": "struct User.Employee"
                      }
                    },
                    "id": 120,
                    "nodeType": "ArrayTypeName",
                    "src": "2824:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Employee_$84_storage_$dyn_storage_ptr",
                      "typeString": "struct User.Employee[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2823:19:1"
            },
            "scope": 347,
            "src": "2777:550:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 218,
              "nodeType": "Block",
              "src": "3457:416:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3490:23:1",
                        "subExpression": {
                          "baseExpression": {
                            "id": 184,
                            "name": "isEmployer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "3491:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 187,
                          "indexExpression": {
                            "expression": {
                              "id": 185,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3502:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 186,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3502:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3491:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752061726520616c7265616479207265676973746572656420617320616e20456d706c6f796572",
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3528:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a014784f013dd3fe3cec43464793b8d71bd166f6b8d95418a86f63e2589705f",
                          "typeString": "literal_string \"You are already registered as an Employer\""
                        },
                        "value": "You are already registered as an Employer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a014784f013dd3fe3cec43464793b8d71bd166f6b8d95418a86f63e2589705f",
                          "typeString": "literal_string \"You are already registered as an Employer\""
                        }
                      ],
                      "id": 183,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3468:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3468:114:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "3468:114:1"
                },
                {
                  "assignments": [
                    194
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 194,
                      "mutability": "mutable",
                      "name": "organization",
                      "nameLocation": "3653:12:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 218,
                      "src": "3633:32:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Organization_$89_memory_ptr",
                        "typeString": "struct User.Organization"
                      },
                      "typeName": {
                        "id": 193,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 192,
                          "name": "Organization",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89,
                          "src": "3633:12:1"
                        },
                        "referencedDeclaration": 89,
                        "src": "3633:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Organization_$89_storage_ptr",
                          "typeString": "struct User.Organization"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 203,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 198,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3711:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3711:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3703:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 196,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3703:8:1",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3703:19:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3753:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 195,
                      "name": "Organization",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "3668:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Organization_$89_storage_ptr_$",
                        "typeString": "type(struct User.Organization storage pointer)"
                      }
                    },
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "owner",
                      "numOfEmployees"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "3668:98:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Organization_$89_memory_ptr",
                      "typeString": "struct User.Organization memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3633:133:1"
                },
                {
                  "expression": {
                    "id": 209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 204,
                        "name": "employer_Organization",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "3777:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Organization_$89_storage_$",
                          "typeString": "mapping(address => struct User.Organization storage ref)"
                        }
                      },
                      "id": 207,
                      "indexExpression": {
                        "expression": {
                          "id": 205,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3799:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3799:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3777:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Organization_$89_storage",
                        "typeString": "struct User.Organization storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 208,
                      "name": "organization",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 194,
                      "src": "3813:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Organization_$89_memory_ptr",
                        "typeString": "struct User.Organization memory"
                      }
                    },
                    "src": "3777:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Organization_$89_storage",
                      "typeString": "struct User.Organization storage ref"
                    }
                  },
                  "id": 210,
                  "nodeType": "ExpressionStatement",
                  "src": "3777:48:1"
                },
                {
                  "expression": {
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 211,
                        "name": "isEmployer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "3836:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 214,
                      "indexExpression": {
                        "expression": {
                          "id": 212,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3847:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3847:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3836:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3861:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3836:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "3836:29:1"
                }
              ]
            },
            "documentation": {
              "id": 180,
              "nodeType": "StructuredDocumentation",
              "src": "3335:83:1",
              "text": " @notice - This function is used to create a new employer/owner"
            },
            "functionSelector": "30242b76",
            "id": 219,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createEmployer",
            "nameLocation": "3433:14:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3447:2:1"
            },
            "returnParameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3457:0:1"
            },
            "scope": 347,
            "src": "3424:449:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 299,
              "nodeType": "Block",
              "src": "4206:902:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 228,
                          "name": "isEmployer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "4225:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 231,
                        "indexExpression": {
                          "expression": {
                            "id": 229,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4236:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4236:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4225:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920616e20656d706c6f7965722063616e206d616b6520746869732072657175657374",
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4249:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_281258d9cf6edfe93f63d6df9f03ebf04b784e3822c6ead2a10b2edcd1112463",
                          "typeString": "literal_string \"Only an employer can make this request\""
                        },
                        "value": "Only an employer can make this request"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_281258d9cf6edfe93f63d6df9f03ebf04b784e3822c6ead2a10b2edcd1112463",
                          "typeString": "literal_string \"Only an employer can make this request\""
                        }
                      ],
                      "id": 227,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4217:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4217:73:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 234,
                  "nodeType": "ExpressionStatement",
                  "src": "4217:73:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4309:29:1",
                        "subExpression": {
                          "baseExpression": {
                            "id": 236,
                            "name": "isEmployee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73,
                            "src": "4310:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 238,
                          "indexExpression": {
                            "id": 237,
                            "name": "_employeeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 222,
                            "src": "4321:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4310:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456d706c6f79656520697320616c7265616479207265676973746572656420746f20616e206f7267616e697a6174696f6e",
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4340:51:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f75202a11d9e6d1f88f37bd99e67f91a4030c943fd82324c1edb54cc330968b5",
                          "typeString": "literal_string \"Employee is already registered to an organization\""
                        },
                        "value": "Employee is already registered to an organization"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f75202a11d9e6d1f88f37bd99e67f91a4030c943fd82324c1edb54cc330968b5",
                          "typeString": "literal_string \"Employee is already registered to an organization\""
                        }
                      ],
                      "id": 235,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4301:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4301:91:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 242,
                  "nodeType": "ExpressionStatement",
                  "src": "4301:91:1"
                },
                {
                  "assignments": [
                    245
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 245,
                      "mutability": "mutable",
                      "name": "employee",
                      "nameLocation": "4450:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 299,
                      "src": "4434:24:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$84_memory_ptr",
                        "typeString": "struct User.Employee"
                      },
                      "typeName": {
                        "id": 244,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 243,
                          "name": "Employee",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 84,
                          "src": "4434:8:1"
                        },
                        "referencedDeclaration": 84,
                        "src": "4434:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Employee_$84_storage_ptr",
                          "typeString": "struct User.Employee"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 252,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 247,
                        "name": "_employeeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "4495:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 248,
                        "name": "_employeeName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "4536:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 249,
                          "name": "Access",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "4572:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Access_$76_$",
                            "typeString": "type(enum User.Access)"
                          }
                        },
                        "id": 250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Locked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 74,
                        "src": "4572:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Access_$76",
                          "typeString": "enum User.Access"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_enum$_Access_$76",
                          "typeString": "enum User.Access"
                        }
                      ],
                      "id": 246,
                      "name": "Employee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "4461:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Employee_$84_storage_ptr_$",
                        "typeString": "type(struct User.Employee storage pointer)"
                      }
                    },
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "_address",
                      "username",
                      "access"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "4461:136:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Employee_$84_memory_ptr",
                      "typeString": "struct User.Employee memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4434:163:1"
                },
                {
                  "assignments": [
                    254
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 254,
                      "mutability": "mutable",
                      "name": "employeeId",
                      "nameLocation": "4664:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 299,
                      "src": "4658:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 253,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "4658:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 262,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 255,
                          "name": "employer_Organization",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "4677:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Organization_$89_storage_$",
                            "typeString": "mapping(address => struct User.Organization storage ref)"
                          }
                        },
                        "id": 258,
                        "indexExpression": {
                          "expression": {
                            "id": 256,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4699:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4699:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4677:33:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Organization_$89_storage",
                          "typeString": "struct User.Organization storage ref"
                        }
                      },
                      "id": 259,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "numOfEmployees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88,
                      "src": "4677:48:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4728:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4677:52:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4658:71:1"
                },
                {
                  "expression": {
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 263,
                          "name": "employer_Organization",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "4776:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Organization_$89_storage_$",
                            "typeString": "mapping(address => struct User.Organization storage ref)"
                          }
                        },
                        "id": 266,
                        "indexExpression": {
                          "expression": {
                            "id": 264,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4798:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4798:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4776:33:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Organization_$89_storage",
                          "typeString": "struct User.Organization storage ref"
                        }
                      },
                      "id": 267,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numOfEmployees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88,
                      "src": "4776:48:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 268,
                      "name": "employeeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 254,
                      "src": "4827:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4776:61:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 270,
                  "nodeType": "ExpressionStatement",
                  "src": "4776:61:1"
                },
                {
                  "expression": {
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 271,
                        "name": "isEmployee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "4878:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 273,
                      "indexExpression": {
                        "id": 272,
                        "name": "_employeeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "4889:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4878:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4909:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4878:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "4878:35:1"
                },
                {
                  "expression": {
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 277,
                        "name": "employee_Employer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "4924:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 279,
                      "indexExpression": {
                        "id": 278,
                        "name": "_employeeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "4942:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4924:35:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 280,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "4962:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4962:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4924:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 283,
                  "nodeType": "ExpressionStatement",
                  "src": "4924:48:1"
                },
                {
                  "expression": {
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 284,
                        "name": "employee_AccountDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "4983:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$84_storage_$",
                          "typeString": "mapping(address => struct User.Employee storage ref)"
                        }
                      },
                      "id": 286,
                      "indexExpression": {
                        "id": 285,
                        "name": "_employeeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "5007:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4983:41:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$84_storage",
                        "typeString": "struct User.Employee storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 287,
                      "name": "employee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "5027:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$84_memory_ptr",
                        "typeString": "struct User.Employee memory"
                      }
                    },
                    "src": "4983:52:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Employee_$84_storage",
                      "typeString": "struct User.Employee storage ref"
                    }
                  },
                  "id": 289,
                  "nodeType": "ExpressionStatement",
                  "src": "4983:52:1"
                },
                {
                  "expression": {
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 290,
                          "name": "member_Organization",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "5046:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint8_$_t_struct$_Employee_$84_storage_$_$",
                            "typeString": "mapping(address => mapping(uint8 => struct User.Employee storage ref))"
                          }
                        },
                        "id": 294,
                        "indexExpression": {
                          "expression": {
                            "id": 291,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5066:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5066:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5046:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Employee_$84_storage_$",
                          "typeString": "mapping(uint8 => struct User.Employee storage ref)"
                        }
                      },
                      "id": 295,
                      "indexExpression": {
                        "id": 293,
                        "name": "employeeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 254,
                        "src": "5078:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5046:43:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$84_storage",
                        "typeString": "struct User.Employee storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 296,
                      "name": "employee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "5092:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$84_memory_ptr",
                        "typeString": "struct User.Employee memory"
                      }
                    },
                    "src": "5046:54:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Employee_$84_storage",
                      "typeString": "struct User.Employee storage ref"
                    }
                  },
                  "id": 298,
                  "nodeType": "ExpressionStatement",
                  "src": "5046:54:1"
                }
              ]
            },
            "documentation": {
              "id": 220,
              "nodeType": "StructuredDocumentation",
              "src": "3881:236:1",
              "text": " @notice - This function is used to add a employee to the organization owned by an employer.\n @param _employeeAddress - The address of the employee.\n @param _employeeName - The username of the employee."
            },
            "functionSelector": "a502e808",
            "id": 300,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addEmployee",
            "nameLocation": "4132:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 222,
                  "mutability": "mutable",
                  "name": "_employeeAddress",
                  "nameLocation": "4152:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "4144:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 221,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4144:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 224,
                  "mutability": "mutable",
                  "name": "_employeeName",
                  "nameLocation": "4184:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "4170:27:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 223,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4170:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4143:55:1"
            },
            "returnParameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4206:0:1"
            },
            "scope": 347,
            "src": "4123:985:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 345,
              "nodeType": "Block",
              "src": "5329:487:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 307,
                          "name": "isEmployer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "5348:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 310,
                        "indexExpression": {
                          "expression": {
                            "id": 308,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5359:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5359:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5348:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920616e20656d706c6f7965722063616e206d616b6520746869732072657175657374",
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5372:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_281258d9cf6edfe93f63d6df9f03ebf04b784e3822c6ead2a10b2edcd1112463",
                          "typeString": "literal_string \"Only an employer can make this request\""
                        },
                        "value": "Only an employer can make this request"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_281258d9cf6edfe93f63d6df9f03ebf04b784e3822c6ead2a10b2edcd1112463",
                          "typeString": "literal_string \"Only an employer can make this request\""
                        }
                      ],
                      "id": 306,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5340:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5340:73:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 313,
                  "nodeType": "ExpressionStatement",
                  "src": "5340:73:1"
                },
                {
                  "assignments": [
                    316
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 316,
                      "mutability": "mutable",
                      "name": "currentAccess",
                      "nameLocation": "5460:13:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 345,
                      "src": "5453:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Access_$76",
                        "typeString": "enum User.Access"
                      },
                      "typeName": {
                        "id": 315,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 314,
                          "name": "Access",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 76,
                          "src": "5453:6:1"
                        },
                        "referencedDeclaration": 76,
                        "src": "5453:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Access_$76",
                          "typeString": "enum User.Access"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 321,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 317,
                        "name": "employee_AccountDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "5476:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$84_storage_$",
                          "typeString": "mapping(address => struct User.Employee storage ref)"
                        }
                      },
                      "id": 319,
                      "indexExpression": {
                        "id": 318,
                        "name": "_employeeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 303,
                        "src": "5500:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5476:41:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$84_storage",
                        "typeString": "struct User.Employee storage ref"
                      }
                    },
                    "id": 320,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "access",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 83,
                    "src": "5476:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Access_$76",
                      "typeString": "enum User.Access"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5453:71:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Access_$76",
                      "typeString": "enum User.Access"
                    },
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 322,
                      "name": "currentAccess",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 316,
                      "src": "5587:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Access_$76",
                        "typeString": "enum User.Access"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 323,
                        "name": "Access",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "5604:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Access_$76_$",
                          "typeString": "type(enum User.Access)"
                        }
                      },
                      "id": 324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "5604:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Access_$76",
                        "typeString": "enum User.Access"
                      }
                    },
                    "src": "5587:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 343,
                    "nodeType": "Block",
                    "src": "5718:91:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 335,
                                "name": "employee_AccountDetails",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53,
                                "src": "5733:23:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$84_storage_$",
                                  "typeString": "mapping(address => struct User.Employee storage ref)"
                                }
                              },
                              "id": 337,
                              "indexExpression": {
                                "id": 336,
                                "name": "_employeeAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 303,
                                "src": "5757:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5733:41:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Employee_$84_storage",
                                "typeString": "struct User.Employee storage ref"
                              }
                            },
                            "id": 338,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "access",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 83,
                            "src": "5733:48:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Access_$76",
                              "typeString": "enum User.Access"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 339,
                              "name": "Access",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "5784:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Access_$76_$",
                                "typeString": "type(enum User.Access)"
                              }
                            },
                            "id": 340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Locked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 74,
                            "src": "5784:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Access_$76",
                              "typeString": "enum User.Access"
                            }
                          },
                          "src": "5733:64:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Access_$76",
                            "typeString": "enum User.Access"
                          }
                        },
                        "id": 342,
                        "nodeType": "ExpressionStatement",
                        "src": "5733:64:1"
                      }
                    ]
                  },
                  "id": 344,
                  "nodeType": "IfStatement",
                  "src": "5583:226:1",
                  "trueBody": {
                    "id": 334,
                    "nodeType": "Block",
                    "src": "5619:93:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 326,
                                "name": "employee_AccountDetails",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53,
                                "src": "5634:23:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$84_storage_$",
                                  "typeString": "mapping(address => struct User.Employee storage ref)"
                                }
                              },
                              "id": 328,
                              "indexExpression": {
                                "id": 327,
                                "name": "_employeeAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 303,
                                "src": "5658:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5634:41:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Employee_$84_storage",
                                "typeString": "struct User.Employee storage ref"
                              }
                            },
                            "id": 329,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "access",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 83,
                            "src": "5634:48:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Access_$76",
                              "typeString": "enum User.Access"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 330,
                              "name": "Access",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "5685:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Access_$76_$",
                                "typeString": "type(enum User.Access)"
                              }
                            },
                            "id": 331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Unlocked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 75,
                            "src": "5685:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Access_$76",
                              "typeString": "enum User.Access"
                            }
                          },
                          "src": "5634:66:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Access_$76",
                            "typeString": "enum User.Access"
                          }
                        },
                        "id": 333,
                        "nodeType": "ExpressionStatement",
                        "src": "5634:66:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 301,
              "nodeType": "StructuredDocumentation",
              "src": "5116:152:1",
              "text": " @notice - This function is used to change the access of an employee.\n @param _employeeAddress - The address of the employee."
            },
            "functionSelector": "f403688a",
            "id": 346,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeAccess",
            "nameLocation": "5283:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 303,
                  "mutability": "mutable",
                  "name": "_employeeAddress",
                  "nameLocation": "5304:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 346,
                  "src": "5296:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 302,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5296:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5295:26:1"
            },
            "returnParameters": {
              "id": 305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5329:0:1"
            },
            "scope": 347,
            "src": "5274:542:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 348,
        "src": "200:5619:1",
        "usedErrors": []
      }
    ],
    "src": "47:5774:1"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/User.sol",
    "exportedSymbols": {
      "IERC20": [
        44
      ],
      "User": [
        347
      ]
    },
    "id": 348,
    "license": "MIT OR Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "47:23:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC20",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 44,
        "linearizedBaseContracts": [
          44
        ],
        "name": "IERC20",
        "nameLocation": "84:6:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "a9059cbb",
            "id": 43,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "107:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "124:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "116:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "116:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "143:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "135:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "135:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "115:35:1"
            },
            "returnParameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "187:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "187:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "186:6:1"
            },
            "scope": 44,
            "src": "98:95:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 348,
        "src": "74:122:1",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "User",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 347,
        "linearizedBaseContracts": [
          347
        ],
        "name": "User",
        "nameLocation": "209:4:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 48,
            "mutability": "mutable",
            "name": "employee_Employer",
            "nameLocation": "343:17:1",
            "nodeType": "VariableDeclaration",
            "scope": 347,
            "src": "307:53:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 47,
              "keyType": {
                "id": 45,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "315:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "307:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 46,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "326:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 53,
            "mutability": "mutable",
            "name": "employee_AccountDetails",
            "nameLocation": "492:23:1",
            "nodeType": "VariableDeclaration",
            "scope": 347,
            "src": "455:60:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$84_storage_$",
              "typeString": "mapping(address => struct User.Employee)"
            },
            "typeName": {
              "id": 52,
              "keyType": {
                "id": 49,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "463:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "455:28:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$84_storage_$",
                "typeString": "mapping(address => struct User.Employee)"
              },
              "valueType": {
                "id": 51,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 50,
                  "name": "Employee",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 84,
                  "src": "474:8:1"
                },
                "referencedDeclaration": 84,
                "src": "474:8:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Employee_$84_storage_ptr",
                  "typeString": "struct User.Employee"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 58,
            "mutability": "mutable",
            "name": "employer_Organization",
            "nameLocation": "661:21:1",
            "nodeType": "VariableDeclaration",
            "scope": 347,
            "src": "620:62:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Organization_$89_storage_$",
              "typeString": "mapping(address => struct User.Organization)"
            },
            "typeName": {
              "id": 57,
              "keyType": {
                "id": 54,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "628:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "620:32:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Organization_$89_storage_$",
                "typeString": "mapping(address => struct User.Organization)"
              },
              "valueType": {
                "id": 56,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 55,
                  "name": "Organization",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 89,
                  "src": "639:12:1"
                },
                "referencedDeclaration": 89,
                "src": "639:12:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Organization_$89_storage_ptr",
                  "typeString": "struct User.Organization"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 65,
            "mutability": "mutable",
            "name": "member_Organization",
            "nameLocation": "929:19:1",
            "nodeType": "VariableDeclaration",
            "scope": 347,
            "src": "874:74:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint8_$_t_struct$_Employee_$84_storage_$_$",
              "typeString": "mapping(address => mapping(uint8 => struct User.Employee))"
            },
            "typeName": {
              "id": 64,
              "keyType": {
                "id": 59,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "882:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "874:46:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint8_$_t_struct$_Employee_$84_storage_$_$",
                "typeString": "mapping(address => mapping(uint8 => struct User.Employee))"
              },
              "valueType": {
                "id": 63,
                "keyType": {
                  "id": 60,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "901:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "nodeType": "Mapping",
                "src": "893:26:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Employee_$84_storage_$",
                  "typeString": "mapping(uint8 => struct User.Employee)"
                },
                "valueType": {
                  "id": 62,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 61,
                    "name": "Employee",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 84,
                    "src": "910:8:1"
                  },
                  "referencedDeclaration": 84,
                  "src": "910:8:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Employee_$84_storage_ptr",
                    "typeString": "struct User.Employee"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 69,
            "mutability": "mutable",
            "name": "isEmployer",
            "nameLocation": "1023:10:1",
            "nodeType": "VariableDeclaration",
            "scope": 347,
            "src": "990:43:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 68,
              "keyType": {
                "id": 66,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "998:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "990:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 67,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1009:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 73,
            "mutability": "mutable",
            "name": "isEmployee",
            "nameLocation": "1108:10:1",
            "nodeType": "VariableDeclaration",
            "scope": 347,
            "src": "1075:43:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 72,
              "keyType": {
                "id": 70,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1083:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1075:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 71,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1094:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "canonicalName": "User.Access",
            "id": 76,
            "members": [
              {
                "id": 74,
                "name": "Locked",
                "nameLocation": "1543:6:1",
                "nodeType": "EnumValue",
                "src": "1543:6:1"
              },
              {
                "id": 75,
                "name": "Unlocked",
                "nameLocation": "1646:8:1",
                "nodeType": "EnumValue",
                "src": "1646:8:1"
              }
            ],
            "name": "Access",
            "nameLocation": "1525:6:1",
            "nodeType": "EnumDefinition",
            "src": "1520:229:1"
          },
          {
            "canonicalName": "User.Employee",
            "id": 84,
            "members": [
              {
                "constant": false,
                "id": 78,
                "mutability": "mutable",
                "name": "_address",
                "nameLocation": "1792:8:1",
                "nodeType": "VariableDeclaration",
                "scope": 84,
                "src": "1784:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 77,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1784:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80,
                "mutability": "mutable",
                "name": "username",
                "nameLocation": "1849:8:1",
                "nodeType": "VariableDeclaration",
                "scope": 84,
                "src": "1842:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 79,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1842:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 83,
                "mutability": "mutable",
                "name": "access",
                "nameLocation": "1909:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 84,
                "src": "1902:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Access_$76",
                  "typeString": "enum User.Access"
                },
                "typeName": {
                  "id": 82,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 81,
                    "name": "Access",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 76,
                    "src": "1902:6:1"
                  },
                  "referencedDeclaration": 76,
                  "src": "1902:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Access_$76",
                    "typeString": "enum User.Access"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Employee",
            "nameLocation": "1764:8:1",
            "nodeType": "StructDefinition",
            "scope": 347,
            "src": "1757:194:1",
            "visibility": "public"
          },
          {
            "canonicalName": "User.Organization",
            "id": 89,
            "members": [
              {
                "constant": false,
                "id": 86,
                "mutability": "mutable",
                "name": "owner",
                "nameLocation": "2006:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 89,
                "src": "1990:21:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 85,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1990:15:1",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 88,
                "mutability": "mutable",
                "name": "numOfEmployees",
                "nameLocation": "2149:14:1",
                "nodeType": "VariableDeclaration",
                "scope": 89,
                "src": "2143:20:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 87,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "2143:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Organization",
            "nameLocation": "1966:12:1",
            "nodeType": "StructDefinition",
            "scope": 347,
            "src": "1959:259:1",
            "visibility": "public"
          },
          {
            "body": {
              "id": 114,
              "nodeType": "Block",
              "src": "2478:173:1",
              "statements": [
                {
                  "condition": {
                    "baseExpression": {
                      "id": 97,
                      "name": "isEmployer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "2492:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 99,
                    "indexExpression": {
                      "id": 98,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92,
                      "src": "2503:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2492:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "baseExpression": {
                        "id": 103,
                        "name": "isEmployee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "2553:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 105,
                      "indexExpression": {
                        "id": 104,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "2564:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2553:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 111,
                      "nodeType": "Block",
                      "src": "2609:35:1",
                      "statements": [
                        {
                          "expression": {
                            "hexValue": "33",
                            "id": 109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2631:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "functionReturnParameters": 96,
                          "id": 110,
                          "nodeType": "Return",
                          "src": "2624:8:1"
                        }
                      ]
                    },
                    "id": 112,
                    "nodeType": "IfStatement",
                    "src": "2549:95:1",
                    "trueBody": {
                      "id": 108,
                      "nodeType": "Block",
                      "src": "2570:35:1",
                      "statements": [
                        {
                          "expression": {
                            "hexValue": "32",
                            "id": 106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2592:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "functionReturnParameters": 96,
                          "id": 107,
                          "nodeType": "Return",
                          "src": "2585:8:1"
                        }
                      ]
                    }
                  },
                  "id": 113,
                  "nodeType": "IfStatement",
                  "src": "2489:155:1",
                  "trueBody": {
                    "id": 102,
                    "nodeType": "Block",
                    "src": "2509:35:1",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "31",
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2531:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 96,
                        "id": 101,
                        "nodeType": "Return",
                        "src": "2524:8:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 90,
              "nodeType": "StructuredDocumentation",
              "src": "2226:181:1",
              "text": " @notice - This function is used to determine the type of user\n 1 = employer. 2 = employee. 3 = unenrolled\n @param user - The address of the user."
            },
            "functionSelector": "8b3f863f",
            "id": 115,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserType",
            "nameLocation": "2422:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "2442:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "2434:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2434:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2433:14:1"
            },
            "returnParameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "2470:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2470:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2469:9:1"
            },
            "scope": 347,
            "src": "2413:238:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 178,
              "nodeType": "Block",
              "src": "2843:484:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 124,
                          "name": "isEmployer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "2862:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 127,
                        "indexExpression": {
                          "expression": {
                            "id": 125,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2873:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2873:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2862:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920616e20456d706c6f7965722063616e206d616b6520746869732072657175657374",
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2886:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3be4d26246e2bce2379a9e4d5831e0ca9f90360d730d99a00e3c2328d8c7a9e2",
                          "typeString": "literal_string \"Only an Employer can make this request\""
                        },
                        "value": "Only an Employer can make this request"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3be4d26246e2bce2379a9e4d5831e0ca9f90360d730d99a00e3c2328d8c7a9e2",
                          "typeString": "literal_string \"Only an Employer can make this request\""
                        }
                      ],
                      "id": 123,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2854:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2854:73:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "2854:73:1"
                },
                {
                  "assignments": [
                    132
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 132,
                      "mutability": "mutable",
                      "name": "numOfEmployees",
                      "nameLocation": "3003:14:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 178,
                      "src": "2997:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 131,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2997:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 138,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 133,
                        "name": "employer_Organization",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "3020:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Organization_$89_storage_$",
                          "typeString": "mapping(address => struct User.Organization storage ref)"
                        }
                      },
                      "id": 136,
                      "indexExpression": {
                        "expression": {
                          "id": 134,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3042:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3042:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3020:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Organization_$89_storage",
                        "typeString": "struct User.Organization storage ref"
                      }
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "numOfEmployees",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 88,
                    "src": "3020:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2997:71:1"
                },
                {
                  "assignments": [
                    143
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 143,
                      "mutability": "mutable",
                      "name": "employees",
                      "nameLocation": "3097:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 178,
                      "src": "3079:27:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Employee_$84_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct User.Employee[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 141,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 140,
                            "name": "Employee",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 84,
                            "src": "3079:8:1"
                          },
                          "referencedDeclaration": 84,
                          "src": "3079:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Employee_$84_storage_ptr",
                            "typeString": "struct User.Employee"
                          }
                        },
                        "id": 142,
                        "nodeType": "ArrayTypeName",
                        "src": "3079:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Employee_$84_storage_$dyn_storage_ptr",
                          "typeString": "struct User.Employee[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 150,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 148,
                        "name": "numOfEmployees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 132,
                        "src": "3124:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3109:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Employee_$84_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct User.Employee memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 145,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 144,
                            "name": "Employee",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 84,
                            "src": "3113:8:1"
                          },
                          "referencedDeclaration": 84,
                          "src": "3113:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Employee_$84_storage_ptr",
                            "typeString": "struct User.Employee"
                          }
                        },
                        "id": 146,
                        "nodeType": "ArrayTypeName",
                        "src": "3113:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Employee_$84_storage_$dyn_storage_ptr",
                          "typeString": "struct User.Employee[]"
                        }
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3109:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Employee_$84_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct User.Employee memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3079:60:1"
                },
                {
                  "body": {
                    "id": 174,
                    "nodeType": "Block",
                    "src": "3205:88:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 161,
                              "name": "employees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "3220:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Employee_$84_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct User.Employee memory[] memory"
                              }
                            },
                            "id": 163,
                            "indexExpression": {
                              "id": 162,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "3230:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3220:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Employee_$84_memory_ptr",
                              "typeString": "struct User.Employee memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 164,
                                "name": "member_Organization",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65,
                                "src": "3239:19:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint8_$_t_struct$_Employee_$84_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint8 => struct User.Employee storage ref))"
                                }
                              },
                              "id": 167,
                              "indexExpression": {
                                "expression": {
                                  "id": 165,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3259:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 166,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3259:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3239:31:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Employee_$84_storage_$",
                                "typeString": "mapping(uint8 => struct User.Employee storage ref)"
                              }
                            },
                            "id": 171,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 168,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 152,
                                "src": "3271:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 169,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3279:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "3271:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3239:42:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Employee_$84_storage",
                              "typeString": "struct User.Employee storage ref"
                            }
                          },
                          "src": "3220:61:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Employee_$84_memory_ptr",
                            "typeString": "struct User.Employee memory"
                          }
                        },
                        "id": 173,
                        "nodeType": "ExpressionStatement",
                        "src": "3220:61:1"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 155,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 152,
                      "src": "3172:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 156,
                      "name": "numOfEmployees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 132,
                      "src": "3180:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3172:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 175,
                  "initializationExpression": {
                    "assignments": [
                      152
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 152,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "3161:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 175,
                        "src": "3155:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 151,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3155:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 154,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3169:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3155:15:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3196:7:1",
                      "subExpression": {
                        "id": 158,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 152,
                        "src": "3196:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 160,
                    "nodeType": "ExpressionStatement",
                    "src": "3196:7:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "3150:143:1"
                },
                {
                  "expression": {
                    "id": 176,
                    "name": "employees",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 143,
                    "src": "3310:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Employee_$84_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct User.Employee memory[] memory"
                    }
                  },
                  "functionReturnParameters": 122,
                  "id": 177,
                  "nodeType": "Return",
                  "src": "3303:16:1"
                }
              ]
            },
            "documentation": {
              "id": 116,
              "nodeType": "StructuredDocumentation",
              "src": "2659:112:1",
              "text": " @notice - This function is used to determine if the user is an employee of an organization."
            },
            "functionSelector": "0a67a48d",
            "id": 179,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fetchEmployees",
            "nameLocation": "2786:14:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2800:2:1"
            },
            "returnParameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 121,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "2824:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Employee_$84_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct User.Employee[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 119,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 118,
                        "name": "Employee",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 84,
                        "src": "2824:8:1"
                      },
                      "referencedDeclaration": 84,
                      "src": "2824:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$84_storage_ptr",
                        "typeString": "struct User.Employee"
                      }
                    },
                    "id": 120,
                    "nodeType": "ArrayTypeName",
                    "src": "2824:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Employee_$84_storage_$dyn_storage_ptr",
                      "typeString": "struct User.Employee[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2823:19:1"
            },
            "scope": 347,
            "src": "2777:550:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 218,
              "nodeType": "Block",
              "src": "3457:416:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3490:23:1",
                        "subExpression": {
                          "baseExpression": {
                            "id": 184,
                            "name": "isEmployer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "3491:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 187,
                          "indexExpression": {
                            "expression": {
                              "id": 185,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3502:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 186,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3502:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3491:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752061726520616c7265616479207265676973746572656420617320616e20456d706c6f796572",
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3528:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a014784f013dd3fe3cec43464793b8d71bd166f6b8d95418a86f63e2589705f",
                          "typeString": "literal_string \"You are already registered as an Employer\""
                        },
                        "value": "You are already registered as an Employer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a014784f013dd3fe3cec43464793b8d71bd166f6b8d95418a86f63e2589705f",
                          "typeString": "literal_string \"You are already registered as an Employer\""
                        }
                      ],
                      "id": 183,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3468:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3468:114:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "3468:114:1"
                },
                {
                  "assignments": [
                    194
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 194,
                      "mutability": "mutable",
                      "name": "organization",
                      "nameLocation": "3653:12:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 218,
                      "src": "3633:32:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Organization_$89_memory_ptr",
                        "typeString": "struct User.Organization"
                      },
                      "typeName": {
                        "id": 193,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 192,
                          "name": "Organization",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89,
                          "src": "3633:12:1"
                        },
                        "referencedDeclaration": 89,
                        "src": "3633:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Organization_$89_storage_ptr",
                          "typeString": "struct User.Organization"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 203,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 198,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3711:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3711:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3703:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 196,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3703:8:1",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3703:19:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3753:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 195,
                      "name": "Organization",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "3668:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Organization_$89_storage_ptr_$",
                        "typeString": "type(struct User.Organization storage pointer)"
                      }
                    },
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "owner",
                      "numOfEmployees"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "3668:98:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Organization_$89_memory_ptr",
                      "typeString": "struct User.Organization memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3633:133:1"
                },
                {
                  "expression": {
                    "id": 209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 204,
                        "name": "employer_Organization",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "3777:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Organization_$89_storage_$",
                          "typeString": "mapping(address => struct User.Organization storage ref)"
                        }
                      },
                      "id": 207,
                      "indexExpression": {
                        "expression": {
                          "id": 205,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3799:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3799:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3777:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Organization_$89_storage",
                        "typeString": "struct User.Organization storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 208,
                      "name": "organization",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 194,
                      "src": "3813:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Organization_$89_memory_ptr",
                        "typeString": "struct User.Organization memory"
                      }
                    },
                    "src": "3777:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Organization_$89_storage",
                      "typeString": "struct User.Organization storage ref"
                    }
                  },
                  "id": 210,
                  "nodeType": "ExpressionStatement",
                  "src": "3777:48:1"
                },
                {
                  "expression": {
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 211,
                        "name": "isEmployer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "3836:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 214,
                      "indexExpression": {
                        "expression": {
                          "id": 212,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3847:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3847:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3836:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3861:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3836:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "3836:29:1"
                }
              ]
            },
            "documentation": {
              "id": 180,
              "nodeType": "StructuredDocumentation",
              "src": "3335:83:1",
              "text": " @notice - This function is used to create a new employer/owner"
            },
            "functionSelector": "30242b76",
            "id": 219,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createEmployer",
            "nameLocation": "3433:14:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3447:2:1"
            },
            "returnParameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3457:0:1"
            },
            "scope": 347,
            "src": "3424:449:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 299,
              "nodeType": "Block",
              "src": "4206:902:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 228,
                          "name": "isEmployer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "4225:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 231,
                        "indexExpression": {
                          "expression": {
                            "id": 229,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4236:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4236:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4225:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920616e20656d706c6f7965722063616e206d616b6520746869732072657175657374",
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4249:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_281258d9cf6edfe93f63d6df9f03ebf04b784e3822c6ead2a10b2edcd1112463",
                          "typeString": "literal_string \"Only an employer can make this request\""
                        },
                        "value": "Only an employer can make this request"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_281258d9cf6edfe93f63d6df9f03ebf04b784e3822c6ead2a10b2edcd1112463",
                          "typeString": "literal_string \"Only an employer can make this request\""
                        }
                      ],
                      "id": 227,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4217:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4217:73:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 234,
                  "nodeType": "ExpressionStatement",
                  "src": "4217:73:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4309:29:1",
                        "subExpression": {
                          "baseExpression": {
                            "id": 236,
                            "name": "isEmployee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73,
                            "src": "4310:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 238,
                          "indexExpression": {
                            "id": 237,
                            "name": "_employeeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 222,
                            "src": "4321:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4310:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456d706c6f79656520697320616c7265616479207265676973746572656420746f20616e206f7267616e697a6174696f6e",
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4340:51:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f75202a11d9e6d1f88f37bd99e67f91a4030c943fd82324c1edb54cc330968b5",
                          "typeString": "literal_string \"Employee is already registered to an organization\""
                        },
                        "value": "Employee is already registered to an organization"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f75202a11d9e6d1f88f37bd99e67f91a4030c943fd82324c1edb54cc330968b5",
                          "typeString": "literal_string \"Employee is already registered to an organization\""
                        }
                      ],
                      "id": 235,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4301:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4301:91:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 242,
                  "nodeType": "ExpressionStatement",
                  "src": "4301:91:1"
                },
                {
                  "assignments": [
                    245
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 245,
                      "mutability": "mutable",
                      "name": "employee",
                      "nameLocation": "4450:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 299,
                      "src": "4434:24:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$84_memory_ptr",
                        "typeString": "struct User.Employee"
                      },
                      "typeName": {
                        "id": 244,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 243,
                          "name": "Employee",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 84,
                          "src": "4434:8:1"
                        },
                        "referencedDeclaration": 84,
                        "src": "4434:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Employee_$84_storage_ptr",
                          "typeString": "struct User.Employee"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 252,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 247,
                        "name": "_employeeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "4495:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 248,
                        "name": "_employeeName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "4536:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 249,
                          "name": "Access",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "4572:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Access_$76_$",
                            "typeString": "type(enum User.Access)"
                          }
                        },
                        "id": 250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Locked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 74,
                        "src": "4572:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Access_$76",
                          "typeString": "enum User.Access"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_enum$_Access_$76",
                          "typeString": "enum User.Access"
                        }
                      ],
                      "id": 246,
                      "name": "Employee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "4461:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Employee_$84_storage_ptr_$",
                        "typeString": "type(struct User.Employee storage pointer)"
                      }
                    },
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "_address",
                      "username",
                      "access"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "4461:136:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Employee_$84_memory_ptr",
                      "typeString": "struct User.Employee memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4434:163:1"
                },
                {
                  "assignments": [
                    254
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 254,
                      "mutability": "mutable",
                      "name": "employeeId",
                      "nameLocation": "4664:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 299,
                      "src": "4658:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 253,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "4658:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 262,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 255,
                          "name": "employer_Organization",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "4677:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Organization_$89_storage_$",
                            "typeString": "mapping(address => struct User.Organization storage ref)"
                          }
                        },
                        "id": 258,
                        "indexExpression": {
                          "expression": {
                            "id": 256,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4699:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4699:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4677:33:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Organization_$89_storage",
                          "typeString": "struct User.Organization storage ref"
                        }
                      },
                      "id": 259,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "numOfEmployees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88,
                      "src": "4677:48:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4728:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4677:52:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4658:71:1"
                },
                {
                  "expression": {
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 263,
                          "name": "employer_Organization",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "4776:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Organization_$89_storage_$",
                            "typeString": "mapping(address => struct User.Organization storage ref)"
                          }
                        },
                        "id": 266,
                        "indexExpression": {
                          "expression": {
                            "id": 264,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4798:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4798:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4776:33:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Organization_$89_storage",
                          "typeString": "struct User.Organization storage ref"
                        }
                      },
                      "id": 267,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numOfEmployees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88,
                      "src": "4776:48:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 268,
                      "name": "employeeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 254,
                      "src": "4827:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4776:61:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 270,
                  "nodeType": "ExpressionStatement",
                  "src": "4776:61:1"
                },
                {
                  "expression": {
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 271,
                        "name": "isEmployee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "4878:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 273,
                      "indexExpression": {
                        "id": 272,
                        "name": "_employeeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "4889:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4878:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4909:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4878:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "4878:35:1"
                },
                {
                  "expression": {
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 277,
                        "name": "employee_Employer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "4924:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 279,
                      "indexExpression": {
                        "id": 278,
                        "name": "_employeeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "4942:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4924:35:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 280,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "4962:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4962:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4924:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 283,
                  "nodeType": "ExpressionStatement",
                  "src": "4924:48:1"
                },
                {
                  "expression": {
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 284,
                        "name": "employee_AccountDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "4983:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$84_storage_$",
                          "typeString": "mapping(address => struct User.Employee storage ref)"
                        }
                      },
                      "id": 286,
                      "indexExpression": {
                        "id": 285,
                        "name": "_employeeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "5007:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4983:41:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$84_storage",
                        "typeString": "struct User.Employee storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 287,
                      "name": "employee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "5027:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$84_memory_ptr",
                        "typeString": "struct User.Employee memory"
                      }
                    },
                    "src": "4983:52:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Employee_$84_storage",
                      "typeString": "struct User.Employee storage ref"
                    }
                  },
                  "id": 289,
                  "nodeType": "ExpressionStatement",
                  "src": "4983:52:1"
                },
                {
                  "expression": {
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 290,
                          "name": "member_Organization",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "5046:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint8_$_t_struct$_Employee_$84_storage_$_$",
                            "typeString": "mapping(address => mapping(uint8 => struct User.Employee storage ref))"
                          }
                        },
                        "id": 294,
                        "indexExpression": {
                          "expression": {
                            "id": 291,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5066:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5066:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5046:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Employee_$84_storage_$",
                          "typeString": "mapping(uint8 => struct User.Employee storage ref)"
                        }
                      },
                      "id": 295,
                      "indexExpression": {
                        "id": 293,
                        "name": "employeeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 254,
                        "src": "5078:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5046:43:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$84_storage",
                        "typeString": "struct User.Employee storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 296,
                      "name": "employee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "5092:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$84_memory_ptr",
                        "typeString": "struct User.Employee memory"
                      }
                    },
                    "src": "5046:54:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Employee_$84_storage",
                      "typeString": "struct User.Employee storage ref"
                    }
                  },
                  "id": 298,
                  "nodeType": "ExpressionStatement",
                  "src": "5046:54:1"
                }
              ]
            },
            "documentation": {
              "id": 220,
              "nodeType": "StructuredDocumentation",
              "src": "3881:236:1",
              "text": " @notice - This function is used to add a employee to the organization owned by an employer.\n @param _employeeAddress - The address of the employee.\n @param _employeeName - The username of the employee."
            },
            "functionSelector": "a502e808",
            "id": 300,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addEmployee",
            "nameLocation": "4132:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 222,
                  "mutability": "mutable",
                  "name": "_employeeAddress",
                  "nameLocation": "4152:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "4144:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 221,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4144:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 224,
                  "mutability": "mutable",
                  "name": "_employeeName",
                  "nameLocation": "4184:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "4170:27:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 223,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4170:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4143:55:1"
            },
            "returnParameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4206:0:1"
            },
            "scope": 347,
            "src": "4123:985:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 345,
              "nodeType": "Block",
              "src": "5329:487:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 307,
                          "name": "isEmployer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "5348:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 310,
                        "indexExpression": {
                          "expression": {
                            "id": 308,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5359:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5359:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5348:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920616e20656d706c6f7965722063616e206d616b6520746869732072657175657374",
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5372:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_281258d9cf6edfe93f63d6df9f03ebf04b784e3822c6ead2a10b2edcd1112463",
                          "typeString": "literal_string \"Only an employer can make this request\""
                        },
                        "value": "Only an employer can make this request"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_281258d9cf6edfe93f63d6df9f03ebf04b784e3822c6ead2a10b2edcd1112463",
                          "typeString": "literal_string \"Only an employer can make this request\""
                        }
                      ],
                      "id": 306,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5340:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5340:73:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 313,
                  "nodeType": "ExpressionStatement",
                  "src": "5340:73:1"
                },
                {
                  "assignments": [
                    316
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 316,
                      "mutability": "mutable",
                      "name": "currentAccess",
                      "nameLocation": "5460:13:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 345,
                      "src": "5453:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Access_$76",
                        "typeString": "enum User.Access"
                      },
                      "typeName": {
                        "id": 315,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 314,
                          "name": "Access",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 76,
                          "src": "5453:6:1"
                        },
                        "referencedDeclaration": 76,
                        "src": "5453:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Access_$76",
                          "typeString": "enum User.Access"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 321,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 317,
                        "name": "employee_AccountDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "5476:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$84_storage_$",
                          "typeString": "mapping(address => struct User.Employee storage ref)"
                        }
                      },
                      "id": 319,
                      "indexExpression": {
                        "id": 318,
                        "name": "_employeeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 303,
                        "src": "5500:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5476:41:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$84_storage",
                        "typeString": "struct User.Employee storage ref"
                      }
                    },
                    "id": 320,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "access",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 83,
                    "src": "5476:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Access_$76",
                      "typeString": "enum User.Access"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5453:71:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Access_$76",
                      "typeString": "enum User.Access"
                    },
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 322,
                      "name": "currentAccess",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 316,
                      "src": "5587:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Access_$76",
                        "typeString": "enum User.Access"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 323,
                        "name": "Access",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "5604:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Access_$76_$",
                          "typeString": "type(enum User.Access)"
                        }
                      },
                      "id": 324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "5604:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Access_$76",
                        "typeString": "enum User.Access"
                      }
                    },
                    "src": "5587:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 343,
                    "nodeType": "Block",
                    "src": "5718:91:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 335,
                                "name": "employee_AccountDetails",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53,
                                "src": "5733:23:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$84_storage_$",
                                  "typeString": "mapping(address => struct User.Employee storage ref)"
                                }
                              },
                              "id": 337,
                              "indexExpression": {
                                "id": 336,
                                "name": "_employeeAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 303,
                                "src": "5757:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5733:41:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Employee_$84_storage",
                                "typeString": "struct User.Employee storage ref"
                              }
                            },
                            "id": 338,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "access",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 83,
                            "src": "5733:48:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Access_$76",
                              "typeString": "enum User.Access"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 339,
                              "name": "Access",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "5784:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Access_$76_$",
                                "typeString": "type(enum User.Access)"
                              }
                            },
                            "id": 340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Locked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 74,
                            "src": "5784:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Access_$76",
                              "typeString": "enum User.Access"
                            }
                          },
                          "src": "5733:64:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Access_$76",
                            "typeString": "enum User.Access"
                          }
                        },
                        "id": 342,
                        "nodeType": "ExpressionStatement",
                        "src": "5733:64:1"
                      }
                    ]
                  },
                  "id": 344,
                  "nodeType": "IfStatement",
                  "src": "5583:226:1",
                  "trueBody": {
                    "id": 334,
                    "nodeType": "Block",
                    "src": "5619:93:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 326,
                                "name": "employee_AccountDetails",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53,
                                "src": "5634:23:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$84_storage_$",
                                  "typeString": "mapping(address => struct User.Employee storage ref)"
                                }
                              },
                              "id": 328,
                              "indexExpression": {
                                "id": 327,
                                "name": "_employeeAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 303,
                                "src": "5658:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5634:41:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Employee_$84_storage",
                                "typeString": "struct User.Employee storage ref"
                              }
                            },
                            "id": 329,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "access",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 83,
                            "src": "5634:48:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Access_$76",
                              "typeString": "enum User.Access"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 330,
                              "name": "Access",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "5685:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Access_$76_$",
                                "typeString": "type(enum User.Access)"
                              }
                            },
                            "id": 331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Unlocked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 75,
                            "src": "5685:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Access_$76",
                              "typeString": "enum User.Access"
                            }
                          },
                          "src": "5634:66:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Access_$76",
                            "typeString": "enum User.Access"
                          }
                        },
                        "id": 333,
                        "nodeType": "ExpressionStatement",
                        "src": "5634:66:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 301,
              "nodeType": "StructuredDocumentation",
              "src": "5116:152:1",
              "text": " @notice - This function is used to change the access of an employee.\n @param _employeeAddress - The address of the employee."
            },
            "functionSelector": "f403688a",
            "id": 346,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeAccess",
            "nameLocation": "5283:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 303,
                  "mutability": "mutable",
                  "name": "_employeeAddress",
                  "nameLocation": "5304:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 346,
                  "src": "5296:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 302,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5296:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5295:26:1"
            },
            "returnParameters": {
              "id": 305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5329:0:1"
            },
            "scope": 347,
            "src": "5274:542:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 348,
        "src": "200:5619:1",
        "usedErrors": []
      }
    ],
    "src": "47:5774:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {},
      "links": {},
      "address": "0x2646E8Ac94852C6D54dCe5Ad1563Cd7290757682",
      "transactionHash": "0x52c7308d1fa575bfa0cca670dbdf802a7a97890f635aead695f68914613d4b96"
    },
    "80001": {
      "events": {},
      "links": {},
      "address": "0xD631f91d1114aD52778c398CEdfDdb381fC632c4",
      "transactionHash": "0xec784ea70c43d82bc18feafacd1fd638508fd8668dbe1a588f21e2dae707d518"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-03-18T14:28:50.575Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addEmployee(address,string)": {
        "params": {
          "_employeeAddress": "- The address of the employee.",
          "_employeeName": "- The username of the employee."
        }
      },
      "changeAccess(address)": {
        "params": {
          "_employeeAddress": "- The address of the employee."
        }
      },
      "getUserType(address)": {
        "params": {
          "user": "- The address of the user."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addEmployee(address,string)": {
        "notice": "- This function is used to add a employee to the organization owned by an employer."
      },
      "changeAccess(address)": {
        "notice": "- This function is used to change the access of an employee."
      },
      "createEmployer()": {
        "notice": "- This function is used to create a new employer/owner"
      },
      "fetchEmployees()": {
        "notice": "- This function is used to determine if the user is an employee of an organization."
      },
      "getUserType(address)": {
        "notice": "- This function is used to determine the type of user 1 = employer. 2 = employee. 3 = unenrolled"
      }
    },
    "version": 1
  }
}